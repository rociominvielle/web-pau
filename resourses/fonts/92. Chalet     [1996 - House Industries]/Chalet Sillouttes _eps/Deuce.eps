%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(TM) 3.2%%AI8_CreatorVersion: 9.0%%For: (Rich Roat) (House Industries)%%Title: (Deuce.eps)%%CreationDate: 5/1/02 12:39 PM%%BoundingBox: 74 289 540 502%%DocumentProcessColors: Black%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0%%+ procset Adobe_cshow 1.1 0%%+ procset Adobe_customcolor 1.0 0%%+ procset Adobe_pattern_AI3 1.0 0%%+ procset Adobe_Illustrator_AI3 1.0 1%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI3_TemplateBox: 306.5 395.5 306.5 395.5%AI3_TileBox: 30.2354 32.5293 582.2354 760.5293%AI3_DocumentPreview: Macintosh_ColorPic%%PageOrigin:30.2354 32.5293%%AI3_PaperRect:-30 761 582 -31%%AI3_Margin:30 -33 -30 31%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%%EndComments%%BeginProlog%%BeginResource: procset Adobe_packedarray 2.0 0%%Title: (Packed Array Operators)%%Version: 2.0 0%%CreationDate: (8/2/90) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_packedarray 5 dict dup begin put/initialize{/packedarray where	{	pop	}	{	Adobe_packedarray begin	Adobe_packedarray		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall end	} ifelse} def/terminate{} def/packedarray{array astore readonly} def/setpacking{pop} def/currentpacking{false} defcurrentdict readonly pop end%%EndResourceAdobe_packedarray /initialize get exec%%BeginResource: procset Adobe_cshow 1.1 0%%Title: (cshow Operator)%%Version: 1.1 0%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 3 dict dup begin put/initialize{/cshow where	{	pop	}	{	userdict /Adobe_cshow_vars 1 dict dup begin put	/_cshow		{} def	Adobe_cshow begin	Adobe_cshow		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall end end	} ifelse} def/terminate{} def/cshow{exchAdobe_cshow_vars	exch /_cshow	exch put	{	0 0 Adobe_cshow_vars /_cshow get exec	} forall} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_customcolor 1.0 0%%Title: (Custom Color Operators)%%Version: 1.0 0%%CreationDate: (5/9/88) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_customcolor 5 dict dup begin put/initialize{/setcustomcolor where	{	pop	}	{	Adobe_customcolor begin	Adobe_customcolor		{		dup xcheck			{			bind			} if		pop pop		} forall end	Adobe_customcolor begin	} ifelse} def/terminate{currentdict Adobe_customcolor eq	{ end	} if} def/findcmykcustomcolor{5 packedarray}  def/setcustomcolor{exchaload pop pop4	{	4 index mul 4 1 roll	} repeat5 -1 roll popsetcmykcolor} def/setoverprint{pop} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_pattern_AI3 1.1 0%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)%%Version: 1.1 0%%CreationDate: (7/21/89) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_pattern_AI3 16 dict dup begin put/initialize{/definepattern where	{	pop	}	{	Adobe_pattern_AI3 begin	Adobe_pattern_AI3		{		dup xcheck			{			bind			} if		pop pop		} forall	mark	cachestatus 7 1 roll pop pop pop pop exch pop exch		{		{		10000 add		dup 2 index gt			{			exit			} if		dup setcachelimit		} loop		} stopped	cleartomark	} ifelse} def/terminate{currentdict Adobe_pattern_AI3 eq	{ end	} if} deferrordict/nocurrentpoint{popstop} puterrordict/invalidaccess{popstop} put/patternencoding256 array def0 1 255{patternencoding exch ( ) 2 copy exch 0 exch put cvn put} for/definepattern{17 dict begin/uniform exch def/cache exch def/key exch def/procarray exch def/mtx exch matrix invertmatrix def/height exch def/width exch def/ctm matrix currentmatrix def/ptm matrix def/str 32 string def/slice 9 dict defslice /s 1 putslice /q 256 procarray length div sqrt floor cvi putslice /b 0 put/FontBBox [0 0 0 0] def/FontMatrix mtx matrix copy def/Encoding patternencoding def/FontType 3 def/BuildChar	{	exch begin	/setstrokeadjust where {pop true setstrokeadjust} if	slice begin	dup q dup mul mod s idiv /i exch def	dup q dup mul mod s mod /j exch def	q dup mul idiv procarray exch get	/xl j width s div mul def	/xg j 1 add width s div mul def	/yl i height s div mul def	/yg i 1 add height s div mul def	uniform		{		1 1		}		{		width 0 dtransform		dup mul exch dup mul add sqrt dup 1 add exch div		0 height dtransform		dup mul exch dup mul add sqrt dup 1 add exch div		} ifelse	width 0 cache		{		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul		setcachedevice		}		{		setcharwidth		} ifelse	gsave	scale	newpath	xl yl moveto	xg yl lineto	xg yg lineto	xl yg lineto	closepath	clip	newpath end end	exec	grestore	} defkey currentdict definefontend} def/patterncachesize{gsavenewpath0 0 movetowidth 0 linetowidth height lineto0 height linetoclosepathpatternmatrix setmatrixpathbboxexch ceiling 4 -1 roll floor sub 3 1 rollceiling exch floor submul 1 addgrestore} def/patterncachelimit{cachestatus 7 1 roll 6 npop 8 mul} def/patternpath{exch dup begin setfontctm setmatrixconcatslice exch /b exch slice /q get dup mul mul putFontMatrix concatuniform	{	width 0 dtransform round width div exch round width div exch	0 height dtransform round height div exch height div exch	0 0 transform round exch round exch	ptm astore setmatrix	}	{	ptm currentmatrix pop	} ifelse{currentpoint} stopped not	{	2 npop	pathbbox	true	4 index 3 index eq	4 index 3 index eq	and		{		pop false			{			{2 npop}			{3 npop true}			{7 npop true}			{pop true}			pathforall			} stopped			{			5 npop true			} if		} if		{		height div ceiling height mul 4 1 roll		width div ceiling width mul 4 1 roll		height div floor height mul 4 1 roll		width div floor width mul 4 1 roll		2 index sub height div ceiling cvi exch		3 index sub width div ceiling cvi exch		4 2 roll moveto		FontMatrix mtx invertmatrix		dup dup 4 get exch 5 get rmoveto		ptm ptm concatmatrix pop		slice /s		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi		dup slice /q get gt			{			pop slice /q get			} if		put		0 1 slice /s get dup mul 1 sub			{			slice /b get add			gsave			0 1 str length 1 sub				{				str exch 2 index put				} for			pop			dup				{				gsave				ptm setmatrix				1 index str length idiv {str show} repeat				1 index str length mod str exch 0 exch getinterval show				grestore				0 height rmoveto				} repeat			grestore			} for		2 npop		}		{		4 npop		} ifelse	} ifend} def/patternclip{clip} def/patternstrokepath{strokepath} def/patternmatrixmatrix def/patternfill{dup type /dicttype eq	{	Adobe_pattern_AI3 /patternmatrix get	} ifgsavepatternclipAdobe_pattern_AI3 /patternpath get execgrestorenewpath} def/patternstroke{dup type /dicttype eq	{	Adobe_pattern_AI3 /patternmatrix get	} ifgsavepatternstrokepathtrue	{		{			{			newpath 			moveto			}			{			lineto			}			{			curveto			}			{			closepath			3 copy			Adobe_pattern_AI3 /patternfill get exec			} pathforall		3 npop		} stopped			{			5 npop			patternclip			Adobe_pattern_AI3 /patternfill get exec			} if	}	{	patternclip	Adobe_pattern_AI3 /patternfill get exec	} ifelsegrestorenewpath} def/patternashow{3 index type /dicttype eq	{	Adobe_pattern_AI3 /patternmatrix get 4 1 roll	} if	{	2 npop (0) exch	2 copy 0 exch put pop	gsave	false charpath currentpoint	6 index 6 index 6 index	Adobe_pattern_AI3 /patternfill get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshow5 npop} def/patternawidthshow{6 index type /dicttype eq	{	Adobe_pattern_AI3 /patternmatrix get 7 1 roll	} if	{	2 npop (0) exch	2 copy 0 exch put 	gsave	_sp eq {5 index 5 index rmoveto} if	false charpath currentpoint	9 index 9 index 9 index	Adobe_pattern_AI3 /patternfill get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshow8 npop} def/patternashowstroke{4 index type /dicttype eq	{	patternmatrix /patternmatrix get 5 1 roll	} if4 1 roll	{	2 npop (0) exch	2 copy 0 exch put pop	gsave	false charpath	currentpoint	4 index setmatrix	7 index 7 index 7 index	Adobe_pattern_AI3 /patternstroke get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshow6 npop} def/patternawidthshowstroke{7 index type /dicttype eq	{	patternmatrix /patternmatrix get 8 1 roll	} if7 1 roll	{	2 npop (0) exch	2 copy 0 exch put	gsave	_sp eq {5 index 5 index rmoveto} if	false charpath currentpoint	7 index setmatrix	10 index 10 index 10 index	Adobe_pattern_AI3 /patternstroke get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshow9 npop} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)%%Version: 1.1 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI3 71 dict dup begin put/initialize{userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put/_lp /none def/_pf {} def/_ps {} def/_psf {} def/_pss {} def/_pjsf {} def/_pjss {} def/_pola 0 def/_doClip 0 def/cf	currentflat def/_tm matrix def/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def /_renderEnd [null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_rise 0 def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading [0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fScl 0 def/_cnt 0 def/_hs 1 def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_wv 0 def/Tx {} def/Tj {} def/CRender {} def/_AI3_savepage {} def/_gf null def/_cf 4 array def/_if null def/_of false def/_fc {} def/_gs null def/_cs 4 array def/_is null def/_os false def/_sc {} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null defAdobe_Illustrator_AI3 beginAdobe_Illustrator_AI3 dup /nc get begin	{	dup xcheck		{		bind		} if	pop pop	} forallendendendAdobe_Illustrator_AI3 beginAdobe_Illustrator_AI3_vars beginnewpath} def/terminate{endend} def/_null def/ddef{Adobe_Illustrator_AI3_vars 3 1 roll put} def/xput{dup load dup length exch maxlength eq	{	dup dup load dup	length 2 mul dict copy def	} ifload begin def end} def/npop{	{	pop	} repeat} def/sw{dup length exch stringwidthexch 5 -1 roll 3 index mul add4 1 roll 3 1 roll mul add} def/swj{dup 4 1 rolldup length exch stringwidth exch 5 -1 roll 3 index mul add4 1 roll 3 1 roll mul add 6 2 roll /_cnt 0 ddef{1 index eq {/_cnt _cnt 1 add ddef} if} forall popexch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop} def/ss{4 1 roll	{	2 npop 	(0) exch 2 copy 0 exch put pop	gsave	false charpath currentpoint	4 index setmatrix	stroke	grestore	moveto	2 copy rmoveto	} exch cshow3 npop} def/jss{4 1 roll	{	2 npop 	(0) exch 2 copy 0 exch put 	gsave	_sp eq 		{		exch 6 index 6 index 6 index 5 -1 roll widthshow  		currentpoint		}		{		false charpath currentpoint		4 index setmatrix stroke		}ifelse	grestore	moveto	2 copy rmoveto	} exch cshow6 npop} def/sp{	{	2 npop (0) exch	2 copy 0 exch put pop	false charpath	2 copy rmoveto	} exch cshow2 npop} def/jsp{	{	2 npop 	(0) exch 2 copy 0 exch put 	_sp eq 		{		exch 5 index 5 index 5 index 5 -1 roll widthshow  		}		{		false charpath		}ifelse	2 copy rmoveto	} exch cshow5 npop} def/pl{transform0.25 sub round 0.25 add exch0.25 sub round 0.25 add exchitransform} def/setstrokeadjust where	{	pop true setstrokeadjust	/c	{	curveto	} def	/C	/c load def	/v	{	currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{	2 copy curveto	} def	/Y	/y load def	/l	{	lineto	} def	/L	/l load def	/m	{	moveto	} def	}	{	/c	{	pl curveto	} def	/C	/c load def	/v	{	currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{	pl 2 copy curveto	} def	/Y	/y load def	/l	{	pl lineto	} def	/L	/l load def	/m	{	pl moveto	} def	} ifelse/d{setdash} def/cf	{} def/i{dup 0 eq	{	pop cf	} ifsetflat} def/j{setlinejoin} def/J{setlinecap} def/M{setmiterlimit} def/w{setlinewidth} def/H{} def/h{closepath} def/N{_pola 0 eq 	{	_doClip 1 eq {clip /_doClip 0 ddef} if 	newpath	} 	{	/CRender {N} ddef	}ifelse} def/n{N} def/F{_pola 0 eq 	{	_doClip 1 eq 		{		gsave _pf grestore clip newpath /_lp /none ddef _fc 		/_doClip 0 ddef		}		{		_pf		}ifelse	} 	{	/CRender {F} ddef	}ifelse} def/f{closepathF} def/S{_pola 0 eq 	{	_doClip 1 eq 		{		gsave _ps grestore clip newpath /_lp /none ddef _sc 		/_doClip 0 ddef		}		{		_ps		}ifelse	} 	{	/CRender {S} ddef	}ifelse} def/s{closepathS} def/B{_pola 0 eq 	{	_doClip 1 eq	gsave F grestore 		{		gsave S grestore clip newpath /_lp /none ddef _sc		/_doClip 0 ddef		} 		{		S		}ifelse	}	{	/CRender {B} ddef	}ifelse} def/b{closepathB} def/W{/_doClip 1 ddef} def/*{count 0 ne 	{	dup type (stringtype) eq {pop} if	} if _pola 0 eq {newpath} if} def/u{} def/U{} def/q{_pola 0 eq {gsave} if} def/Q{_pola 0 eq {grestore} if} def/*u{_pola 1 add /_pola exch ddef} def/*U{_pola 1 sub /_pola exch ddef _pola 0 eq {CRender} if} def/D{pop} def/*w{} def/*W{} def/`{/_i save ddef6 1 roll 4 npopconcat popuserdict begin/showpage {} def0 setgray0 setlinecap1 setlinewidth0 setlinejoin10 setmiterlimit[] 0 setdash/setstrokeadjust where {pop false setstrokeadjust} ifnewpath0 setgrayfalse setoverprint} def/~{end_i restore} def/@{} def/&{} def/O{0 ne/_of exch ddef/_lp /none ddef} def/R{0 ne/_os exch ddef/_lp /none ddef} def/g{/_gf exch ddef/_fc{_lp /fill ne	{	_of setoverprint	_gf setgray	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/G{/_gs exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_gs setgray	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/k{_cf astore pop/_fc{_lp /fill ne	{	_of setoverprint	_cf aload pop setcmykcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/K{_cs astore pop/_sc{_lp /stroke ne	{	_os setoverprint	_cs aload pop setcmykcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/x{/_gf exch ddeffindcmykcustomcolor/_if exch ddef/_fc{_lp /fill ne	{	_of setoverprint	_if _gf 1 exch sub setcustomcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/X{/_gs exch ddeffindcmykcustomcolor/_is exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_is _gs 1 exch sub setcustomcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/dp{dup null eq{pop_dp 0 ne	{	0 1 _dp 1 sub _dl mod		{		_da exch get 3 get		} for	_dp 1 sub _dl mod 1 add packedarray	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll	definepattern pop	} if}{_dp 0 ne _dp _dl mod 0 eq and	{	null dp	} if7 packedarray _da exch _dp _dl mod exch put_dp _dl mod _da 0 get 4 get 2 packedarray/_dp _dp 1 add def} ifelse} def/E{_ed begindup 0 get type /arraytype ne	{	0		{		dup 1 add index type /arraytype eq			{			1 add			}			{			exit			} ifelse		} loop	array astore	} if/_dd exch def/_ury exch def/_urx exch def/_lly exch def/_llx exch def/_n exch def/_y 0 def/_dl 4 def/_dp 0 def/_da _dl array def0 1 _dd length 1 sub	{	/_d exch _dd exch get def	0 2 _d length 2 sub		{		/_x exch def		/_c _d _x get _ ne def		/_r _d _x 1 add get cvlit def		_r _ ne			{			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 				[				/save cvx				_llx neg _lly neg /translate cvx				_c					{					nc /begin cvx					} if				_r dup type /stringtype eq					{					cvx					}					{					{exec} /forall cvx					} ifelse				_c					{					/end cvx					} if				/restore cvx				] cvx			/_fn 12 _n length add string def			_y _fn cvs pop			/_y _y 1 add def			_fn 12 _n putinterval			_fn _c false dp			_d exch _x 1 add exch put			} if		} for	} fornull dp_n _dd /_pdend xput} def/fc{_fm dup concatmatrix pop} def/p{/_fm exch ddef9 -2 roll _pm translate fc7 -2 roll _pm scale fc5 -1 roll _pm rotate fc4 -2 roll exch 0 ne	{	dup _pm rotate fc	1 -1 _pm scale fc	neg _pm rotate fc	}	{	pop	} ifelsedup _pm rotate fcexch dup sin exch cos div 1 0 0 1 0 6 2 roll_pm astore fcneg _pm rotate fc_pd exch get /_fdd exch ddef/_pf{save/_doClip 0 ddef0 1 _fdd length 1 sub	{	/_fd exch _fdd exch get ddef	_fd	0 2 _fd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _fc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _fm			patternfill			}			{			pop			fill			} ifelse		grestore		pop		} for	pop	} forrestorenewpath} ddef/_psf{save/_doClip 0 ddef0 1 _fdd length 1 sub	{	/_fd exch _fdd exch get ddef	_fd	0 2 _fd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _fc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _fm			9 copy 6 npop patternashow			}			{			pop			6 copy 3 npop ashow			} ifelse		grestore		pop		} for	pop	} forrestore%3 npop newpathsw rmoveto} ddef/_pjsf{save/_doClip 0 ddef0 1 _fdd length 1 sub	{	/_fd exch _fdd exch get ddef	_fd	0 2 _fd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _fc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _fm			12 copy 6 npop patternawidthshow			}			{			pop 9 copy 3 npop awidthshow			} ifelse		grestore		pop		} for	pop	} forrestoreswj rmoveto} ddef/_lp /none ddef} def/sc{_sm dup concatmatrix pop} def/P{/_sm exch ddef9 -2 roll _pm translate sc7 -2 roll _pm scale sc5 -1 roll _pm rotate sc4 -2 roll exch 0 ne	{	dup _pm rotate sc	1 -1 _pm scale sc	neg _pm rotate sc	}	{	pop	} ifelsedup _pm rotate scexch dup sin exch cos div 1 0 0 1 0 6 2 roll_pm astore scneg _pm rotate sc_pd exch get /_sdd exch ddef/_ps{save/_doClip 0 ddef0 1 _sdd length 1 sub	{	/_sd exch _sdd exch get ddef	_sd	0 2 _sd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _sc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _sm			patternstroke			}			{			pop stroke			} ifelse		grestore		pop		} for	pop	} forrestorenewpath} ddef/_pss{save/_doClip 0 ddef0 1 _sdd length 1 sub	{	/_sd exch _sdd exch get ddef	_sd	0 2 _sd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _sc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _sm			10 copy 6 npop patternashowstroke			}			{			pop 7 copy 3 npop ss			} ifelse		grestore		pop		} for	pop	} forrestorepop sw rmoveto} ddef/_pjss{save/_doClip 0 ddef0 1 _sdd length 1 sub	{	/_sd exch _sdd exch get ddef	_sd	0 2 _sd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _sc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _sm			13 copy 6 npop patternawidthshowstroke			}			{			pop 10 copy 3 npop jss			} ifelse		grestore		pop		} for	pop	} forrestorepop swj rmoveto} ddef/_lp /none ddef} def/A{pop} def/nc 3 dict defnc begin/setgray{pop} bind def/setcmykcolor{4 npop} bind def/setcustomcolor{2 npop} bind defcurrentdict readonly pop endcurrentdict readonly pop endsetpacking/annotatepage{} def%%EndResource%%EndProlog%%BeginSetupAdobe_cshow /initialize get execAdobe_customcolor /initialize get execAdobe_pattern_AI3 /initialize get execAdobe_Illustrator_AI3 /initialize get exec%AI3_BeginPattern: (Azure Rings)(Azure Rings) 22.5 22.5 58.5 58.5 [%AI3_Tile(0 O 0 R 0.9569 0.9294 0 0 k 0.9569 0.9294 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1.75 w 4 M []0 d40.5 58.5 m40.5 48.5586 32.4409 40.5 22.5 40.5 c12.5591 40.5 4.5 48.5586 4.5 58.5 c4.5 68.4414 12.5591 76.5 22.5 76.5 c32.4409 76.5 40.5 68.4414 40.5 58.5 cs40.5 22.5 m40.5 12.5586 32.4409 4.5 22.5 4.5 c12.5591 4.5 4.5 12.5586 4.5 22.5 c4.5 32.4414 12.5591 40.5 22.5 40.5 c32.4409 40.5 40.5 32.4414 40.5 22.5 cs40.5 40.5 m40.5 30.5586 32.4409 22.5 22.5 22.5 c12.5591 22.5 4.5 30.5586 4.5 40.5 c4.5 50.4414 12.5591 58.5 22.5 58.5 c32.4409 58.5 40.5 50.4414 40.5 40.5 cs58.5 58.5 m58.5 48.5586 50.4409 40.5 40.5 40.5 c30.5591 40.5 22.5 48.5586 22.5 58.5 c22.5 68.4414 30.5591 76.5 40.5 76.5 c50.4409 76.5 58.5 68.4414 58.5 58.5 cs58.5 22.5 m58.5 12.5586 50.4409 4.5 40.5 4.5 c30.5591 4.5 22.5 12.5586 22.5 22.5 c22.5 32.4414 30.5591 40.5 40.5 40.5 c50.4409 40.5 58.5 32.4414 58.5 22.5 cs58.5 40.5 m58.5 30.5586 50.4409 22.5 40.5 22.5 c30.5591 22.5 22.5 30.5586 22.5 40.5 c22.5 50.4414 30.5591 58.5 40.5 58.5 c50.4409 58.5 58.5 50.4414 58.5 40.5 cs76.5 58.5 m76.5 48.5586 68.4409 40.5 58.5 40.5 c48.5591 40.5 40.5 48.5586 40.5 58.5 c40.5 68.4414 48.5591 76.5 58.5 76.5 c68.4409 76.5 76.5 68.4414 76.5 58.5 cs76.5 22.5 m76.5 12.5586 68.4409 4.5 58.5 4.5 c48.5591 4.5 40.5 12.5586 40.5 22.5 c40.5 32.4414 48.5591 40.5 58.5 40.5 c68.4409 40.5 76.5 32.4414 76.5 22.5 cs76.5 40.5 m76.5 30.5586 68.4409 22.5 58.5 22.5 c48.5591 22.5 40.5 30.5586 40.5 40.5 c40.5 50.4414 48.5591 58.5 58.5 58.5 c68.4409 58.5 76.5 50.4414 76.5 40.5 cs%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Camouflage)(Camouflage) 1 1 73 73 [%AI3_Tile(0 O 0 R 0.5961 0.1412 0.949 0.0275 k 0.5961 0.1412 0.949 0.0275 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d1 73 m1 1 L73 1 L73 73 L1 73 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.498 0.349 0.9725 0.2 k 0.498 0.349 0.9725 0.2 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d18.5449 73 m18.5449 1 L46.7832 1 L46.7832 73 L18.5449 73 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.1882 0.1098 0.9255 0.0157 k 0.1882 0.1098 0.9255 0.0157 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d11.9512 1 m11.9512 4.7129 9.2314 2.8813 9.2314 6.5938 c9.2314 10.2334 4.25 10.2334 4.25 13.8735 c4.25 17.4858 10.0313 17.4858 10.0313 21.0991 c10.0313 24.832 10.208 24.832 10.208 28.5654 c10.208 32.3071 5.5205 32.3071 5.5205 36.0469 c5.5205 39.7021 11.8838 39.7021 11.8838 43.356 c11.8838 47.0566 7.4609 47.0566 7.4609 50.7568 c7.4609 54.4043 5.7959 54.4043 5.7959 58.0542 c5.7959 61.7686 4.6631 61.7686 4.6631 65.4805 c4.6631 69.1636 11.9512 69.3184 11.9512 73 C27.9268 73 L27.9268 69.3184 22.0635 69.1636 22.0635 65.4805 c22.0635 61.7686 28.6631 61.7686 28.6631 58.0542 c28.6631 54.4043 25.1553 54.4043 25.1553 50.7568 c25.1553 47.0566 28.8145 47.0566 28.8145 43.356 c28.8145 39.7021 22.1191 39.7021 22.1191 36.0469 c22.1191 32.3071 26.3945 32.3071 26.3945 28.5654 c26.3945 24.832 24.4248 24.832 24.4248 21.0991 c24.4248 17.4858 20.3838 17.4858 20.3838 13.8735 c20.3838 10.2334 24.6055 10.2334 24.6055 6.5938 c24.6055 2.8813 27.9268 4.7129 27.9268 1 C11.9512 1 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.9255 0.2157 0.9647 0.0745 k 0.9255 0.2157 0.9647 0.0745 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d41.875 1 m41.875 4.7134 42.3867 2.8818 42.3867 6.5938 c42.3867 10.2334 40.5947 10.2334 40.5947 13.8735 c40.5947 17.4858 41.5742 17.4858 41.5742 21.0991 c41.5742 24.832 43.6484 24.832 43.6484 28.5659 c43.6484 32.3076 39.1709 32.3076 39.1709 36.0469 c39.1709 39.7026 39.7549 39.7026 39.7549 43.356 c39.7549 47.0566 45.3896 47.0566 45.3896 50.7568 c45.3896 54.4043 40.1055 54.4043 40.1055 58.0542 c40.1055 61.7686 40.6289 61.7686 40.6289 65.4805 c40.6289 69.1636 41.875 69.3184 41.875 73 C59.0752 73 L59.0752 69.4219 53.4805 70.1934 53.4805 66.6143 c53.4805 62.9136 55.8945 62.9136 55.8945 59.2153 c55.8945 55.502 61.0059 55.502 61.0059 51.7886 c61.0059 48.1489 60.5635 48.1489 60.5635 44.5103 c60.5635 40.897 59.9277 40.897 59.9277 37.2842 c59.9277 33.5508 56.3662 33.5508 56.3662 29.8169 c56.3662 26.0762 61.0908 26.0762 61.0908 22.3354 c61.0908 18.6812 52.6025 18.6812 52.6025 15.0264 c52.6025 11.3262 55.7461 11.3262 55.7461 7.6265 c55.7461 3.978 59.0752 4.6484 59.0752 1 C41.875 1 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Clown Attack)(Clown Attack) 5.25 11 41.25 47 [%AI3_Tile(0 O 0 R 0.9255 0 1 0 k 0.9255 0 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d17.5 18.25 m17.5 15.2119 15.0376 12.75 12 12.75 c8.9624 12.75 6.5 15.2119 6.5 18.25 c6.5 21.2881 8.9624 23.75 12 23.75 c15.0376 23.75 17.5 21.2881 17.5 18.25 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0078 0.9529 0 0 k 0.0078 0.9529 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d22.25 34.125 m22.25 31.2939 19.9556 29 17.125 29 c14.2944 29 12 31.2939 12 34.125 c12 36.9561 14.2944 39.25 17.125 39.25 c19.9556 39.25 22.25 36.9561 22.25 34.125 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0118 0.9608 0.9137 0 k 0.0118 0.9608 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d30 31.625 m30 29.4854 28.2646 27.75 26.125 27.75 c23.9849 27.75 22.25 29.4854 22.25 31.625 c22.25 33.7646 23.9849 35.5 26.125 35.5 c28.2646 35.5 30 33.7646 30 31.625 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0314 0.0196 0.9137 0 k 0.0314 0.0196 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d23.25 24.5 m23.25 22.4287 21.5713 20.75 19.5 20.75 c17.4287 20.75 15.75 22.4287 15.75 24.5 c15.75 26.5713 17.4287 28.25 19.5 28.25 c21.5713 28.25 23.25 26.5713 23.25 24.5 cf%AI6_EndPatternLayer) &(0 O 0 R 0.9569 0.9294 0 0 k 0.9569 0.9294 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d36 22.25 m36 19.0742 33.4258 16.5 30.25 16.5 c27.0742 16.5 24.5 19.0742 24.5 22.25 c24.5 25.4258 27.0742 28 30.25 28 c33.4258 28 36 25.4258 36 22.25 cf%AI6_EndPatternLayer) &(0 O 0 R 0.1882 0.1216 0.8 0.0157 k 0.1882 0.1216 0.8 0.0157 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d24.25 16.5 m24.25 14.8438 22.9067 13.5 21.25 13.5 c19.5933 13.5 18.25 14.8438 18.25 16.5 c18.25 18.1563 19.5933 19.5 21.25 19.5 c22.9067 19.5 24.25 18.1563 24.25 16.5 cf%AI6_EndPatternLayer) &(0 O 0 R 0.8353 0 0 0 k 0.8353 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d37.25 43.875 m37.25 39.5264 33.7236 36 29.375 36 c25.0264 36 21.5 39.5264 21.5 43.875 c21.5 48.2236 25.0264 51.75 29.375 51.75 c33.7236 51.75 37.25 48.2236 37.25 43.875 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0078 0.1961 0.9373 0 k 0.0078 0.1961 0.9373 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d38.75 26.625 m38.75 25.7275 38.0225 25 37.125 25 c36.2275 25 35.5 25.7275 35.5 26.625 c35.5 27.5225 36.2275 28.25 37.125 28.25 c38.0225 28.25 38.75 27.5225 38.75 26.625 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0196 0.5961 0.9137 0 k 0.0196 0.5961 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d19.875 42 m19.875 41.1025 19.1475 40.375 18.25 40.375 c17.3525 40.375 16.625 41.1025 16.625 42 c16.625 42.8975 17.3525 43.625 18.25 43.625 c19.1475 43.625 19.875 42.8975 19.875 42 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0118 0.9608 0.9137 0 k 0.0118 0.9608 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d12.75 28.125 m12.75 26.8135 11.6865 25.75 10.375 25.75 c9.0635 25.75 8 26.8135 8 28.125 c8 29.4365 9.0635 30.5 10.375 30.5 c11.6865 30.5 12.75 29.4365 12.75 28.125 cf%AI6_EndPatternLayer) &(0 O 0 R 0.9255 0 1 0 k 0.9255 0 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d43.25 33 m43.25 30.998 41.627 29.375 39.625 29.375 c37.623 29.375 36 30.998 36 33 c36 35.002 37.623 36.625 39.625 36.625 c41.627 36.625 43.25 35.002 43.25 33 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0314 0.0196 0.9137 0 k 0.0314 0.0196 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d13.25 43.75 m13.25 40.9883 11.0117 38.75 8.25 38.75 c5.4883 38.75 3.25 40.9883 3.25 43.75 c3.25 46.5117 5.4883 48.75 8.25 48.75 c11.0117 48.75 13.25 46.5117 13.25 43.75 cf%AI6_EndPatternLayer) &(0 O 0 R 0.3922 0.9451 0 0 k 0.3922 0.9451 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d6.5 22.25 m6.5 20.7314 5.2686 19.5 3.75 19.5 c2.2314 19.5 1 20.7314 1 22.25 c1 23.7686 2.2314 25 3.75 25 c5.2686 25 6.5 23.7686 6.5 22.25 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0235 0.0118 0.6 0 k 0.0235 0.0118 0.6 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d34.4883 32.75 m34.4883 31.9277 33.8223 31.2617 33 31.2617 c32.1777 31.2617 31.5117 31.9277 31.5117 32.75 c31.5117 33.5723 32.1777 34.2383 33 34.2383 c33.8223 34.2383 34.4883 33.5723 34.4883 32.75 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0314 0.0196 0.9137 0 k 0.0314 0.0196 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d49.25 43.75 m49.25 40.9883 47.0117 38.75 44.25 38.75 c41.4883 38.75 39.25 40.9883 39.25 43.75 c39.25 46.5117 41.4883 48.75 44.25 48.75 c47.0117 48.75 49.25 46.5117 49.25 43.75 cf%AI6_EndPatternLayer) &(0 O 0 R 0.3922 0.9451 0 0 k 0.3922 0.9451 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d42.5 22.25 m42.5 20.7314 41.2686 19.5 39.75 19.5 c38.2314 19.5 37 20.7314 37 22.25 c37 23.7686 38.2314 25 39.75 25 c41.2686 25 42.5 23.7686 42.5 22.25 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0314 0.0196 0.9137 0 k 0.0314 0.0196 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d49.25 7.752 m49.25 4.9902 47.0117 2.752 44.25 2.752 c41.4883 2.752 39.25 4.9902 39.25 7.752 c39.25 10.5137 41.4883 12.752 44.25 12.752 c47.0117 12.752 49.25 10.5137 49.25 7.752 cf%AI6_EndPatternLayer) &(0 O 0 R 0.8353 0 0 0 k 0.8353 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d37.25 7.875 m37.25 3.5264 33.7236 0 29.375 0 c25.0264 0 21.5 3.5264 21.5 7.875 c21.5 12.2236 25.0264 15.75 29.375 15.75 c33.7236 15.75 37.25 12.2236 37.25 7.875 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0314 0.0196 0.9137 0 k 0.0314 0.0196 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d13.25 7.75 m13.25 4.9883 11.0117 2.75 8.25 2.75 c5.4883 2.75 3.25 4.9883 3.25 7.75 c3.25 10.5117 5.4883 12.75 8.25 12.75 c11.0117 12.75 13.25 10.5117 13.25 7.75 cf%AI6_EndPatternLayer) &(0 O 0 R 0.9255 0 1 0 k 0.9255 0 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d7.25 33 m7.25 30.998 5.627 29.375 3.625 29.375 c1.623 29.375 0 30.998 0 33 c0 35.002 1.623 36.625 3.625 36.625 c5.627 36.625 7.25 35.002 7.25 33 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0235 0.4078 0 0 k 0.0235 0.4078 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d39.6533 16.0381 m39.6533 15.1064 38.8975 14.3506 37.9658 14.3506 c37.0342 14.3506 36.2783 15.1064 36.2783 16.0381 c36.2783 16.9697 37.0342 17.7256 37.9658 17.7256 c38.8975 17.7256 39.6533 16.9697 39.6533 16.0381 cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Green Tablecloth)(Green Tablecloth) 0 0 24 24 [%AI3_Tile(0 O 0 R 0.8 0.21 1 0 k 0.8 0.21 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d6 18 m0 18 L0 24 L6 24 L6 18 Lf18 18 m12 18 L12 24 L18 24 L18 18 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.3798 0.0997 0.4747 0 k 0.3798 0.0997 0.4747 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d12 18 m6 18 L6 24 L12 24 L12 18 Lf24 18 m18 18 L18 24 L24 24 L24 18 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d12 12 m6 12 L6 18 L12 18 L12 12 Lf24 12 m18 12 L18 18 L24 18 L24 12 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.3798 0.0997 0.4747 0 k 0.3798 0.0997 0.4747 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d6 12 m0 12 L0 18 L6 18 L6 12 Lf18 12 m12 12 L12 18 L18 18 L18 12 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.8 0.21 1 0 k 0.8 0.21 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d6 6 m0 6 L0 12 L6 12 L6 6 Lf18 6 m12 6 L12 12 L18 12 L18 6 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.3798 0.0997 0.4747 0 k 0.3798 0.0997 0.4747 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d12 6 m6 6 L6 12 L12 12 L12 6 Lf24 6 m18 6 L18 12 L24 12 L24 6 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d12 0 m6 0 L6 6 L12 6 L12 0 Lf24 0 m18 0 L18 6 L24 6 L24 0 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.3798 0.0997 0.4747 0 k 0.3798 0.0997 0.4747 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d6 0 m0 0 L0 6 L6 6 L6 0 Lf18 0 m12 0 L12 6 L18 6 L18 0 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Pyramids)(Pyramids) 1 1 19.5 19.5 [%AI3_Tile(0 O 0 R 0.1882 0.1294 0.102 0.0118 k 0.1882 0.1294 0.102 0.0118 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d1 19.5 m10.25 10.25 l19.5 19.5 l1 19.5 lf%AI6_EndPatternLayer) &(0 O 0 R 0.6235 0.4863 0.4863 0.4784 k 0.6235 0.4863 0.4863 0.4784 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d19.5 1 m10.25 10.25 l1 1 l19.5 1 lf%AI6_EndPatternLayer) &(0 O 0 R 0.3529 0.2549 0.2235 0.0667 k 0.3529 0.2549 0.2235 0.0667 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d1 1 m10.25 10.25 l1 19.5 l1 1 lf%AI6_EndPatternLayer) &(0 O 0 R 0.4902 0.3647 0.3451 0.2196 k 0.4902 0.3647 0.3451 0.2196 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d19.5 19.5 m10.25 10.25 l19.5 1 l19.5 19.5 lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Red Stripe)(Red Stripe) 37 19 73 55 [%AI3_Tile(0 O 0 R 0 0.9608 0.9137 0 k 0 0.9608 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 18 w 4 M []0 d37 37 m73 37 lS%AI6_EndPatternLayer) &] E%AI3_EndPattern%%EndSetup0 A*u0 O0 0 0 1 k0 J 0 j 1 w 4 M []0 d539.3379 353.5254 m539.3379 333.1357 L539.3379 332.083 538.4844 331.2295 537.4326 331.2295 C534.6328 331.2295 L534.6328 323.9463 L534.6328 323.4209 534.207 322.9932 533.6797 322.9932 C531.0479 322.9932 L530.5225 322.9932 530.0947 323.4209 530.0947 323.9463 C530.0947 331.2295 L493.1826 331.2295 L493.2734 330.9023 L493.3486 330.627 493.209 330.2871 492.9658 330.1465 C491.7383 329.4336 L491.7832 329.1934 491.8213 328.9512 491.8633 328.709 C511.5586 328.709 L513.3154 328.709 513.4502 328.4941 513.1338 327.2383 c512.7979 325.9063 512.5889 325.5137 511.4941 325.5137 C506.3965 325.5137 L505.0527 324.1719 L502.0273 324.1719 498.3301 323.1621 v496.2793 322.6025 493.9248 321.8369 492.2285 321.2666 C492.2256 321.2305 492.2256 321.1934 492.2227 321.1563 C493.4951 320.5996 L493.7549 320.4863 493.9297 320.1641 493.8867 319.8828 C493.2979 316.2324 L493.251 315.9492 492.9824 315.7012 492.7012 315.6738 C491.3447 315.5469 L491.2363 315.1133 491.1162 314.6836 490.9902 314.2559 C492.0879 313.459 L492.3145 313.291 492.418 312.9385 492.3145 312.6738 C490.957 309.2344 L490.8496 308.9697 490.5342 308.7842 490.2529 308.8193 C488.917 308.9824 L488.7168 308.5801 488.5088 308.1777 488.291 307.7842 C489.1787 306.7852 L489.3662 306.5723 489.3896 306.207 489.2334 305.9707 C487.168 302.9033 L487.0059 302.668 486.6572 302.5527 486.3926 302.6484 C485.1318 303.0928 L484.8467 302.7402 484.5527 302.3945 484.2549 302.0547 C484.9053 300.8906 L485.042 300.6445 484.9873 300.2813 484.7842 300.0859 C482.1084 297.5332 L481.9004 297.3359 481.5361 297.2988 481.2959 297.4502 C480.165 298.1504 L479.8105 297.8691 479.4502 297.5918 479.085 297.3223 C479.4678 296.0547 L479.5479 295.7832 479.417 295.4404 479.1748 295.293 C476.0146 293.375 L475.7686 293.2256 475.4053 293.2676 475.2041 293.4668 C474.2549 294.3896 L473.8477 294.1885 473.4336 293.9971 473.0156 293.8135 C473.1152 292.4941 L473.1367 292.2129 472.9355 291.9082 472.668 291.8164 C469.1699 290.6191 L468.8984 290.5293 468.5508 290.6475 468.3965 290.8828 C467.666 291.9961 L467.2246 291.8887 466.7832 291.7861 466.335 291.6982 C466.1494 290.3828 L466.1104 290.1035 465.8477 289.8457 465.5664 289.8145 C461.8916 289.3994 L461.6084 289.3672 461.2949 289.5586 461.1953 289.8232 C460.709 291.0879 L460.4668 291.082 460.2285 291.0684 459.9834 291.0684 c459.7754 291.0684 459.5723 291.082 459.3672 291.0859 C458.8945 289.8145 L458.7949 289.5518 458.4824 289.3564 458.2012 289.3867 C454.5254 289.7695 L454.2402 289.7988 453.9727 290.0527 453.9346 290.332 C453.7285 291.6816 L453.291 291.7676 452.8555 291.8652 452.4248 291.9688 C451.6836 290.8203 L451.5313 290.582 451.1855 290.458 450.916 290.5479 C447.4043 291.7109 L447.1348 291.8027 446.9297 292.1055 446.9502 292.3867 C447.043 293.7715 L446.6367 293.9492 446.2363 294.1309 445.8398 294.3242 C444.8574 293.3457 L444.6572 293.1465 444.293 293.1035 444.0488 293.2461 C440.8691 295.1377 L440.625 295.2842 440.4902 295.626 440.5703 295.8965 C440.9668 297.2607 L440.6191 297.5137 440.2754 297.7773 439.9375 298.0449 C438.7334 297.2793 L438.4941 297.1309 438.1289 297.1631 437.9229 297.3564 C435.2227 299.8848 L435.0156 300.0801 434.957 300.4434 435.0938 300.6904 C435.7891 301.9648 L435.5078 302.2852 435.2285 302.6045 434.959 302.9355 C433.5957 302.4375 L433.3311 302.3398 432.9795 302.4512 432.8203 302.6855 C430.7266 305.7344 L430.5664 305.9707 430.5869 306.3359 430.7744 306.5469 C431.7432 307.666 L431.5391 308.0293 431.3457 308.4014 431.1563 308.7744 C429.6855 308.5781 L429.4043 308.54 429.0879 308.7217 428.9805 308.9863 C427.5908 312.4141 L427.4863 312.6777 427.584 313.0303 427.8096 313.1992 C429.0215 314.0986 L428.9043 314.4922 428.7861 314.8887 428.6826 315.2891 C427.1836 315.4141 L426.9023 315.4375 426.6328 315.6855 426.583 315.9629 C425.9629 319.6094 L425.9141 319.8926 426.0869 320.2148 426.3457 320.3281 C427.7578 320.9648 L427.7275 321.3643 427.7031 321.7656 427.6875 322.1719 C426.2051 322.625 L425.9375 322.71 425.7266 323.0078 425.7383 323.293 C425.916 326.9863 L425.9277 327.2734 426.168 327.5508 426.4453 327.6074 C427.9785 327.9297 L428.0088 328.1348 428.0449 328.3359 428.0781 328.54 C423.0342 328.54 L423.0342 327.2588 L423.0342 326.2393 422.751 325.8516 421.6367 325.8516 C352.627 325.8516 L349.9941 325.8516 348.4102 327.1816 348.4102 329.7148 C348.4102 333.918 L343.1143 333.918 L343.1143 331.4004 L343.1143 328.7695 340.9824 326.6357 338.3496 326.6357 C325.5371 326.6357 L325.5371 325.2656 L325.5371 324.7383 325.1113 324.3125 324.5859 324.3125 C317.0547 324.3125 L316.5293 324.3125 316.1035 324.7383 316.1035 325.2656 C316.1035 326.6357 L286.1133 326.6357 L286.1133 325.2656 L286.1133 324.7383 285.6865 324.3125 285.1611 324.3125 C277.6309 324.3125 L277.105 324.3125 276.6787 324.7383 276.6787 325.2656 C276.6787 326.6357 L264.8906 326.6357 L262.2598 326.6357 260.127 328.7695 260.127 331.4004 C260.127 333.918 L254.3188 333.918 L255.1616 330.9023 L255.2373 330.627 255.0986 330.2871 254.854 330.1465 C253.6274 329.4336 L253.7065 329.0098 253.7832 328.582 253.8467 328.1514 C255.2271 327.876 L255.5049 327.8213 255.7441 327.5439 255.7617 327.2607 C255.9712 323.5693 L255.9849 323.2842 255.7773 322.9814 255.5073 322.8955 C254.1743 322.4697 L254.1626 322.0303 254.1426 321.5918 254.1123 321.1563 C255.3838 320.5996 L255.6431 320.4863 255.8188 320.1641 255.7749 319.8828 C255.1855 316.2324 L255.1387 315.9492 254.8716 315.7012 254.5898 315.6738 C253.2339 315.5469 L253.125 315.1133 253.0044 314.6836 252.8789 314.2559 C253.9756 313.459 L254.2036 313.291 254.3071 312.9385 254.2021 312.6738 C252.8442 309.2344 L252.7388 308.9697 252.4229 308.7842 252.1421 308.8193 C250.8066 308.9824 L250.6055 308.5801 250.3979 308.1777 250.1797 307.7842 C251.0669 306.7852 L251.2549 306.5723 251.2798 306.207 251.1211 305.9707 C249.0566 302.9033 L248.895 302.668 248.5464 302.5527 248.2808 302.6484 C247.0205 303.0928 L246.7358 302.7402 246.4419 302.3945 246.1436 302.0547 C246.7925 300.8906 L246.9307 300.6445 246.8774 300.2813 246.6719 300.0859 C243.9971 297.5332 L243.7891 297.3359 243.4248 297.2988 243.1841 297.4502 C242.0527 298.1504 L241.6992 297.8691 241.3403 297.5918 240.9727 297.3223 C241.356 296.0547 L241.4365 295.7832 241.3057 295.4404 241.0645 295.293 C237.9023 293.375 L237.6577 293.2256 237.293 293.2676 237.0918 293.4668 C236.1431 294.3896 L235.7354 294.1885 235.3218 293.9971 234.9038 293.8135 C235.0049 292.4941 L235.0264 292.2129 234.8252 291.9082 234.5571 291.8164 C231.0571 290.6191 L230.7866 290.5293 230.4395 290.6475 230.2852 290.8828 C229.5532 291.9961 L229.1123 291.8887 228.6714 291.7861 228.2246 291.6982 C228.0391 290.3828 L228 290.1035 227.7373 289.8457 227.4551 289.8145 C223.7813 289.3994 L223.4971 289.3672 223.1826 289.5586 223.0835 289.8232 C222.5981 291.0879 L222.356 291.082 222.1157 291.0684 221.8721 291.0684 c221.6646 291.0684 221.4609 291.082 221.2544 291.0859 C220.7817 289.8145 L220.6836 289.5518 220.3721 289.3564 220.0903 289.3867 C216.4131 289.7695 L216.1284 289.7988 215.8623 290.0527 215.8228 290.332 C215.6177 291.6816 L215.1792 291.7676 214.7446 291.8652 214.3125 291.9688 C213.5723 290.8203 L213.4194 290.582 213.0732 290.458 212.8047 290.5479 C209.2935 291.7109 L209.0229 291.8027 208.8193 292.1055 208.8389 292.3867 C208.9312 293.7715 L208.5269 293.9492 208.124 294.1309 207.729 294.3242 C206.7461 293.3457 L206.5454 293.1465 206.1821 293.1035 205.9375 293.2461 C202.7593 295.1377 L202.5137 295.2842 202.3794 295.626 202.46 295.8965 C202.856 297.2607 L202.5068 297.5137 202.1646 297.7773 201.8262 298.0449 C200.6221 297.2793 L200.3833 297.1309 200.0181 297.1631 199.8105 297.3564 C197.1123 299.8848 L196.9033 300.0801 196.8462 300.4434 196.9824 300.6904 C197.6787 301.9648 L197.3965 302.2852 197.1172 302.6045 196.8481 302.9355 C195.4849 302.4375 L195.2188 302.3398 194.8691 302.4512 194.7085 302.6855 C192.6152 305.7344 L192.4551 305.9707 192.4756 306.3359 192.6626 306.5469 C193.6323 307.666 L193.4287 308.0293 193.2339 308.4014 193.0449 308.7744 C191.5737 308.5781 L191.2939 308.54 190.9761 308.7217 190.8696 308.9863 C189.4805 312.4141 L189.373 312.6777 189.4722 313.0303 189.6997 313.1992 C190.9097 314.0986 L190.7915 314.4922 190.6753 314.8887 190.5718 315.2891 C189.0723 315.4141 L188.791 315.4375 188.52 315.6855 188.4727 315.9629 C187.8506 319.6094 L187.8037 319.8926 187.9756 320.2148 188.2339 320.3281 C189.6465 320.9648 L189.6167 321.3643 189.5918 321.7656 189.5767 322.1719 C188.0962 322.625 L187.8271 322.71 187.6147 323.0078 187.6289 323.293 C187.8042 326.9863 L187.8179 327.2734 188.0557 327.5508 188.3335 327.6074 C189.8682 327.9297 L189.9238 328.3242 189.9893 328.7168 190.0586 329.1084 C188.6919 329.8809 L188.4468 330.0195 188.3037 330.3574 188.3779 330.6328 C189.2656 333.918 L184.8638 333.918 L185.707 330.9023 L185.7827 330.627 185.644 330.2871 185.3999 330.1465 C184.1719 329.4336 L184.2524 329.0098 184.3286 328.582 184.3926 328.1514 C185.7725 327.876 L186.0498 327.8213 186.2896 327.5439 186.3071 327.2607 C186.5156 323.5693 L186.5303 323.2842 186.3223 322.9814 186.0527 322.8955 C184.7202 322.4697 L184.708 322.0303 184.6875 321.5918 184.6577 321.1563 C185.9292 320.5996 L186.1885 320.4863 186.3643 320.1641 186.3203 319.8828 C185.731 316.2324 L185.6841 315.9492 185.416 315.7012 185.1353 315.6738 C183.7793 315.5469 L183.6704 315.1133 183.5498 314.6836 183.4243 314.2559 C184.521 313.459 L184.749 313.291 184.8525 312.9385 184.7476 312.6738 C183.3896 309.2344 L183.2842 308.9697 182.9683 308.7842 182.6875 308.8193 C181.3521 308.9824 L181.1509 308.5801 180.9434 308.1777 180.7251 307.7842 C181.6118 306.7852 L181.8003 306.5723 181.8252 306.207 181.6665 305.9707 C179.6016 302.9033 L179.4404 302.668 179.0923 302.5527 178.8262 302.6484 C177.5659 303.0928 L177.2808 302.7402 176.9873 302.3945 176.689 302.0547 C177.3379 300.8906 L177.4766 300.6445 177.4229 300.2813 177.2178 300.0859 C174.5425 297.5332 L174.3345 297.3359 173.9697 297.2988 173.7295 297.4502 C172.5986 298.1504 L172.2446 297.8691 171.8853 297.5918 171.5186 297.3223 C171.9014 296.0547 L171.9819 295.7832 171.8511 295.4404 171.6099 295.293 C168.4482 293.375 L168.2031 293.2256 167.8389 293.2676 167.6372 293.4668 C166.689 294.3896 L166.2808 294.1885 165.8677 293.9971 165.4492 293.8135 C165.5503 292.4941 L165.5718 292.2129 165.3706 291.9082 165.1021 291.8164 C161.603 290.6191 L161.332 290.5293 160.9849 290.6475 160.8306 290.8828 C160.0986 291.9961 L159.6577 291.8887 159.2163 291.7861 158.77 291.6982 C158.5845 290.3828 L158.5454 290.1035 158.2827 289.8457 158.0005 289.8145 C154.3267 289.3994 L154.0425 289.3672 153.728 289.5586 153.6294 289.8232 C153.1436 291.0879 L152.9014 291.082 152.6606 291.0684 152.4175 291.0684 c152.21 291.0684 152.0059 291.082 151.7998 291.0859 C151.3271 289.8145 L151.229 289.5518 150.9175 289.3564 150.6357 289.3867 C146.9585 289.7695 L146.6738 289.7988 146.4082 290.0527 146.3682 290.332 C146.1631 291.6816 L145.7246 291.7676 145.29 291.8652 144.8579 291.9688 C144.1177 290.8203 L143.9648 290.582 143.6191 290.458 143.3501 290.5479 C139.8389 291.7109 L139.5684 291.8027 139.3643 292.1055 139.3843 292.3867 C139.4761 293.7715 L139.0718 293.9492 138.6699 294.1309 138.2744 294.3242 C137.2915 293.3457 L137.0908 293.1465 136.7271 293.1035 136.4829 293.2461 C133.3047 295.1377 L133.0591 295.2842 132.9253 295.626 133.0054 295.8965 C133.4009 297.2607 L133.0522 297.5137 132.71 297.7773 132.3716 298.0449 C131.168 297.2793 L130.9287 297.1309 130.5635 297.1631 130.356 297.3564 C127.6577 299.8848 L127.4487 300.0801 127.3921 300.4434 127.5278 300.6904 C128.2241 301.9648 L127.9419 302.2852 127.6626 302.6045 127.394 302.9355 C126.0303 302.4375 L125.7642 302.3398 125.4146 302.4512 125.2539 302.6855 C123.1602 305.7344 L123.0005 305.9707 123.021 306.3359 123.208 306.5469 C124.1782 307.666 L123.9736 308.0293 123.7798 308.4014 123.5903 308.7744 C122.1191 308.5781 L121.8394 308.54 121.5215 308.7217 121.4146 308.9863 C120.0259 312.4141 L119.9185 312.6777 120.0176 313.0303 120.2451 313.1992 C121.4551 314.0986 L121.3369 314.4922 121.2207 314.8887 121.1172 315.2891 C119.6177 315.4141 L119.3364 315.4375 119.0654 315.6855 119.0181 315.9629 C118.396 319.6094 L118.3491 319.8926 118.521 320.2148 118.7793 320.3281 C120.1924 320.9648 L120.1621 321.3643 120.1372 321.7656 120.1221 322.1719 C118.6416 322.625 L118.3726 322.71 118.1597 323.0078 118.1743 323.293 C118.3491 326.9863 L118.3638 327.2734 118.6011 327.5508 118.8784 327.6074 C120.4136 327.9297 L120.4692 328.3242 120.5347 328.7168 120.604 329.1084 C119.2368 329.8809 L118.9922 330.0195 118.8491 330.3574 118.9233 330.6328 C119.8105 333.918 L117.2734 333.918 L116.2119 333.918 115.8027 333.5293 115.8027 332.543 C115.8027 312.0664 L115.8027 311.7002 115.5029 311.4004 115.1353 311.4004 C112.1001 311.4004 L111.7324 311.4004 111.4326 311.7002 111.4326 312.0664 C111.4326 341.6924 L109.1968 344.0898 104.7163 349.2285 101.645 354.9639 c99.0767 359.7559 97.5225 364.5166 96.6943 367.5313 C84.4683 367.5313 L83.6172 367.5313 83.1968 367.9199 83.1968 368.751 C83.1968 369.8857 L78.4595 369.8857 L77.2402 369.8857 76.8105 370.3066 76.8105 371.3652 c76.8105 372.4043 76.8105 373.9668 76.8105 375.9453 C74.0728 377.5664 L74.0728 393.123 L76.8105 395.1104 L76.8105 422.7705 76.8105 464.1597 76.8105 470.998 c76.8105 488.1616 79.2085 494.5278 86.5581 494.5278 c93.2808 494.5278 98.6597 488.4761 114.1221 488.4761 c129.5845 488.4761 144.0386 497.5513 149.4165 497.5513 c154.7949 497.5513 169.9214 490.4927 183.0308 490.4927 c196.1401 490.4927 210.5938 498.5605 213.9556 498.5605 c217.3164 498.5605 231.4346 492.5093 242.5269 492.5093 c253.6201 492.5093 267.7378 499.9058 272.1079 499.9058 c276.4771 499.9058 289.251 495.1992 298.3262 495.1992 c307.4023 495.1992 323.5371 501.5864 326.5615 501.5864 c329.5869 501.5864 331.6035 499.2319 Y332.4395 500.9131 335.3887 500.9131 v338.1094 500.9131 340.5117 498.165 340.5117 491.502 c340.5117 488.106 340.5117 468.9224 340.5117 455.2427 C341.3105 458.6597 344.957 460.7539 349.3086 460.7539 c353.8936 460.7539 413.8867 458.4302 424.7988 458.1045 C424.7988 459.6973 424.7988 461.5659 424.7988 462.4858 c424.7988 466.8521 421 467.417 Y421 476.0679 L425.7676 476.7979 429.2852 473.2808 v432.3984 470.167 432.0762 464.7495 432.0762 463.6992 c432.0762 462.9297 432.0762 458.5791 432.0762 456.2935 C433.2676 455.4028 434.1816 454.1514 434.4629 452.4634 c434.9668 449.4443 437.3535 424.9478 438.5215 412.8228 C457.1895 411.5527 506.4219 408.1982 513.792 407.6455 c523.0918 406.9443 526.2783 403.0098 526.3359 398.1416 C528.9805 396.7974 L529.3066 396.6323 529.5752 396.1973 529.5752 395.8296 C529.5752 381.3477 L529.5752 380.9795 529.3301 380.5088 529.0273 380.2988 C526.5137 378.5518 L526.6064 369.5703 526.71 359.9775 526.7598 355.4307 C530.0947 355.4307 L530.0947 375.1514 L530.0947 375.6758 530.5225 376.1045 531.0479 376.1045 C533.6797 376.1045 L534.207 376.1045 534.6328 375.6758 534.6328 375.1514 C534.6328 355.4307 L537.4326 355.4307 L538.4844 355.4307 539.3379 354.5771 539.3379 353.5254 Cfu1 D99.9756 367.5313 m100.6743 364.7578 101.9468 360.6904 104.1177 356.6602 c106.832 351.6201 109.6445 348.0576 111.4326 346.0391 C111.4326 367.5313 L99.9756 367.5313 LfU*U%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI3 /terminate get execAdobe_pattern_AI3 /terminate get execAdobe_customcolor /terminate get execAdobe_cshow /terminate get execAdobe_packedarray /terminate get exec%%EOF