%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(TM) 3.2%%AI8_CreatorVersion: 9.0%%For: (Rich Roat) (House Industries)%%Title: (Girl 4.eps)%%CreationDate: 5/1/02 1:07 PM%%BoundingBox: 170 85 443 706%%DocumentProcessColors: Black%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0%%+ procset Adobe_cshow 1.1 0%%+ procset Adobe_customcolor 1.0 0%%+ procset Adobe_pattern_AI3 1.0 0%%+ procset Adobe_Illustrator_AI3 1.0 1%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI3_TemplateBox: 306.5 395.5 306.5 395.5%AI3_TileBox: 30.2354 32.5293 582.2354 760.5293%AI3_DocumentPreview: Macintosh_ColorPic%%PageOrigin:30.2354 32.5293%%AI3_PaperRect:-30 761 582 -31%%AI3_Margin:30 -33 -30 31%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%%EndComments%%BeginProlog%%BeginResource: procset Adobe_packedarray 2.0 0%%Title: (Packed Array Operators)%%Version: 2.0 0%%CreationDate: (8/2/90) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_packedarray 5 dict dup begin put/initialize{/packedarray where	{	pop	}	{	Adobe_packedarray begin	Adobe_packedarray		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall end	} ifelse} def/terminate{} def/packedarray{array astore readonly} def/setpacking{pop} def/currentpacking{false} defcurrentdict readonly pop end%%EndResourceAdobe_packedarray /initialize get exec%%BeginResource: procset Adobe_cshow 1.1 0%%Title: (cshow Operator)%%Version: 1.1 0%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 3 dict dup begin put/initialize{/cshow where	{	pop	}	{	userdict /Adobe_cshow_vars 1 dict dup begin put	/_cshow		{} def	Adobe_cshow begin	Adobe_cshow		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall end end	} ifelse} def/terminate{} def/cshow{exchAdobe_cshow_vars	exch /_cshow	exch put	{	0 0 Adobe_cshow_vars /_cshow get exec	} forall} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_customcolor 1.0 0%%Title: (Custom Color Operators)%%Version: 1.0 0%%CreationDate: (5/9/88) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_customcolor 5 dict dup begin put/initialize{/setcustomcolor where	{	pop	}	{	Adobe_customcolor begin	Adobe_customcolor		{		dup xcheck			{			bind			} if		pop pop		} forall end	Adobe_customcolor begin	} ifelse} def/terminate{currentdict Adobe_customcolor eq	{ end	} if} def/findcmykcustomcolor{5 packedarray}  def/setcustomcolor{exchaload pop pop4	{	4 index mul 4 1 roll	} repeat5 -1 roll popsetcmykcolor} def/setoverprint{pop} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_pattern_AI3 1.1 0%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)%%Version: 1.1 0%%CreationDate: (7/21/89) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_pattern_AI3 16 dict dup begin put/initialize{/definepattern where	{	pop	}	{	Adobe_pattern_AI3 begin	Adobe_pattern_AI3		{		dup xcheck			{			bind			} if		pop pop		} forall	mark	cachestatus 7 1 roll pop pop pop pop exch pop exch		{		{		10000 add		dup 2 index gt			{			exit			} if		dup setcachelimit		} loop		} stopped	cleartomark	} ifelse} def/terminate{currentdict Adobe_pattern_AI3 eq	{ end	} if} deferrordict/nocurrentpoint{popstop} puterrordict/invalidaccess{popstop} put/patternencoding256 array def0 1 255{patternencoding exch ( ) 2 copy exch 0 exch put cvn put} for/definepattern{17 dict begin/uniform exch def/cache exch def/key exch def/procarray exch def/mtx exch matrix invertmatrix def/height exch def/width exch def/ctm matrix currentmatrix def/ptm matrix def/str 32 string def/slice 9 dict defslice /s 1 putslice /q 256 procarray length div sqrt floor cvi putslice /b 0 put/FontBBox [0 0 0 0] def/FontMatrix mtx matrix copy def/Encoding patternencoding def/FontType 3 def/BuildChar	{	exch begin	/setstrokeadjust where {pop true setstrokeadjust} if	slice begin	dup q dup mul mod s idiv /i exch def	dup q dup mul mod s mod /j exch def	q dup mul idiv procarray exch get	/xl j width s div mul def	/xg j 1 add width s div mul def	/yl i height s div mul def	/yg i 1 add height s div mul def	uniform		{		1 1		}		{		width 0 dtransform		dup mul exch dup mul add sqrt dup 1 add exch div		0 height dtransform		dup mul exch dup mul add sqrt dup 1 add exch div		} ifelse	width 0 cache		{		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul		setcachedevice		}		{		setcharwidth		} ifelse	gsave	scale	newpath	xl yl moveto	xg yl lineto	xg yg lineto	xl yg lineto	closepath	clip	newpath end end	exec	grestore	} defkey currentdict definefontend} def/patterncachesize{gsavenewpath0 0 movetowidth 0 linetowidth height lineto0 height linetoclosepathpatternmatrix setmatrixpathbboxexch ceiling 4 -1 roll floor sub 3 1 rollceiling exch floor submul 1 addgrestore} def/patterncachelimit{cachestatus 7 1 roll 6 npop 8 mul} def/patternpath{exch dup begin setfontctm setmatrixconcatslice exch /b exch slice /q get dup mul mul putFontMatrix concatuniform	{	width 0 dtransform round width div exch round width div exch	0 height dtransform round height div exch height div exch	0 0 transform round exch round exch	ptm astore setmatrix	}	{	ptm currentmatrix pop	} ifelse{currentpoint} stopped not	{	2 npop	pathbbox	true	4 index 3 index eq	4 index 3 index eq	and		{		pop false			{			{2 npop}			{3 npop true}			{7 npop true}			{pop true}			pathforall			} stopped			{			5 npop true			} if		} if		{		height div ceiling height mul 4 1 roll		width div ceiling width mul 4 1 roll		height div floor height mul 4 1 roll		width div floor width mul 4 1 roll		2 index sub height div ceiling cvi exch		3 index sub width div ceiling cvi exch		4 2 roll moveto		FontMatrix mtx invertmatrix		dup dup 4 get exch 5 get rmoveto		ptm ptm concatmatrix pop		slice /s		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi		dup slice /q get gt			{			pop slice /q get			} if		put		0 1 slice /s get dup mul 1 sub			{			slice /b get add			gsave			0 1 str length 1 sub				{				str exch 2 index put				} for			pop			dup				{				gsave				ptm setmatrix				1 index str length idiv {str show} repeat				1 index str length mod str exch 0 exch getinterval show				grestore				0 height rmoveto				} repeat			grestore			} for		2 npop		}		{		4 npop		} ifelse	} ifend} def/patternclip{clip} def/patternstrokepath{strokepath} def/patternmatrixmatrix def/patternfill{dup type /dicttype eq	{	Adobe_pattern_AI3 /patternmatrix get	} ifgsavepatternclipAdobe_pattern_AI3 /patternpath get execgrestorenewpath} def/patternstroke{dup type /dicttype eq	{	Adobe_pattern_AI3 /patternmatrix get	} ifgsavepatternstrokepathtrue	{		{			{			newpath 			moveto			}			{			lineto			}			{			curveto			}			{			closepath			3 copy			Adobe_pattern_AI3 /patternfill get exec			} pathforall		3 npop		} stopped			{			5 npop			patternclip			Adobe_pattern_AI3 /patternfill get exec			} if	}	{	patternclip	Adobe_pattern_AI3 /patternfill get exec	} ifelsegrestorenewpath} def/patternashow{3 index type /dicttype eq	{	Adobe_pattern_AI3 /patternmatrix get 4 1 roll	} if	{	2 npop (0) exch	2 copy 0 exch put pop	gsave	false charpath currentpoint	6 index 6 index 6 index	Adobe_pattern_AI3 /patternfill get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshow5 npop} def/patternawidthshow{6 index type /dicttype eq	{	Adobe_pattern_AI3 /patternmatrix get 7 1 roll	} if	{	2 npop (0) exch	2 copy 0 exch put 	gsave	_sp eq {5 index 5 index rmoveto} if	false charpath currentpoint	9 index 9 index 9 index	Adobe_pattern_AI3 /patternfill get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshow8 npop} def/patternashowstroke{4 index type /dicttype eq	{	patternmatrix /patternmatrix get 5 1 roll	} if4 1 roll	{	2 npop (0) exch	2 copy 0 exch put pop	gsave	false charpath	currentpoint	4 index setmatrix	7 index 7 index 7 index	Adobe_pattern_AI3 /patternstroke get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshow6 npop} def/patternawidthshowstroke{7 index type /dicttype eq	{	patternmatrix /patternmatrix get 8 1 roll	} if7 1 roll	{	2 npop (0) exch	2 copy 0 exch put	gsave	_sp eq {5 index 5 index rmoveto} if	false charpath currentpoint	7 index setmatrix	10 index 10 index 10 index	Adobe_pattern_AI3 /patternstroke get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshow9 npop} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)%%Version: 1.1 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI3 71 dict dup begin put/initialize{userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put/_lp /none def/_pf {} def/_ps {} def/_psf {} def/_pss {} def/_pjsf {} def/_pjss {} def/_pola 0 def/_doClip 0 def/cf	currentflat def/_tm matrix def/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def /_renderEnd [null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_rise 0 def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading [0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fScl 0 def/_cnt 0 def/_hs 1 def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_wv 0 def/Tx {} def/Tj {} def/CRender {} def/_AI3_savepage {} def/_gf null def/_cf 4 array def/_if null def/_of false def/_fc {} def/_gs null def/_cs 4 array def/_is null def/_os false def/_sc {} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null defAdobe_Illustrator_AI3 beginAdobe_Illustrator_AI3 dup /nc get begin	{	dup xcheck		{		bind		} if	pop pop	} forallendendendAdobe_Illustrator_AI3 beginAdobe_Illustrator_AI3_vars beginnewpath} def/terminate{endend} def/_null def/ddef{Adobe_Illustrator_AI3_vars 3 1 roll put} def/xput{dup load dup length exch maxlength eq	{	dup dup load dup	length 2 mul dict copy def	} ifload begin def end} def/npop{	{	pop	} repeat} def/sw{dup length exch stringwidthexch 5 -1 roll 3 index mul add4 1 roll 3 1 roll mul add} def/swj{dup 4 1 rolldup length exch stringwidth exch 5 -1 roll 3 index mul add4 1 roll 3 1 roll mul add 6 2 roll /_cnt 0 ddef{1 index eq {/_cnt _cnt 1 add ddef} if} forall popexch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop} def/ss{4 1 roll	{	2 npop 	(0) exch 2 copy 0 exch put pop	gsave	false charpath currentpoint	4 index setmatrix	stroke	grestore	moveto	2 copy rmoveto	} exch cshow3 npop} def/jss{4 1 roll	{	2 npop 	(0) exch 2 copy 0 exch put 	gsave	_sp eq 		{		exch 6 index 6 index 6 index 5 -1 roll widthshow  		currentpoint		}		{		false charpath currentpoint		4 index setmatrix stroke		}ifelse	grestore	moveto	2 copy rmoveto	} exch cshow6 npop} def/sp{	{	2 npop (0) exch	2 copy 0 exch put pop	false charpath	2 copy rmoveto	} exch cshow2 npop} def/jsp{	{	2 npop 	(0) exch 2 copy 0 exch put 	_sp eq 		{		exch 5 index 5 index 5 index 5 -1 roll widthshow  		}		{		false charpath		}ifelse	2 copy rmoveto	} exch cshow5 npop} def/pl{transform0.25 sub round 0.25 add exch0.25 sub round 0.25 add exchitransform} def/setstrokeadjust where	{	pop true setstrokeadjust	/c	{	curveto	} def	/C	/c load def	/v	{	currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{	2 copy curveto	} def	/Y	/y load def	/l	{	lineto	} def	/L	/l load def	/m	{	moveto	} def	}	{	/c	{	pl curveto	} def	/C	/c load def	/v	{	currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{	pl 2 copy curveto	} def	/Y	/y load def	/l	{	pl lineto	} def	/L	/l load def	/m	{	pl moveto	} def	} ifelse/d{setdash} def/cf	{} def/i{dup 0 eq	{	pop cf	} ifsetflat} def/j{setlinejoin} def/J{setlinecap} def/M{setmiterlimit} def/w{setlinewidth} def/H{} def/h{closepath} def/N{_pola 0 eq 	{	_doClip 1 eq {clip /_doClip 0 ddef} if 	newpath	} 	{	/CRender {N} ddef	}ifelse} def/n{N} def/F{_pola 0 eq 	{	_doClip 1 eq 		{		gsave _pf grestore clip newpath /_lp /none ddef _fc 		/_doClip 0 ddef		}		{		_pf		}ifelse	} 	{	/CRender {F} ddef	}ifelse} def/f{closepathF} def/S{_pola 0 eq 	{	_doClip 1 eq 		{		gsave _ps grestore clip newpath /_lp /none ddef _sc 		/_doClip 0 ddef		}		{		_ps		}ifelse	} 	{	/CRender {S} ddef	}ifelse} def/s{closepathS} def/B{_pola 0 eq 	{	_doClip 1 eq	gsave F grestore 		{		gsave S grestore clip newpath /_lp /none ddef _sc		/_doClip 0 ddef		} 		{		S		}ifelse	}	{	/CRender {B} ddef	}ifelse} def/b{closepathB} def/W{/_doClip 1 ddef} def/*{count 0 ne 	{	dup type (stringtype) eq {pop} if	} if _pola 0 eq {newpath} if} def/u{} def/U{} def/q{_pola 0 eq {gsave} if} def/Q{_pola 0 eq {grestore} if} def/*u{_pola 1 add /_pola exch ddef} def/*U{_pola 1 sub /_pola exch ddef _pola 0 eq {CRender} if} def/D{pop} def/*w{} def/*W{} def/`{/_i save ddef6 1 roll 4 npopconcat popuserdict begin/showpage {} def0 setgray0 setlinecap1 setlinewidth0 setlinejoin10 setmiterlimit[] 0 setdash/setstrokeadjust where {pop false setstrokeadjust} ifnewpath0 setgrayfalse setoverprint} def/~{end_i restore} def/@{} def/&{} def/O{0 ne/_of exch ddef/_lp /none ddef} def/R{0 ne/_os exch ddef/_lp /none ddef} def/g{/_gf exch ddef/_fc{_lp /fill ne	{	_of setoverprint	_gf setgray	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/G{/_gs exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_gs setgray	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/k{_cf astore pop/_fc{_lp /fill ne	{	_of setoverprint	_cf aload pop setcmykcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/K{_cs astore pop/_sc{_lp /stroke ne	{	_os setoverprint	_cs aload pop setcmykcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/x{/_gf exch ddeffindcmykcustomcolor/_if exch ddef/_fc{_lp /fill ne	{	_of setoverprint	_if _gf 1 exch sub setcustomcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/X{/_gs exch ddeffindcmykcustomcolor/_is exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_is _gs 1 exch sub setcustomcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/dp{dup null eq{pop_dp 0 ne	{	0 1 _dp 1 sub _dl mod		{		_da exch get 3 get		} for	_dp 1 sub _dl mod 1 add packedarray	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll	definepattern pop	} if}{_dp 0 ne _dp _dl mod 0 eq and	{	null dp	} if7 packedarray _da exch _dp _dl mod exch put_dp _dl mod _da 0 get 4 get 2 packedarray/_dp _dp 1 add def} ifelse} def/E{_ed begindup 0 get type /arraytype ne	{	0		{		dup 1 add index type /arraytype eq			{			1 add			}			{			exit			} ifelse		} loop	array astore	} if/_dd exch def/_ury exch def/_urx exch def/_lly exch def/_llx exch def/_n exch def/_y 0 def/_dl 4 def/_dp 0 def/_da _dl array def0 1 _dd length 1 sub	{	/_d exch _dd exch get def	0 2 _d length 2 sub		{		/_x exch def		/_c _d _x get _ ne def		/_r _d _x 1 add get cvlit def		_r _ ne			{			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 				[				/save cvx				_llx neg _lly neg /translate cvx				_c					{					nc /begin cvx					} if				_r dup type /stringtype eq					{					cvx					}					{					{exec} /forall cvx					} ifelse				_c					{					/end cvx					} if				/restore cvx				] cvx			/_fn 12 _n length add string def			_y _fn cvs pop			/_y _y 1 add def			_fn 12 _n putinterval			_fn _c false dp			_d exch _x 1 add exch put			} if		} for	} fornull dp_n _dd /_pdend xput} def/fc{_fm dup concatmatrix pop} def/p{/_fm exch ddef9 -2 roll _pm translate fc7 -2 roll _pm scale fc5 -1 roll _pm rotate fc4 -2 roll exch 0 ne	{	dup _pm rotate fc	1 -1 _pm scale fc	neg _pm rotate fc	}	{	pop	} ifelsedup _pm rotate fcexch dup sin exch cos div 1 0 0 1 0 6 2 roll_pm astore fcneg _pm rotate fc_pd exch get /_fdd exch ddef/_pf{save/_doClip 0 ddef0 1 _fdd length 1 sub	{	/_fd exch _fdd exch get ddef	_fd	0 2 _fd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _fc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _fm			patternfill			}			{			pop			fill			} ifelse		grestore		pop		} for	pop	} forrestorenewpath} ddef/_psf{save/_doClip 0 ddef0 1 _fdd length 1 sub	{	/_fd exch _fdd exch get ddef	_fd	0 2 _fd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _fc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _fm			9 copy 6 npop patternashow			}			{			pop			6 copy 3 npop ashow			} ifelse		grestore		pop		} for	pop	} forrestore%3 npop newpathsw rmoveto} ddef/_pjsf{save/_doClip 0 ddef0 1 _fdd length 1 sub	{	/_fd exch _fdd exch get ddef	_fd	0 2 _fd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _fc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _fm			12 copy 6 npop patternawidthshow			}			{			pop 9 copy 3 npop awidthshow			} ifelse		grestore		pop		} for	pop	} forrestoreswj rmoveto} ddef/_lp /none ddef} def/sc{_sm dup concatmatrix pop} def/P{/_sm exch ddef9 -2 roll _pm translate sc7 -2 roll _pm scale sc5 -1 roll _pm rotate sc4 -2 roll exch 0 ne	{	dup _pm rotate sc	1 -1 _pm scale sc	neg _pm rotate sc	}	{	pop	} ifelsedup _pm rotate scexch dup sin exch cos div 1 0 0 1 0 6 2 roll_pm astore scneg _pm rotate sc_pd exch get /_sdd exch ddef/_ps{save/_doClip 0 ddef0 1 _sdd length 1 sub	{	/_sd exch _sdd exch get ddef	_sd	0 2 _sd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _sc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _sm			patternstroke			}			{			pop stroke			} ifelse		grestore		pop		} for	pop	} forrestorenewpath} ddef/_pss{save/_doClip 0 ddef0 1 _sdd length 1 sub	{	/_sd exch _sdd exch get ddef	_sd	0 2 _sd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _sc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _sm			10 copy 6 npop patternashowstroke			}			{			pop 7 copy 3 npop ss			} ifelse		grestore		pop		} for	pop	} forrestorepop sw rmoveto} ddef/_pjss{save/_doClip 0 ddef0 1 _sdd length 1 sub	{	/_sd exch _sdd exch get ddef	_sd	0 2 _sd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _sc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _sm			13 copy 6 npop patternawidthshowstroke			}			{			pop 10 copy 3 npop jss			} ifelse		grestore		pop		} for	pop	} forrestorepop swj rmoveto} ddef/_lp /none ddef} def/A{pop} def/nc 3 dict defnc begin/setgray{pop} bind def/setcmykcolor{4 npop} bind def/setcustomcolor{2 npop} bind defcurrentdict readonly pop endcurrentdict readonly pop endsetpacking/annotatepage{} def%%EndResource%%EndProlog%%BeginSetupAdobe_cshow /initialize get execAdobe_customcolor /initialize get execAdobe_pattern_AI3 /initialize get execAdobe_Illustrator_AI3 /initialize get exec%AI3_BeginPattern: (Azure Rings)(Azure Rings) 22.5 22.5 58.5 58.5 [%AI3_Tile(0 O 0 R 0.9569 0.9294 0 0 k 0.9569 0.9294 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1.75 w 4 M []0 d40.5 58.5 m40.5 48.5586 32.4409 40.5 22.5 40.5 c12.5591 40.5 4.5 48.5586 4.5 58.5 c4.5 68.4414 12.5591 76.5 22.5 76.5 c32.4409 76.5 40.5 68.4414 40.5 58.5 cs40.5 22.5 m40.5 12.5586 32.4409 4.5 22.5 4.5 c12.5591 4.5 4.5 12.5586 4.5 22.5 c4.5 32.4414 12.5591 40.5 22.5 40.5 c32.4409 40.5 40.5 32.4414 40.5 22.5 cs40.5 40.5 m40.5 30.5586 32.4409 22.5 22.5 22.5 c12.5591 22.5 4.5 30.5586 4.5 40.5 c4.5 50.4414 12.5591 58.5 22.5 58.5 c32.4409 58.5 40.5 50.4414 40.5 40.5 cs58.5 58.5 m58.5 48.5586 50.4409 40.5 40.5 40.5 c30.5591 40.5 22.5 48.5586 22.5 58.5 c22.5 68.4414 30.5591 76.5 40.5 76.5 c50.4409 76.5 58.5 68.4414 58.5 58.5 cs58.5 22.5 m58.5 12.5586 50.4409 4.5 40.5 4.5 c30.5591 4.5 22.5 12.5586 22.5 22.5 c22.5 32.4414 30.5591 40.5 40.5 40.5 c50.4409 40.5 58.5 32.4414 58.5 22.5 cs58.5 40.5 m58.5 30.5586 50.4409 22.5 40.5 22.5 c30.5591 22.5 22.5 30.5586 22.5 40.5 c22.5 50.4414 30.5591 58.5 40.5 58.5 c50.4409 58.5 58.5 50.4414 58.5 40.5 cs76.5 58.5 m76.5 48.5586 68.4409 40.5 58.5 40.5 c48.5591 40.5 40.5 48.5586 40.5 58.5 c40.5 68.4414 48.5591 76.5 58.5 76.5 c68.4409 76.5 76.5 68.4414 76.5 58.5 cs76.5 22.5 m76.5 12.5586 68.4409 4.5 58.5 4.5 c48.5591 4.5 40.5 12.5586 40.5 22.5 c40.5 32.4414 48.5591 40.5 58.5 40.5 c68.4409 40.5 76.5 32.4414 76.5 22.5 cs76.5 40.5 m76.5 30.5586 68.4409 22.5 58.5 22.5 c48.5591 22.5 40.5 30.5586 40.5 40.5 c40.5 50.4414 48.5591 58.5 58.5 58.5 c68.4409 58.5 76.5 50.4414 76.5 40.5 cs%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Camouflage)(Camouflage) 1 1 73 73 [%AI3_Tile(0 O 0 R 0.5961 0.1412 0.949 0.0275 k 0.5961 0.1412 0.949 0.0275 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d1 73 m1 1 L73 1 L73 73 L1 73 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.498 0.349 0.9725 0.2 k 0.498 0.349 0.9725 0.2 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d18.5449 73 m18.5449 1 L46.7832 1 L46.7832 73 L18.5449 73 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.1882 0.1098 0.9255 0.0157 k 0.1882 0.1098 0.9255 0.0157 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d11.9512 1 m11.9512 4.7129 9.2314 2.8813 9.2314 6.5938 c9.2314 10.2334 4.25 10.2334 4.25 13.8735 c4.25 17.4858 10.0313 17.4858 10.0313 21.0991 c10.0313 24.832 10.208 24.832 10.208 28.5654 c10.208 32.3071 5.5205 32.3071 5.5205 36.0469 c5.5205 39.7021 11.8838 39.7021 11.8838 43.356 c11.8838 47.0566 7.4609 47.0566 7.4609 50.7568 c7.4609 54.4043 5.7959 54.4043 5.7959 58.0542 c5.7959 61.7686 4.6631 61.7686 4.6631 65.4805 c4.6631 69.1636 11.9512 69.3184 11.9512 73 C27.9268 73 L27.9268 69.3184 22.0635 69.1636 22.0635 65.4805 c22.0635 61.7686 28.6631 61.7686 28.6631 58.0542 c28.6631 54.4043 25.1553 54.4043 25.1553 50.7568 c25.1553 47.0566 28.8145 47.0566 28.8145 43.356 c28.8145 39.7021 22.1191 39.7021 22.1191 36.0469 c22.1191 32.3071 26.3945 32.3071 26.3945 28.5654 c26.3945 24.832 24.4248 24.832 24.4248 21.0991 c24.4248 17.4858 20.3838 17.4858 20.3838 13.8735 c20.3838 10.2334 24.6055 10.2334 24.6055 6.5938 c24.6055 2.8813 27.9268 4.7129 27.9268 1 C11.9512 1 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.9255 0.2157 0.9647 0.0745 k 0.9255 0.2157 0.9647 0.0745 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d41.875 1 m41.875 4.7134 42.3867 2.8818 42.3867 6.5938 c42.3867 10.2334 40.5947 10.2334 40.5947 13.8735 c40.5947 17.4858 41.5742 17.4858 41.5742 21.0991 c41.5742 24.832 43.6484 24.832 43.6484 28.5659 c43.6484 32.3076 39.1709 32.3076 39.1709 36.0469 c39.1709 39.7026 39.7549 39.7026 39.7549 43.356 c39.7549 47.0566 45.3896 47.0566 45.3896 50.7568 c45.3896 54.4043 40.1055 54.4043 40.1055 58.0542 c40.1055 61.7686 40.6289 61.7686 40.6289 65.4805 c40.6289 69.1636 41.875 69.3184 41.875 73 C59.0752 73 L59.0752 69.4219 53.4805 70.1934 53.4805 66.6143 c53.4805 62.9136 55.8945 62.9136 55.8945 59.2153 c55.8945 55.502 61.0059 55.502 61.0059 51.7886 c61.0059 48.1489 60.5635 48.1489 60.5635 44.5103 c60.5635 40.897 59.9277 40.897 59.9277 37.2842 c59.9277 33.5508 56.3662 33.5508 56.3662 29.8169 c56.3662 26.0762 61.0908 26.0762 61.0908 22.3354 c61.0908 18.6812 52.6025 18.6812 52.6025 15.0264 c52.6025 11.3262 55.7461 11.3262 55.7461 7.6265 c55.7461 3.978 59.0752 4.6484 59.0752 1 C41.875 1 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Clown Attack)(Clown Attack) 5.25 11 41.25 47 [%AI3_Tile(0 O 0 R 0.9255 0 1 0 k 0.9255 0 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d17.5 18.25 m17.5 15.2119 15.0376 12.75 12 12.75 c8.9624 12.75 6.5 15.2119 6.5 18.25 c6.5 21.2881 8.9624 23.75 12 23.75 c15.0376 23.75 17.5 21.2881 17.5 18.25 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0078 0.9529 0 0 k 0.0078 0.9529 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d22.25 34.125 m22.25 31.2939 19.9556 29 17.125 29 c14.2944 29 12 31.2939 12 34.125 c12 36.9561 14.2944 39.25 17.125 39.25 c19.9556 39.25 22.25 36.9561 22.25 34.125 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0118 0.9608 0.9137 0 k 0.0118 0.9608 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d30 31.625 m30 29.4854 28.2646 27.75 26.125 27.75 c23.9849 27.75 22.25 29.4854 22.25 31.625 c22.25 33.7646 23.9849 35.5 26.125 35.5 c28.2646 35.5 30 33.7646 30 31.625 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0314 0.0196 0.9137 0 k 0.0314 0.0196 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d23.25 24.5 m23.25 22.4287 21.5713 20.75 19.5 20.75 c17.4287 20.75 15.75 22.4287 15.75 24.5 c15.75 26.5713 17.4287 28.25 19.5 28.25 c21.5713 28.25 23.25 26.5713 23.25 24.5 cf%AI6_EndPatternLayer) &(0 O 0 R 0.9569 0.9294 0 0 k 0.9569 0.9294 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d36 22.25 m36 19.0742 33.4258 16.5 30.25 16.5 c27.0742 16.5 24.5 19.0742 24.5 22.25 c24.5 25.4258 27.0742 28 30.25 28 c33.4258 28 36 25.4258 36 22.25 cf%AI6_EndPatternLayer) &(0 O 0 R 0.1882 0.1216 0.8 0.0157 k 0.1882 0.1216 0.8 0.0157 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d24.25 16.5 m24.25 14.8438 22.9067 13.5 21.25 13.5 c19.5933 13.5 18.25 14.8438 18.25 16.5 c18.25 18.1563 19.5933 19.5 21.25 19.5 c22.9067 19.5 24.25 18.1563 24.25 16.5 cf%AI6_EndPatternLayer) &(0 O 0 R 0.8353 0 0 0 k 0.8353 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d37.25 43.875 m37.25 39.5264 33.7236 36 29.375 36 c25.0264 36 21.5 39.5264 21.5 43.875 c21.5 48.2236 25.0264 51.75 29.375 51.75 c33.7236 51.75 37.25 48.2236 37.25 43.875 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0078 0.1961 0.9373 0 k 0.0078 0.1961 0.9373 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d38.75 26.625 m38.75 25.7275 38.0225 25 37.125 25 c36.2275 25 35.5 25.7275 35.5 26.625 c35.5 27.5225 36.2275 28.25 37.125 28.25 c38.0225 28.25 38.75 27.5225 38.75 26.625 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0196 0.5961 0.9137 0 k 0.0196 0.5961 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d19.875 42 m19.875 41.1025 19.1475 40.375 18.25 40.375 c17.3525 40.375 16.625 41.1025 16.625 42 c16.625 42.8975 17.3525 43.625 18.25 43.625 c19.1475 43.625 19.875 42.8975 19.875 42 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0118 0.9608 0.9137 0 k 0.0118 0.9608 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d12.75 28.125 m12.75 26.8135 11.6865 25.75 10.375 25.75 c9.0635 25.75 8 26.8135 8 28.125 c8 29.4365 9.0635 30.5 10.375 30.5 c11.6865 30.5 12.75 29.4365 12.75 28.125 cf%AI6_EndPatternLayer) &(0 O 0 R 0.9255 0 1 0 k 0.9255 0 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d43.25 33 m43.25 30.998 41.627 29.375 39.625 29.375 c37.623 29.375 36 30.998 36 33 c36 35.002 37.623 36.625 39.625 36.625 c41.627 36.625 43.25 35.002 43.25 33 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0314 0.0196 0.9137 0 k 0.0314 0.0196 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d13.25 43.75 m13.25 40.9883 11.0117 38.75 8.25 38.75 c5.4883 38.75 3.25 40.9883 3.25 43.75 c3.25 46.5117 5.4883 48.75 8.25 48.75 c11.0117 48.75 13.25 46.5117 13.25 43.75 cf%AI6_EndPatternLayer) &(0 O 0 R 0.3922 0.9451 0 0 k 0.3922 0.9451 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d6.5 22.25 m6.5 20.7314 5.2686 19.5 3.75 19.5 c2.2314 19.5 1 20.7314 1 22.25 c1 23.7686 2.2314 25 3.75 25 c5.2686 25 6.5 23.7686 6.5 22.25 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0235 0.0118 0.6 0 k 0.0235 0.0118 0.6 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d34.4883 32.75 m34.4883 31.9277 33.8223 31.2617 33 31.2617 c32.1777 31.2617 31.5117 31.9277 31.5117 32.75 c31.5117 33.5723 32.1777 34.2383 33 34.2383 c33.8223 34.2383 34.4883 33.5723 34.4883 32.75 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0314 0.0196 0.9137 0 k 0.0314 0.0196 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d49.25 43.75 m49.25 40.9883 47.0117 38.75 44.25 38.75 c41.4883 38.75 39.25 40.9883 39.25 43.75 c39.25 46.5117 41.4883 48.75 44.25 48.75 c47.0117 48.75 49.25 46.5117 49.25 43.75 cf%AI6_EndPatternLayer) &(0 O 0 R 0.3922 0.9451 0 0 k 0.3922 0.9451 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d42.5 22.25 m42.5 20.7314 41.2686 19.5 39.75 19.5 c38.2314 19.5 37 20.7314 37 22.25 c37 23.7686 38.2314 25 39.75 25 c41.2686 25 42.5 23.7686 42.5 22.25 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0314 0.0196 0.9137 0 k 0.0314 0.0196 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d49.25 7.752 m49.25 4.9902 47.0117 2.752 44.25 2.752 c41.4883 2.752 39.25 4.9902 39.25 7.752 c39.25 10.5137 41.4883 12.752 44.25 12.752 c47.0117 12.752 49.25 10.5137 49.25 7.752 cf%AI6_EndPatternLayer) &(0 O 0 R 0.8353 0 0 0 k 0.8353 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d37.25 7.875 m37.25 3.5264 33.7236 0 29.375 0 c25.0264 0 21.5 3.5264 21.5 7.875 c21.5 12.2236 25.0264 15.75 29.375 15.75 c33.7236 15.75 37.25 12.2236 37.25 7.875 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0314 0.0196 0.9137 0 k 0.0314 0.0196 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d13.25 7.75 m13.25 4.9883 11.0117 2.75 8.25 2.75 c5.4883 2.75 3.25 4.9883 3.25 7.75 c3.25 10.5117 5.4883 12.75 8.25 12.75 c11.0117 12.75 13.25 10.5117 13.25 7.75 cf%AI6_EndPatternLayer) &(0 O 0 R 0.9255 0 1 0 k 0.9255 0 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d7.25 33 m7.25 30.998 5.627 29.375 3.625 29.375 c1.623 29.375 0 30.998 0 33 c0 35.002 1.623 36.625 3.625 36.625 c5.627 36.625 7.25 35.002 7.25 33 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0235 0.4078 0 0 k 0.0235 0.4078 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d39.6533 16.0381 m39.6533 15.1064 38.8975 14.3506 37.9658 14.3506 c37.0342 14.3506 36.2783 15.1064 36.2783 16.0381 c36.2783 16.9697 37.0342 17.7256 37.9658 17.7256 c38.8975 17.7256 39.6533 16.9697 39.6533 16.0381 cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Green Tablecloth)(Green Tablecloth) 0 0 24 24 [%AI3_Tile(0 O 0 R 0.8 0.21 1 0 k 0.8 0.21 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d6 18 m0 18 L0 24 L6 24 L6 18 Lf18 18 m12 18 L12 24 L18 24 L18 18 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.3798 0.0997 0.4747 0 k 0.3798 0.0997 0.4747 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d12 18 m6 18 L6 24 L12 24 L12 18 Lf24 18 m18 18 L18 24 L24 24 L24 18 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d12 12 m6 12 L6 18 L12 18 L12 12 Lf24 12 m18 12 L18 18 L24 18 L24 12 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.3798 0.0997 0.4747 0 k 0.3798 0.0997 0.4747 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d6 12 m0 12 L0 18 L6 18 L6 12 Lf18 12 m12 12 L12 18 L18 18 L18 12 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.8 0.21 1 0 k 0.8 0.21 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d6 6 m0 6 L0 12 L6 12 L6 6 Lf18 6 m12 6 L12 12 L18 12 L18 6 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.3798 0.0997 0.4747 0 k 0.3798 0.0997 0.4747 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d12 6 m6 6 L6 12 L12 12 L12 6 Lf24 6 m18 6 L18 12 L24 12 L24 6 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d12 0 m6 0 L6 6 L12 6 L12 0 Lf24 0 m18 0 L18 6 L24 6 L24 0 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.3798 0.0997 0.4747 0 k 0.3798 0.0997 0.4747 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d6 0 m0 0 L0 6 L6 6 L6 0 Lf18 0 m12 0 L12 6 L18 6 L18 0 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Pyramids)(Pyramids) 1 1 19.5 19.5 [%AI3_Tile(0 O 0 R 0.1882 0.1294 0.102 0.0118 k 0.1882 0.1294 0.102 0.0118 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d1 19.5 m10.25 10.25 l19.5 19.5 l1 19.5 lf%AI6_EndPatternLayer) &(0 O 0 R 0.6235 0.4863 0.4863 0.4784 k 0.6235 0.4863 0.4863 0.4784 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d19.5 1 m10.25 10.25 l1 1 l19.5 1 lf%AI6_EndPatternLayer) &(0 O 0 R 0.3529 0.2549 0.2235 0.0667 k 0.3529 0.2549 0.2235 0.0667 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d1 1 m10.25 10.25 l1 19.5 l1 1 lf%AI6_EndPatternLayer) &(0 O 0 R 0.4902 0.3647 0.3451 0.2196 k 0.4902 0.3647 0.3451 0.2196 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d19.5 19.5 m10.25 10.25 l19.5 1 l19.5 19.5 lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Red Stripe)(Red Stripe) 37 19 73 55 [%AI3_Tile(0 O 0 R 0 0.9608 0.9137 0 k 0 0.9608 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 18 w 4 M []0 d37 37 m73 37 lS%AI6_EndPatternLayer) &] E%AI3_EndPattern%%EndSetup0 Au0 O0 0 0 1 k0 J 0 j 1 w 4 M []0 d381.2637 641.7896 m381.4102 642.4551 381.3262 642.8047 380.7383 643.1753 c380.2549 643.48 379.7285 643.7041 Y377.8008 637.9561 L378.3555 637.8169 378.9258 637.769 v379.6182 637.71 379.8984 637.937 380.1797 638.5571 c380.4219 639.0859 380.6113 639.6338 380.7852 640.1523 c380.959 640.6709 381.1367 641.2222 381.2637 641.7896 cf294.2339 670.978 m294.5166 671.5972 294.7964 671.8247 295.4888 671.7661 c296.0581 671.7173 296.6133 671.5781 Y294.6855 665.8311 L294.1592 666.0547 293.6753 666.3589 v293.0874 666.7295 293.0024 667.0791 293.1499 667.7441 c293.2759 668.3125 293.4556 668.8643 293.6284 669.3823 c293.8027 669.9004 293.9927 670.4482 294.2339 670.978 cf307.3574 705.1421 m295.2056 668.9072 L296.0732 668.5254 L308.2598 704.8594 L308.3818 705.2188 307.4766 705.5059 307.3574 705.1421 Cf366.4004 538.4019 m373.3623 526.6362 382.2461 521.1143 395.6914 520.1538 C392.0898 521.5942 L379.5244 527.1167 372.7227 535.4399 367.6816 548.0854 C366.4004 538.4019 Lf402.5742 514.5513 m399.7539 510.29 392.1748 508.7314 389.5469 510.8062 C391.0449 507.1768 398.582 506.5684 401.9717 510.0483 C402.5742 514.5513 Lf365.9854 231.9316 m351.5566 230.4082 L351.8613 227.2451 352.3633 224.7773 v352.6543 223.3457 353.373 222.9727 354.7715 222.8711 c356.1895 222.7666 357.8848 222.8262 359.6318 223.0098 c361.3789 223.1943 363.0488 223.4912 364.415 223.8877 c365.7598 224.2793 366.3867 224.7939 366.3721 226.2568 c366.3496 228.7734 365.9854 231.9316 Yf306.9365 106.2051 m306.9653 103.0293 306.7227 100.5215 v306.582 99.0674 305.9058 98.6201 304.5273 98.374 c303.126 98.124 301.4321 98.0059 299.6777 98.0068 c297.9209 98.0078 296.229 98.1289 294.8296 98.3799 c293.4502 98.6299 292.7749 99.0771 292.6362 100.5322 c292.3965 103.0381 292.4292 106.2158 Y306.9365 106.2051 Lf*u310.0566 389.0586 m307.6543 377.6152 305.2534 372.4131 302.2129 356.7266 C303.7334 356.0859 L303.1733 368.0898 304.5337 379.8555 303.0933 390.7393 C302.6353 389.9756 L304.6724 388.7598 305.5625 389.2773 306.6626 389.0527 c307.75 388.835 307.8789 388.0957 310.7891 388.5098 C310.0566 389.0586 Lf1 D358.4668 630.5566 m368.6289 629.373 376.7324 633.2725 379.2168 640.6787 C381.6992 648.084 377.584 656.0825 368.7627 661.2637 C369.5752 659.8721 L373.6016 659.1782 377.6992 660.7456 379.8701 662.498 C378.8193 662.5879 377.7686 663.083 V377.7246 663.0234 L379.2695 662.8135 380.166 663.0933 V374.4844 664.6538 372.0039 669.1357 371.3223 675.2183 C371.2412 674.458 L372.9219 677.6592 372.8438 679.54 371.5625 682.7017 c370.2813 685.8633 369.7607 688.1436 368.5215 691.0649 c367.4707 693.5366 365.9668 694.2085 363.918 694.4258 c362.0391 694.6265 360.5566 694.5063 358.877 694.2266 C357.376 697.0176 354.7041 698.978 351.2529 700.1191 c347.8018 701.2593 344.8906 700.6289 342.459 699.6387 c340.0273 698.6479 337.918 697.9497 333.6055 696.8472 c329.6143 695.8271 326.0723 695.2568 322.8906 693.9961 c319.709 692.7354 317.9092 690.8145 316.9609 688.0508 C318.6445 690.1396 320.623 691.0093 324.5459 691.6455 C324.4521 691.7002 L322.0205 691.0098 320.375 690.3032 318.9277 688.5718 C322.3906 691.3271 326.0234 691.0659 331.0537 692.3755 C331.5723 692.875 L327.4023 690.4287 320.3164 688.8164 316.1699 685.8115 c313.4121 683.8125 312.1699 681.6758 311.0352 678.7471 C311.8594 679.1812 L303.6523 679.0171 297.3369 675.2388 295.1963 668.8564 C293.7764 664.6216 294.5142 660.1934 297.0562 656.2095 C296.9761 657.9634 L294.584 655.0586 289.855 652.0396 285.9399 646.7896 c282.3013 641.9106 280.793 636.127 281.2539 630.7915 c281.6523 626.1777 283.605 623.2363 283.6465 620.1963 C284.3652 622.6362 283.2471 625.665 283.2471 629.083 c283.2471 635.3511 286.8149 643.522 296.0073 650.5015 C292.8994 645.4097 287.2393 639.1587 287.2393 629.7837 c287.2393 622.7085 291.064 619.1704 293.0176 615.7515 C293.9292 616.6538 L270.7598 615.2734 266.3179 613.3525 257.9141 601.3477 c252.7207 593.9277 244.6489 583.2197 239.667 578.5981 c238.5454 577.5576 238.5259 575.957 240.3271 571.9956 C241.3975 574.5254 L235.6338 568.3184 227.02 555.8418 220.3066 548.6846 C222.1797 547.4453 L219.1377 553.9277 213.4355 560.9507 209.0537 568.1738 c205.5806 573.8989 201.6108 582.9399 199.3696 589.4229 c198.4849 591.9824 198.3213 593.7095 198.4653 595.6235 c198.9697 602.3477 198.0806 606.0254 198.3198 609.8579 c198.5283 613.1992 198.4316 613.8594 196.9688 617.0342 c195.7441 619.6924 193.8813 622.9321 192.9683 625.1016 c192.4028 626.4429 192.1899 627.3301 192.0547 628.8691 c191.8516 631.1875 188.2632 630.417 186.8682 626.4751 c186.7969 626.2739 186.6982 626.2617 186.5234 626.395 c183.3633 628.7939 180.9482 630.2803 179.1436 629.0161 c177.9795 628.2002 177.7676 626.5649 178.7412 624.1118 c178.8491 623.8418 178.7549 623.75 178.501 623.8423 c176.9326 624.4102 175.6533 624.3164 174.8374 623.4302 c173.9277 622.4419 173.874 620.9717 173.999 617.4341 c174.0186 616.9111 173.9023 616.7383 173.2622 616.6064 c172.5186 616.4536 171.9795 616.1904 171.5181 615.7935 c170.8569 615.2246 170.4297 614.377 170.3745 613.1523 c170.2979 611.4517 170.2202 609.6724 170.0923 607.8101 c169.9775 606.1494 170.2632 605.3589 170.958 604.1489 c172.4985 601.4678 173.7998 597.3369 175.7402 594.2646 c177.9009 590.8433 179.2217 589.4023 181.3223 587.7217 c183.0508 586.3389 184.2949 583.8682 185.3438 581.3589 c188.4053 574.0361 194.1079 556.9287 197.8291 547.7451 c201.5508 538.5615 207.4331 525.896 213.376 519.8335 c215.5186 517.6479 217.0781 517.8228 219.4985 519.3535 c234.6846 528.957 253.4727 548.0454 264.5771 565.1528 C263.6367 565.1323 L258.1147 551.6069 258.3813 543.0933 265.5576 534.48 c266.6909 533.1191 266.8374 532.2783 266.6377 530.1182 c266.1582 524.9155 265.6143 516.2261 266.4756 505.7432 c267.2368 496.4805 266.5977 489.1812 264.5972 481.6577 C265.1484 482.062 L262.9966 482.0176 262.2695 481.5835 261.5859 479.6655 c260.9556 477.8965 260.3472 476.1069 259.5952 474.4546 c258.8438 472.8018 258.7915 471.5518 260.5342 469.292 C260.5557 470.4932 L258.4341 466.4512 256.1538 460.1685 254.6367 454.4004 c252.209 445.1636 251.3115 435.4385 248.5752 432.7769 c247.9644 432.1831 247.6221 431.6118 247.8535 430.5742 c248.3403 428.3857 250.1714 424.8369 251.9717 422.4658 C251.1519 425.7944 L249.561 405.1172 253.5142 377.9531 262.9097 351.6982 c267.3569 339.2715 270.646 327.2383 274.4209 317.9092 c276.8047 312.0195 278.623 308.8457 281.2041 306.6855 c282.7715 305.3721 284.4453 303.8633 285.8857 302.4824 c288.7256 299.7617 291.855 298.2656 298.7749 297.9355 C296.7705 299.9824 L296.5308 293.8994 297.3672 288.2285 298.7363 281.9082 c300.3354 274.5273 300.854 270.6973 298.5308 264.9277 c295.3096 256.9258 293.0078 250.0635 292.6934 243.3057 c292.1523 231.6699 295.8506 220.5771 295.1289 204.6123 C295.9053 206.4951 L293.5151 206.1904 293.2188 205.7305 293.312 203.3418 c293.4644 199.4268 293.541 194.4414 293.312 189.3574 c293.0068 182.5938 292.4375 179.1533 290.4131 173.8467 c288.9385 169.9834 287.3335 165.5996 287.5552 157.6973 c287.7891 149.3096 287.3896 146.9736 285.3115 143.2607 c282.9722 139.0791 282.4927 137.0342 282.4434 133.8457 C283.1914 135.0576 L280.8091 135.1543 278.6401 135.1934 276.5537 135.1924 c274.5234 135.1895 272.7393 135.1729 270.3018 135.0703 c268.7832 135.0039 268.3179 134.6094 268.0571 132.9482 c267.6431 130.3271 267.4424 126.6016 267.4434 122.0977 c267.4448 117.5928 267.6592 113.8662 268.0762 111.248 c268.3413 109.5898 268.8057 109.1963 270.3257 109.1299 c270.958 109.1064 271.5449 109.085 272.104 109.0713 C271.8218 109.3525 L271.4087 106.7295 271.207 103.0049 271.208 98.501 c271.21 93.9961 271.4233 90.2695 271.8413 87.6504 c272.105 85.9941 272.5708 85.5986 274.0913 85.5332 c276.5293 85.4346 278.313 85.4229 280.3438 85.4268 c282.4282 85.4277 284.1265 85.4434 286.5078 85.5449 c288.0269 85.6133 288.4917 86.0078 288.7534 87.667 c289.167 90.2871 289.3687 94.0137 289.3667 98.5186 c289.3667 100.041 289.3418 101.4746 289.293 102.8066 C288.7319 102.5273 L291.3994 101.4736 295.2822 100.9336 299.6709 100.9287 c303.9746 100.9229 307.9375 101.5381 310.5957 102.6152 C310.1777 102.9258 L310.127 101.5654 310.1045 100.0986 310.1045 98.5371 c310.1064 94.0322 310.3203 90.3066 310.7383 87.6865 c311 86.0283 311.4648 85.6338 312.9863 85.5693 c315.4258 85.4717 317.209 85.459 319.2383 85.4609 c321.3223 85.4639 323.0225 85.4805 325.4023 85.5811 c326.9199 85.6494 327.3867 86.0449 327.6494 87.7012 c328.0625 90.3223 328.2637 94.0479 328.2637 98.5547 c328.2598 103.0596 328.0469 106.7822 327.6289 109.4033 c327.3643 111.0615 326.8994 111.458 325.3789 111.5215 c324.7051 111.5488 324.0859 111.5684 323.4971 111.585 C323.8838 111.2998 L324.2949 113.9189 324.5 117.6445 324.4961 122.1523 c324.4961 126.6563 324.2832 130.3799 323.8672 133.001 c323.6006 134.6592 323.1348 135.0527 321.6152 135.1182 c319.2324 135.2139 317.5332 135.2295 315.4502 135.2285 C317.1787 133.1982 L317.1387 136.7988 316.2949 138.5273 314.1123 140.8955 c311.8848 143.3164 311.5137 144.7012 311.5039 153.9355 c311.4961 160.3613 311.3359 163.6514 310.6934 167.9961 c309.7383 174.4814 311.5801 175.9814 313.9766 183.4043 c315.7793 188.9834 318.0762 194.8867 319.6055 198.4941 c320.542 200.6943 320.4277 201.2275 318.3008 202.3613 C318.1279 199.6514 L326.0664 218.3223 333.7314 237.8037 334.4531 251.7842 c335.2227 266.6592 329.9434 275.9561 333.2813 292.2803 C336.3477 291.0586 337.5674 289.8174 337.4189 285.918 c337.2441 281.2969 337.5635 276.3281 338.2275 271.4502 c338.5879 268.8086 338.5938 266.4629 338.3477 263.2871 c337.7471 255.5625 337.6895 252.7529 339.8008 248.1475 C339.0352 251.2383 L339.1035 250.4316 339.1816 249.5957 339.2754 248.7363 c339.7227 244.4922 340.3066 241.0059 340.9824 238.583 c341.4102 237.0479 341.9111 236.7285 343.4277 236.8262 c344.3477 236.8887 345.2803 236.9688 346.1523 237.0537 C345.4717 237.2754 L349.9131 230.0732 354.6816 225.9844 360.1172 226.791 c364.9385 227.5068 367.9727 233.1406 369.6504 240.9434 C367.5254 239.4609 L371.1611 239.7363 374.5576 240.2422 v376.0625 240.4688 376.4844 240.8877 376.5762 242.4785 c376.7207 244.9902 376.5508 248.5205 376.0879 252.7617 c375.6348 256.9199 375.0283 260.4912 374.3418 262.9102 c373.9082 264.4434 373.4063 264.7637 371.8887 264.6582 c368.4629 264.4199 364.8525 263.9043 Y370.1924 263.1543 L368.6768 268.2998 366.0215 272.9043 364.7754 278.4307 c363.7754 282.8672 363.2598 288.4004 363.2051 293.708 C361.8438 292.5742 L365.4785 292.8506 368.875 293.3555 v370.3818 293.582 370.8027 294.002 370.8945 295.5918 c371.041 298.1045 370.8701 301.6348 370.4063 305.875 c369.9521 310.0322 369.3467 313.6035 368.6611 316.0234 c368.2266 317.5547 367.7246 317.8691 366.207 317.7715 c361.7988 317.4893 357.5762 316.8086 Y359.793 315.1514 L357.8223 318.5664 355.2783 320.2402 351.8613 320.2402 c349.4258 320.2402 348.416 319.4883 347.5313 319.9697 c346.4922 320.5352 346.6934 324.8193 343.0664 326.6289 C343.1484 324.3926 L359.1152 365.0889 367.5195 394.8613 364.1582 423.3135 C363.4785 420.5923 L366.0811 423.5933 367.5605 425.7944 367.5605 427.7554 c367.5605 429.436 366.6797 431.2368 364.8389 434.1577 c364.2627 435.0708 364.2227 435.626 364.7188 436.519 c365.5205 437.9595 365.4189 439.0913 364.4395 440.6406 c362.7188 443.3618 362.0664 445.4702 361.4375 448.4839 c359.6768 456.9272 354.4336 464.6108 347.5918 469.5327 C347.6953 468.7817 L348.6641 469.2314 348.9395 469.9438 348.7539 471.3115 c348.6055 472.4175 348.2148 473.5952 348.3418 474.9019 C347.5918 477.3359 L347.9512 474.0942 349.0391 473.167 351.6729 470.853 c360.5566 463.0498 386.8418 444.5537 397.5322 433.5176 c400.0039 430.9663 401.0098 429.4004 402.2139 426.0146 c403.1738 423.3135 405.3008 419.5503 407.4961 416.7109 c409.957 413.5293 410.9551 408.7397 413.1992 404.4658 c414.6162 401.7661 415.3887 401.0801 417.7607 400.5039 c420.6416 399.8037 421.8418 399.8438 423.2832 400.624 c423.9121 400.9653 424.4219 401.0703 425.3047 401.0039 c426.7012 400.9009 427.1992 401.0435 428.3242 401.9443 c429.6357 402.9937 430.1719 403.1099 432.0469 403.0649 c433.707 403.0249 434.9277 402.7451 436.6504 402.7451 c438.75 402.7451 439.4668 402.9629 440.1104 403.665 c440.8086 404.4268 440.5195 405.853 439.75 407.6167 c439.5352 408.1118 439.5439 408.2158 440.0293 408.3071 c443.2314 408.9072 443.4111 410.418 442.1113 412.0688 c440.6299 413.9492 438.4688 418.2715 437.0703 421.9531 c436.4434 423.5991 435.8428 424.6646 434.417 426.2344 c432.6348 428.1953 430.5479 430.5562 428.3301 432.5679 c426.9316 433.8359 425.3594 434.5181 423.3887 435.2422 c417.4258 437.4321 411.6719 440.1606 407.3125 444.1294 c396.2051 454.2451 373.2324 485.4946 361.0088 496.0991 C362.3281 493.2085 L360.9316 508.0732 363.2324 520.147 364.1406 532.7788 C363.002 531.6416 L366.7207 532.2505 367.4707 532.9302 367.5996 534.5498 c368.0029 539.689 369.3555 546.8569 369.9658 552.7402 C369.6016 552.3276 L376.2441 531.6787 392.5703 513.5913 416.5801 515.2715 C398.6523 516.7925 391.5371 539.4668 392.1289 558.3921 C387.7197 555.6499 L401.25 543.3203 411.0996 516.394 394.0723 500.1709 C413.46 510.9497 417.3164 538.2241 406.8008 559.8789 C406.5635 559.6582 L414.6123 548.9902 417.5039 535.2715 417.332 521.8618 C420.1309 535.9678 417.0088 551.7979 406.9951 567.0884 c399.2207 578.9595 383.1973 595.0859 377.7051 603.7007 c372.2441 612.2632 369.6279 620.9297 369.8438 633.314 cF*UU%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI3 /terminate get execAdobe_pattern_AI3 /terminate get execAdobe_customcolor /terminate get execAdobe_cshow /terminate get execAdobe_packedarray /terminate get exec%%EOF