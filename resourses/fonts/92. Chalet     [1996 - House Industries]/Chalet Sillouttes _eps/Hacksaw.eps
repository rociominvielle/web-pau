%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(TM) 3.2%%AI8_CreatorVersion: 9.0%%For: (Rich Roat) (House Industries)%%Title: (Hacksaw.eps)%%CreationDate: 5/1/02 12:53 PM%%BoundingBox: 59 323 549 470%%DocumentProcessColors: Black%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0%%+ procset Adobe_cshow 1.1 0%%+ procset Adobe_customcolor 1.0 0%%+ procset Adobe_pattern_AI3 1.0 0%%+ procset Adobe_Illustrator_AI3 1.0 1%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI3_TemplateBox: 306.5 395.5 306.5 395.5%AI3_TileBox: 30.2354 32.5293 582.2354 760.5293%AI3_DocumentPreview: Macintosh_ColorPic%%PageOrigin:30.2354 32.5293%%AI3_PaperRect:-30 761 582 -31%%AI3_Margin:30 -33 -30 31%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%%EndComments%%BeginProlog%%BeginResource: procset Adobe_packedarray 2.0 0%%Title: (Packed Array Operators)%%Version: 2.0 0%%CreationDate: (8/2/90) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_packedarray 5 dict dup begin put/initialize{/packedarray where	{	pop	}	{	Adobe_packedarray begin	Adobe_packedarray		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall end	} ifelse} def/terminate{} def/packedarray{array astore readonly} def/setpacking{pop} def/currentpacking{false} defcurrentdict readonly pop end%%EndResourceAdobe_packedarray /initialize get exec%%BeginResource: procset Adobe_cshow 1.1 0%%Title: (cshow Operator)%%Version: 1.1 0%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 3 dict dup begin put/initialize{/cshow where	{	pop	}	{	userdict /Adobe_cshow_vars 1 dict dup begin put	/_cshow		{} def	Adobe_cshow begin	Adobe_cshow		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall end end	} ifelse} def/terminate{} def/cshow{exchAdobe_cshow_vars	exch /_cshow	exch put	{	0 0 Adobe_cshow_vars /_cshow get exec	} forall} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_customcolor 1.0 0%%Title: (Custom Color Operators)%%Version: 1.0 0%%CreationDate: (5/9/88) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_customcolor 5 dict dup begin put/initialize{/setcustomcolor where	{	pop	}	{	Adobe_customcolor begin	Adobe_customcolor		{		dup xcheck			{			bind			} if		pop pop		} forall end	Adobe_customcolor begin	} ifelse} def/terminate{currentdict Adobe_customcolor eq	{ end	} if} def/findcmykcustomcolor{5 packedarray}  def/setcustomcolor{exchaload pop pop4	{	4 index mul 4 1 roll	} repeat5 -1 roll popsetcmykcolor} def/setoverprint{pop} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_pattern_AI3 1.1 0%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)%%Version: 1.1 0%%CreationDate: (7/21/89) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_pattern_AI3 16 dict dup begin put/initialize{/definepattern where	{	pop	}	{	Adobe_pattern_AI3 begin	Adobe_pattern_AI3		{		dup xcheck			{			bind			} if		pop pop		} forall	mark	cachestatus 7 1 roll pop pop pop pop exch pop exch		{		{		10000 add		dup 2 index gt			{			exit			} if		dup setcachelimit		} loop		} stopped	cleartomark	} ifelse} def/terminate{currentdict Adobe_pattern_AI3 eq	{ end	} if} deferrordict/nocurrentpoint{popstop} puterrordict/invalidaccess{popstop} put/patternencoding256 array def0 1 255{patternencoding exch ( ) 2 copy exch 0 exch put cvn put} for/definepattern{17 dict begin/uniform exch def/cache exch def/key exch def/procarray exch def/mtx exch matrix invertmatrix def/height exch def/width exch def/ctm matrix currentmatrix def/ptm matrix def/str 32 string def/slice 9 dict defslice /s 1 putslice /q 256 procarray length div sqrt floor cvi putslice /b 0 put/FontBBox [0 0 0 0] def/FontMatrix mtx matrix copy def/Encoding patternencoding def/FontType 3 def/BuildChar	{	exch begin	/setstrokeadjust where {pop true setstrokeadjust} if	slice begin	dup q dup mul mod s idiv /i exch def	dup q dup mul mod s mod /j exch def	q dup mul idiv procarray exch get	/xl j width s div mul def	/xg j 1 add width s div mul def	/yl i height s div mul def	/yg i 1 add height s div mul def	uniform		{		1 1		}		{		width 0 dtransform		dup mul exch dup mul add sqrt dup 1 add exch div		0 height dtransform		dup mul exch dup mul add sqrt dup 1 add exch div		} ifelse	width 0 cache		{		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul		setcachedevice		}		{		setcharwidth		} ifelse	gsave	scale	newpath	xl yl moveto	xg yl lineto	xg yg lineto	xl yg lineto	closepath	clip	newpath end end	exec	grestore	} defkey currentdict definefontend} def/patterncachesize{gsavenewpath0 0 movetowidth 0 linetowidth height lineto0 height linetoclosepathpatternmatrix setmatrixpathbboxexch ceiling 4 -1 roll floor sub 3 1 rollceiling exch floor submul 1 addgrestore} def/patterncachelimit{cachestatus 7 1 roll 6 npop 8 mul} def/patternpath{exch dup begin setfontctm setmatrixconcatslice exch /b exch slice /q get dup mul mul putFontMatrix concatuniform	{	width 0 dtransform round width div exch round width div exch	0 height dtransform round height div exch height div exch	0 0 transform round exch round exch	ptm astore setmatrix	}	{	ptm currentmatrix pop	} ifelse{currentpoint} stopped not	{	2 npop	pathbbox	true	4 index 3 index eq	4 index 3 index eq	and		{		pop false			{			{2 npop}			{3 npop true}			{7 npop true}			{pop true}			pathforall			} stopped			{			5 npop true			} if		} if		{		height div ceiling height mul 4 1 roll		width div ceiling width mul 4 1 roll		height div floor height mul 4 1 roll		width div floor width mul 4 1 roll		2 index sub height div ceiling cvi exch		3 index sub width div ceiling cvi exch		4 2 roll moveto		FontMatrix mtx invertmatrix		dup dup 4 get exch 5 get rmoveto		ptm ptm concatmatrix pop		slice /s		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi		dup slice /q get gt			{			pop slice /q get			} if		put		0 1 slice /s get dup mul 1 sub			{			slice /b get add			gsave			0 1 str length 1 sub				{				str exch 2 index put				} for			pop			dup				{				gsave				ptm setmatrix				1 index str length idiv {str show} repeat				1 index str length mod str exch 0 exch getinterval show				grestore				0 height rmoveto				} repeat			grestore			} for		2 npop		}		{		4 npop		} ifelse	} ifend} def/patternclip{clip} def/patternstrokepath{strokepath} def/patternmatrixmatrix def/patternfill{dup type /dicttype eq	{	Adobe_pattern_AI3 /patternmatrix get	} ifgsavepatternclipAdobe_pattern_AI3 /patternpath get execgrestorenewpath} def/patternstroke{dup type /dicttype eq	{	Adobe_pattern_AI3 /patternmatrix get	} ifgsavepatternstrokepathtrue	{		{			{			newpath 			moveto			}			{			lineto			}			{			curveto			}			{			closepath			3 copy			Adobe_pattern_AI3 /patternfill get exec			} pathforall		3 npop		} stopped			{			5 npop			patternclip			Adobe_pattern_AI3 /patternfill get exec			} if	}	{	patternclip	Adobe_pattern_AI3 /patternfill get exec	} ifelsegrestorenewpath} def/patternashow{3 index type /dicttype eq	{	Adobe_pattern_AI3 /patternmatrix get 4 1 roll	} if	{	2 npop (0) exch	2 copy 0 exch put pop	gsave	false charpath currentpoint	6 index 6 index 6 index	Adobe_pattern_AI3 /patternfill get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshow5 npop} def/patternawidthshow{6 index type /dicttype eq	{	Adobe_pattern_AI3 /patternmatrix get 7 1 roll	} if	{	2 npop (0) exch	2 copy 0 exch put 	gsave	_sp eq {5 index 5 index rmoveto} if	false charpath currentpoint	9 index 9 index 9 index	Adobe_pattern_AI3 /patternfill get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshow8 npop} def/patternashowstroke{4 index type /dicttype eq	{	patternmatrix /patternmatrix get 5 1 roll	} if4 1 roll	{	2 npop (0) exch	2 copy 0 exch put pop	gsave	false charpath	currentpoint	4 index setmatrix	7 index 7 index 7 index	Adobe_pattern_AI3 /patternstroke get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshow6 npop} def/patternawidthshowstroke{7 index type /dicttype eq	{	patternmatrix /patternmatrix get 8 1 roll	} if7 1 roll	{	2 npop (0) exch	2 copy 0 exch put	gsave	_sp eq {5 index 5 index rmoveto} if	false charpath currentpoint	7 index setmatrix	10 index 10 index 10 index	Adobe_pattern_AI3 /patternstroke get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshow9 npop} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)%%Version: 1.1 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI3 71 dict dup begin put/initialize{userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put/_lp /none def/_pf {} def/_ps {} def/_psf {} def/_pss {} def/_pjsf {} def/_pjss {} def/_pola 0 def/_doClip 0 def/cf	currentflat def/_tm matrix def/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def /_renderEnd [null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_rise 0 def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading [0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fScl 0 def/_cnt 0 def/_hs 1 def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_wv 0 def/Tx {} def/Tj {} def/CRender {} def/_AI3_savepage {} def/_gf null def/_cf 4 array def/_if null def/_of false def/_fc {} def/_gs null def/_cs 4 array def/_is null def/_os false def/_sc {} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null defAdobe_Illustrator_AI3 beginAdobe_Illustrator_AI3 dup /nc get begin	{	dup xcheck		{		bind		} if	pop pop	} forallendendendAdobe_Illustrator_AI3 beginAdobe_Illustrator_AI3_vars beginnewpath} def/terminate{endend} def/_null def/ddef{Adobe_Illustrator_AI3_vars 3 1 roll put} def/xput{dup load dup length exch maxlength eq	{	dup dup load dup	length 2 mul dict copy def	} ifload begin def end} def/npop{	{	pop	} repeat} def/sw{dup length exch stringwidthexch 5 -1 roll 3 index mul add4 1 roll 3 1 roll mul add} def/swj{dup 4 1 rolldup length exch stringwidth exch 5 -1 roll 3 index mul add4 1 roll 3 1 roll mul add 6 2 roll /_cnt 0 ddef{1 index eq {/_cnt _cnt 1 add ddef} if} forall popexch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop} def/ss{4 1 roll	{	2 npop 	(0) exch 2 copy 0 exch put pop	gsave	false charpath currentpoint	4 index setmatrix	stroke	grestore	moveto	2 copy rmoveto	} exch cshow3 npop} def/jss{4 1 roll	{	2 npop 	(0) exch 2 copy 0 exch put 	gsave	_sp eq 		{		exch 6 index 6 index 6 index 5 -1 roll widthshow  		currentpoint		}		{		false charpath currentpoint		4 index setmatrix stroke		}ifelse	grestore	moveto	2 copy rmoveto	} exch cshow6 npop} def/sp{	{	2 npop (0) exch	2 copy 0 exch put pop	false charpath	2 copy rmoveto	} exch cshow2 npop} def/jsp{	{	2 npop 	(0) exch 2 copy 0 exch put 	_sp eq 		{		exch 5 index 5 index 5 index 5 -1 roll widthshow  		}		{		false charpath		}ifelse	2 copy rmoveto	} exch cshow5 npop} def/pl{transform0.25 sub round 0.25 add exch0.25 sub round 0.25 add exchitransform} def/setstrokeadjust where	{	pop true setstrokeadjust	/c	{	curveto	} def	/C	/c load def	/v	{	currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{	2 copy curveto	} def	/Y	/y load def	/l	{	lineto	} def	/L	/l load def	/m	{	moveto	} def	}	{	/c	{	pl curveto	} def	/C	/c load def	/v	{	currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{	pl 2 copy curveto	} def	/Y	/y load def	/l	{	pl lineto	} def	/L	/l load def	/m	{	pl moveto	} def	} ifelse/d{setdash} def/cf	{} def/i{dup 0 eq	{	pop cf	} ifsetflat} def/j{setlinejoin} def/J{setlinecap} def/M{setmiterlimit} def/w{setlinewidth} def/H{} def/h{closepath} def/N{_pola 0 eq 	{	_doClip 1 eq {clip /_doClip 0 ddef} if 	newpath	} 	{	/CRender {N} ddef	}ifelse} def/n{N} def/F{_pola 0 eq 	{	_doClip 1 eq 		{		gsave _pf grestore clip newpath /_lp /none ddef _fc 		/_doClip 0 ddef		}		{		_pf		}ifelse	} 	{	/CRender {F} ddef	}ifelse} def/f{closepathF} def/S{_pola 0 eq 	{	_doClip 1 eq 		{		gsave _ps grestore clip newpath /_lp /none ddef _sc 		/_doClip 0 ddef		}		{		_ps		}ifelse	} 	{	/CRender {S} ddef	}ifelse} def/s{closepathS} def/B{_pola 0 eq 	{	_doClip 1 eq	gsave F grestore 		{		gsave S grestore clip newpath /_lp /none ddef _sc		/_doClip 0 ddef		} 		{		S		}ifelse	}	{	/CRender {B} ddef	}ifelse} def/b{closepathB} def/W{/_doClip 1 ddef} def/*{count 0 ne 	{	dup type (stringtype) eq {pop} if	} if _pola 0 eq {newpath} if} def/u{} def/U{} def/q{_pola 0 eq {gsave} if} def/Q{_pola 0 eq {grestore} if} def/*u{_pola 1 add /_pola exch ddef} def/*U{_pola 1 sub /_pola exch ddef _pola 0 eq {CRender} if} def/D{pop} def/*w{} def/*W{} def/`{/_i save ddef6 1 roll 4 npopconcat popuserdict begin/showpage {} def0 setgray0 setlinecap1 setlinewidth0 setlinejoin10 setmiterlimit[] 0 setdash/setstrokeadjust where {pop false setstrokeadjust} ifnewpath0 setgrayfalse setoverprint} def/~{end_i restore} def/@{} def/&{} def/O{0 ne/_of exch ddef/_lp /none ddef} def/R{0 ne/_os exch ddef/_lp /none ddef} def/g{/_gf exch ddef/_fc{_lp /fill ne	{	_of setoverprint	_gf setgray	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/G{/_gs exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_gs setgray	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/k{_cf astore pop/_fc{_lp /fill ne	{	_of setoverprint	_cf aload pop setcmykcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/K{_cs astore pop/_sc{_lp /stroke ne	{	_os setoverprint	_cs aload pop setcmykcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/x{/_gf exch ddeffindcmykcustomcolor/_if exch ddef/_fc{_lp /fill ne	{	_of setoverprint	_if _gf 1 exch sub setcustomcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/X{/_gs exch ddeffindcmykcustomcolor/_is exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_is _gs 1 exch sub setcustomcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/dp{dup null eq{pop_dp 0 ne	{	0 1 _dp 1 sub _dl mod		{		_da exch get 3 get		} for	_dp 1 sub _dl mod 1 add packedarray	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll	definepattern pop	} if}{_dp 0 ne _dp _dl mod 0 eq and	{	null dp	} if7 packedarray _da exch _dp _dl mod exch put_dp _dl mod _da 0 get 4 get 2 packedarray/_dp _dp 1 add def} ifelse} def/E{_ed begindup 0 get type /arraytype ne	{	0		{		dup 1 add index type /arraytype eq			{			1 add			}			{			exit			} ifelse		} loop	array astore	} if/_dd exch def/_ury exch def/_urx exch def/_lly exch def/_llx exch def/_n exch def/_y 0 def/_dl 4 def/_dp 0 def/_da _dl array def0 1 _dd length 1 sub	{	/_d exch _dd exch get def	0 2 _d length 2 sub		{		/_x exch def		/_c _d _x get _ ne def		/_r _d _x 1 add get cvlit def		_r _ ne			{			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 				[				/save cvx				_llx neg _lly neg /translate cvx				_c					{					nc /begin cvx					} if				_r dup type /stringtype eq					{					cvx					}					{					{exec} /forall cvx					} ifelse				_c					{					/end cvx					} if				/restore cvx				] cvx			/_fn 12 _n length add string def			_y _fn cvs pop			/_y _y 1 add def			_fn 12 _n putinterval			_fn _c false dp			_d exch _x 1 add exch put			} if		} for	} fornull dp_n _dd /_pdend xput} def/fc{_fm dup concatmatrix pop} def/p{/_fm exch ddef9 -2 roll _pm translate fc7 -2 roll _pm scale fc5 -1 roll _pm rotate fc4 -2 roll exch 0 ne	{	dup _pm rotate fc	1 -1 _pm scale fc	neg _pm rotate fc	}	{	pop	} ifelsedup _pm rotate fcexch dup sin exch cos div 1 0 0 1 0 6 2 roll_pm astore fcneg _pm rotate fc_pd exch get /_fdd exch ddef/_pf{save/_doClip 0 ddef0 1 _fdd length 1 sub	{	/_fd exch _fdd exch get ddef	_fd	0 2 _fd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _fc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _fm			patternfill			}			{			pop			fill			} ifelse		grestore		pop		} for	pop	} forrestorenewpath} ddef/_psf{save/_doClip 0 ddef0 1 _fdd length 1 sub	{	/_fd exch _fdd exch get ddef	_fd	0 2 _fd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _fc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _fm			9 copy 6 npop patternashow			}			{			pop			6 copy 3 npop ashow			} ifelse		grestore		pop		} for	pop	} forrestore%3 npop newpathsw rmoveto} ddef/_pjsf{save/_doClip 0 ddef0 1 _fdd length 1 sub	{	/_fd exch _fdd exch get ddef	_fd	0 2 _fd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _fc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _fm			12 copy 6 npop patternawidthshow			}			{			pop 9 copy 3 npop awidthshow			} ifelse		grestore		pop		} for	pop	} forrestoreswj rmoveto} ddef/_lp /none ddef} def/sc{_sm dup concatmatrix pop} def/P{/_sm exch ddef9 -2 roll _pm translate sc7 -2 roll _pm scale sc5 -1 roll _pm rotate sc4 -2 roll exch 0 ne	{	dup _pm rotate sc	1 -1 _pm scale sc	neg _pm rotate sc	}	{	pop	} ifelsedup _pm rotate scexch dup sin exch cos div 1 0 0 1 0 6 2 roll_pm astore scneg _pm rotate sc_pd exch get /_sdd exch ddef/_ps{save/_doClip 0 ddef0 1 _sdd length 1 sub	{	/_sd exch _sdd exch get ddef	_sd	0 2 _sd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _sc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _sm			patternstroke			}			{			pop stroke			} ifelse		grestore		pop		} for	pop	} forrestorenewpath} ddef/_pss{save/_doClip 0 ddef0 1 _sdd length 1 sub	{	/_sd exch _sdd exch get ddef	_sd	0 2 _sd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _sc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _sm			10 copy 6 npop patternashowstroke			}			{			pop 7 copy 3 npop ss			} ifelse		grestore		pop		} for	pop	} forrestorepop sw rmoveto} ddef/_pjss{save/_doClip 0 ddef0 1 _sdd length 1 sub	{	/_sd exch _sdd exch get ddef	_sd	0 2 _sd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _sc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _sm			13 copy 6 npop patternawidthshowstroke			}			{			pop 10 copy 3 npop jss			} ifelse		grestore		pop		} for	pop	} forrestorepop swj rmoveto} ddef/_lp /none ddef} def/A{pop} def/nc 3 dict defnc begin/setgray{pop} bind def/setcmykcolor{4 npop} bind def/setcustomcolor{2 npop} bind defcurrentdict readonly pop endcurrentdict readonly pop endsetpacking/annotatepage{} def%%EndResource%%EndProlog%%BeginSetupAdobe_cshow /initialize get execAdobe_customcolor /initialize get execAdobe_pattern_AI3 /initialize get execAdobe_Illustrator_AI3 /initialize get exec%AI3_BeginPattern: (Azure Rings)(Azure Rings) 22.5 22.5 58.5 58.5 [%AI3_Tile(0 O 0 R 0.9569 0.9294 0 0 k 0.9569 0.9294 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1.75 w 4 M []0 d40.5 58.5 m40.5 48.5586 32.4409 40.5 22.5 40.5 c12.5591 40.5 4.5 48.5586 4.5 58.5 c4.5 68.4414 12.5591 76.5 22.5 76.5 c32.4409 76.5 40.5 68.4414 40.5 58.5 cs40.5 22.5 m40.5 12.5586 32.4409 4.5 22.5 4.5 c12.5591 4.5 4.5 12.5586 4.5 22.5 c4.5 32.4414 12.5591 40.5 22.5 40.5 c32.4409 40.5 40.5 32.4414 40.5 22.5 cs40.5 40.5 m40.5 30.5586 32.4409 22.5 22.5 22.5 c12.5591 22.5 4.5 30.5586 4.5 40.5 c4.5 50.4414 12.5591 58.5 22.5 58.5 c32.4409 58.5 40.5 50.4414 40.5 40.5 cs58.5 58.5 m58.5 48.5586 50.4409 40.5 40.5 40.5 c30.5591 40.5 22.5 48.5586 22.5 58.5 c22.5 68.4414 30.5591 76.5 40.5 76.5 c50.4409 76.5 58.5 68.4414 58.5 58.5 cs58.5 22.5 m58.5 12.5586 50.4409 4.5 40.5 4.5 c30.5591 4.5 22.5 12.5586 22.5 22.5 c22.5 32.4414 30.5591 40.5 40.5 40.5 c50.4409 40.5 58.5 32.4414 58.5 22.5 cs58.5 40.5 m58.5 30.5586 50.4409 22.5 40.5 22.5 c30.5591 22.5 22.5 30.5586 22.5 40.5 c22.5 50.4414 30.5591 58.5 40.5 58.5 c50.4409 58.5 58.5 50.4414 58.5 40.5 cs76.5 58.5 m76.5 48.5586 68.4409 40.5 58.5 40.5 c48.5591 40.5 40.5 48.5586 40.5 58.5 c40.5 68.4414 48.5591 76.5 58.5 76.5 c68.4409 76.5 76.5 68.4414 76.5 58.5 cs76.5 22.5 m76.5 12.5586 68.4409 4.5 58.5 4.5 c48.5591 4.5 40.5 12.5586 40.5 22.5 c40.5 32.4414 48.5591 40.5 58.5 40.5 c68.4409 40.5 76.5 32.4414 76.5 22.5 cs76.5 40.5 m76.5 30.5586 68.4409 22.5 58.5 22.5 c48.5591 22.5 40.5 30.5586 40.5 40.5 c40.5 50.4414 48.5591 58.5 58.5 58.5 c68.4409 58.5 76.5 50.4414 76.5 40.5 cs%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Camouflage)(Camouflage) 1 1 73 73 [%AI3_Tile(0 O 0 R 0.5961 0.1412 0.949 0.0275 k 0.5961 0.1412 0.949 0.0275 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d1 73 m1 1 L73 1 L73 73 L1 73 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.498 0.349 0.9725 0.2 k 0.498 0.349 0.9725 0.2 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d18.5449 73 m18.5449 1 L46.7832 1 L46.7832 73 L18.5449 73 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.1882 0.1098 0.9255 0.0157 k 0.1882 0.1098 0.9255 0.0157 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d11.9512 1 m11.9512 4.7129 9.2314 2.8813 9.2314 6.5938 c9.2314 10.2334 4.25 10.2334 4.25 13.8735 c4.25 17.4858 10.0313 17.4858 10.0313 21.0991 c10.0313 24.832 10.208 24.832 10.208 28.5654 c10.208 32.3071 5.5205 32.3071 5.5205 36.0469 c5.5205 39.7021 11.8838 39.7021 11.8838 43.356 c11.8838 47.0566 7.4609 47.0566 7.4609 50.7568 c7.4609 54.4043 5.7959 54.4043 5.7959 58.0542 c5.7959 61.7686 4.6631 61.7686 4.6631 65.4805 c4.6631 69.1636 11.9512 69.3184 11.9512 73 C27.9268 73 L27.9268 69.3184 22.0635 69.1636 22.0635 65.4805 c22.0635 61.7686 28.6631 61.7686 28.6631 58.0542 c28.6631 54.4043 25.1553 54.4043 25.1553 50.7568 c25.1553 47.0566 28.8145 47.0566 28.8145 43.356 c28.8145 39.7021 22.1191 39.7021 22.1191 36.0469 c22.1191 32.3071 26.3945 32.3071 26.3945 28.5654 c26.3945 24.832 24.4248 24.832 24.4248 21.0991 c24.4248 17.4858 20.3838 17.4858 20.3838 13.8735 c20.3838 10.2334 24.6055 10.2334 24.6055 6.5938 c24.6055 2.8813 27.9268 4.7129 27.9268 1 C11.9512 1 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.9255 0.2157 0.9647 0.0745 k 0.9255 0.2157 0.9647 0.0745 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d41.875 1 m41.875 4.7134 42.3867 2.8818 42.3867 6.5938 c42.3867 10.2334 40.5947 10.2334 40.5947 13.8735 c40.5947 17.4858 41.5742 17.4858 41.5742 21.0991 c41.5742 24.832 43.6484 24.832 43.6484 28.5659 c43.6484 32.3076 39.1709 32.3076 39.1709 36.0469 c39.1709 39.7026 39.7549 39.7026 39.7549 43.356 c39.7549 47.0566 45.3896 47.0566 45.3896 50.7568 c45.3896 54.4043 40.1055 54.4043 40.1055 58.0542 c40.1055 61.7686 40.6289 61.7686 40.6289 65.4805 c40.6289 69.1636 41.875 69.3184 41.875 73 C59.0752 73 L59.0752 69.4219 53.4805 70.1934 53.4805 66.6143 c53.4805 62.9136 55.8945 62.9136 55.8945 59.2153 c55.8945 55.502 61.0059 55.502 61.0059 51.7886 c61.0059 48.1489 60.5635 48.1489 60.5635 44.5103 c60.5635 40.897 59.9277 40.897 59.9277 37.2842 c59.9277 33.5508 56.3662 33.5508 56.3662 29.8169 c56.3662 26.0762 61.0908 26.0762 61.0908 22.3354 c61.0908 18.6812 52.6025 18.6812 52.6025 15.0264 c52.6025 11.3262 55.7461 11.3262 55.7461 7.6265 c55.7461 3.978 59.0752 4.6484 59.0752 1 C41.875 1 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Clown Attack)(Clown Attack) 5.25 11 41.25 47 [%AI3_Tile(0 O 0 R 0.9255 0 1 0 k 0.9255 0 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d17.5 18.25 m17.5 15.2119 15.0376 12.75 12 12.75 c8.9624 12.75 6.5 15.2119 6.5 18.25 c6.5 21.2881 8.9624 23.75 12 23.75 c15.0376 23.75 17.5 21.2881 17.5 18.25 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0078 0.9529 0 0 k 0.0078 0.9529 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d22.25 34.125 m22.25 31.2939 19.9556 29 17.125 29 c14.2944 29 12 31.2939 12 34.125 c12 36.9561 14.2944 39.25 17.125 39.25 c19.9556 39.25 22.25 36.9561 22.25 34.125 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0118 0.9608 0.9137 0 k 0.0118 0.9608 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d30 31.625 m30 29.4854 28.2646 27.75 26.125 27.75 c23.9849 27.75 22.25 29.4854 22.25 31.625 c22.25 33.7646 23.9849 35.5 26.125 35.5 c28.2646 35.5 30 33.7646 30 31.625 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0314 0.0196 0.9137 0 k 0.0314 0.0196 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d23.25 24.5 m23.25 22.4287 21.5713 20.75 19.5 20.75 c17.4287 20.75 15.75 22.4287 15.75 24.5 c15.75 26.5713 17.4287 28.25 19.5 28.25 c21.5713 28.25 23.25 26.5713 23.25 24.5 cf%AI6_EndPatternLayer) &(0 O 0 R 0.9569 0.9294 0 0 k 0.9569 0.9294 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d36 22.25 m36 19.0742 33.4258 16.5 30.25 16.5 c27.0742 16.5 24.5 19.0742 24.5 22.25 c24.5 25.4258 27.0742 28 30.25 28 c33.4258 28 36 25.4258 36 22.25 cf%AI6_EndPatternLayer) &(0 O 0 R 0.1882 0.1216 0.8 0.0157 k 0.1882 0.1216 0.8 0.0157 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d24.25 16.5 m24.25 14.8438 22.9067 13.5 21.25 13.5 c19.5933 13.5 18.25 14.8438 18.25 16.5 c18.25 18.1563 19.5933 19.5 21.25 19.5 c22.9067 19.5 24.25 18.1563 24.25 16.5 cf%AI6_EndPatternLayer) &(0 O 0 R 0.8353 0 0 0 k 0.8353 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d37.25 43.875 m37.25 39.5264 33.7236 36 29.375 36 c25.0264 36 21.5 39.5264 21.5 43.875 c21.5 48.2236 25.0264 51.75 29.375 51.75 c33.7236 51.75 37.25 48.2236 37.25 43.875 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0078 0.1961 0.9373 0 k 0.0078 0.1961 0.9373 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d38.75 26.625 m38.75 25.7275 38.0225 25 37.125 25 c36.2275 25 35.5 25.7275 35.5 26.625 c35.5 27.5225 36.2275 28.25 37.125 28.25 c38.0225 28.25 38.75 27.5225 38.75 26.625 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0196 0.5961 0.9137 0 k 0.0196 0.5961 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d19.875 42 m19.875 41.1025 19.1475 40.375 18.25 40.375 c17.3525 40.375 16.625 41.1025 16.625 42 c16.625 42.8975 17.3525 43.625 18.25 43.625 c19.1475 43.625 19.875 42.8975 19.875 42 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0118 0.9608 0.9137 0 k 0.0118 0.9608 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d12.75 28.125 m12.75 26.8135 11.6865 25.75 10.375 25.75 c9.0635 25.75 8 26.8135 8 28.125 c8 29.4365 9.0635 30.5 10.375 30.5 c11.6865 30.5 12.75 29.4365 12.75 28.125 cf%AI6_EndPatternLayer) &(0 O 0 R 0.9255 0 1 0 k 0.9255 0 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d43.25 33 m43.25 30.998 41.627 29.375 39.625 29.375 c37.623 29.375 36 30.998 36 33 c36 35.002 37.623 36.625 39.625 36.625 c41.627 36.625 43.25 35.002 43.25 33 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0314 0.0196 0.9137 0 k 0.0314 0.0196 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d13.25 43.75 m13.25 40.9883 11.0117 38.75 8.25 38.75 c5.4883 38.75 3.25 40.9883 3.25 43.75 c3.25 46.5117 5.4883 48.75 8.25 48.75 c11.0117 48.75 13.25 46.5117 13.25 43.75 cf%AI6_EndPatternLayer) &(0 O 0 R 0.3922 0.9451 0 0 k 0.3922 0.9451 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d6.5 22.25 m6.5 20.7314 5.2686 19.5 3.75 19.5 c2.2314 19.5 1 20.7314 1 22.25 c1 23.7686 2.2314 25 3.75 25 c5.2686 25 6.5 23.7686 6.5 22.25 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0235 0.0118 0.6 0 k 0.0235 0.0118 0.6 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d34.4883 32.75 m34.4883 31.9277 33.8223 31.2617 33 31.2617 c32.1777 31.2617 31.5117 31.9277 31.5117 32.75 c31.5117 33.5723 32.1777 34.2383 33 34.2383 c33.8223 34.2383 34.4883 33.5723 34.4883 32.75 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0314 0.0196 0.9137 0 k 0.0314 0.0196 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d49.25 43.75 m49.25 40.9883 47.0117 38.75 44.25 38.75 c41.4883 38.75 39.25 40.9883 39.25 43.75 c39.25 46.5117 41.4883 48.75 44.25 48.75 c47.0117 48.75 49.25 46.5117 49.25 43.75 cf%AI6_EndPatternLayer) &(0 O 0 R 0.3922 0.9451 0 0 k 0.3922 0.9451 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d42.5 22.25 m42.5 20.7314 41.2686 19.5 39.75 19.5 c38.2314 19.5 37 20.7314 37 22.25 c37 23.7686 38.2314 25 39.75 25 c41.2686 25 42.5 23.7686 42.5 22.25 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0314 0.0196 0.9137 0 k 0.0314 0.0196 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d49.25 7.752 m49.25 4.9902 47.0117 2.752 44.25 2.752 c41.4883 2.752 39.25 4.9902 39.25 7.752 c39.25 10.5137 41.4883 12.752 44.25 12.752 c47.0117 12.752 49.25 10.5137 49.25 7.752 cf%AI6_EndPatternLayer) &(0 O 0 R 0.8353 0 0 0 k 0.8353 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d37.25 7.875 m37.25 3.5264 33.7236 0 29.375 0 c25.0264 0 21.5 3.5264 21.5 7.875 c21.5 12.2236 25.0264 15.75 29.375 15.75 c33.7236 15.75 37.25 12.2236 37.25 7.875 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0314 0.0196 0.9137 0 k 0.0314 0.0196 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d13.25 7.75 m13.25 4.9883 11.0117 2.75 8.25 2.75 c5.4883 2.75 3.25 4.9883 3.25 7.75 c3.25 10.5117 5.4883 12.75 8.25 12.75 c11.0117 12.75 13.25 10.5117 13.25 7.75 cf%AI6_EndPatternLayer) &(0 O 0 R 0.9255 0 1 0 k 0.9255 0 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d7.25 33 m7.25 30.998 5.627 29.375 3.625 29.375 c1.623 29.375 0 30.998 0 33 c0 35.002 1.623 36.625 3.625 36.625 c5.627 36.625 7.25 35.002 7.25 33 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0235 0.4078 0 0 k 0.0235 0.4078 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d39.6533 16.0381 m39.6533 15.1064 38.8975 14.3506 37.9658 14.3506 c37.0342 14.3506 36.2783 15.1064 36.2783 16.0381 c36.2783 16.9697 37.0342 17.7256 37.9658 17.7256 c38.8975 17.7256 39.6533 16.9697 39.6533 16.0381 cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Green Tablecloth)(Green Tablecloth) 0 0 24 24 [%AI3_Tile(0 O 0 R 0.8 0.21 1 0 k 0.8 0.21 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d6 18 m0 18 L0 24 L6 24 L6 18 Lf18 18 m12 18 L12 24 L18 24 L18 18 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.3798 0.0997 0.4747 0 k 0.3798 0.0997 0.4747 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d12 18 m6 18 L6 24 L12 24 L12 18 Lf24 18 m18 18 L18 24 L24 24 L24 18 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d12 12 m6 12 L6 18 L12 18 L12 12 Lf24 12 m18 12 L18 18 L24 18 L24 12 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.3798 0.0997 0.4747 0 k 0.3798 0.0997 0.4747 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d6 12 m0 12 L0 18 L6 18 L6 12 Lf18 12 m12 12 L12 18 L18 18 L18 12 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.8 0.21 1 0 k 0.8 0.21 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d6 6 m0 6 L0 12 L6 12 L6 6 Lf18 6 m12 6 L12 12 L18 12 L18 6 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.3798 0.0997 0.4747 0 k 0.3798 0.0997 0.4747 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d12 6 m6 6 L6 12 L12 12 L12 6 Lf24 6 m18 6 L18 12 L24 12 L24 6 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d12 0 m6 0 L6 6 L12 6 L12 0 Lf24 0 m18 0 L18 6 L24 6 L24 0 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.3798 0.0997 0.4747 0 k 0.3798 0.0997 0.4747 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d6 0 m0 0 L0 6 L6 6 L6 0 Lf18 0 m12 0 L12 6 L18 6 L18 0 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Pyramids)(Pyramids) 1 1 19.5 19.5 [%AI3_Tile(0 O 0 R 0.1882 0.1294 0.102 0.0118 k 0.1882 0.1294 0.102 0.0118 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d1 19.5 m10.25 10.25 l19.5 19.5 l1 19.5 lf%AI6_EndPatternLayer) &(0 O 0 R 0.6235 0.4863 0.4863 0.4784 k 0.6235 0.4863 0.4863 0.4784 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d19.5 1 m10.25 10.25 l1 1 l19.5 1 lf%AI6_EndPatternLayer) &(0 O 0 R 0.3529 0.2549 0.2235 0.0667 k 0.3529 0.2549 0.2235 0.0667 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d1 1 m10.25 10.25 l1 19.5 l1 1 lf%AI6_EndPatternLayer) &(0 O 0 R 0.4902 0.3647 0.3451 0.2196 k 0.4902 0.3647 0.3451 0.2196 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d19.5 19.5 m10.25 10.25 l19.5 1 l19.5 19.5 lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Red Stripe)(Red Stripe) 37 19 73 55 [%AI3_Tile(0 O 0 R 0 0.9608 0.9137 0 k 0 0.9608 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 18 w 4 M []0 d37 37 m73 37 lS%AI6_EndPatternLayer) &] E%AI3_EndPattern%%EndSetup0 A*u0 O0 0 0 1 k0 J 0 j 1 w 4 M []0 d521.4199 323.4473 m510.9443 322.0508 501.9736 326.1914 497.6846 331.5039 c493.4014 336.8076 498.7275 338.1592 501.2422 340.5518 c503.4424 342.6416 502.5635 346.3496 501.4258 348.4795 c499.1055 352.8125 493.8643 359.6309 488.1367 369.7617 c480.1094 383.9668 474.5049 405.9971 472.3438 411.0923 c470.1816 416.1865 464.8242 429.6187 449.6953 429.6187 c434.5654 429.6187 429.7803 415.2603 428.082 410.3203 c426.3838 405.3789 424.2217 396.4712 422.3691 387.6719 c421.5254 384.083 420.0664 381.7324 414.8408 380.9209 C410.2041 375.7559 409.748 367.6484 409.7109 356.0215 C414.4844 355.9707 L412.6367 358.7598 L411.4414 360.5586 411.6885 362.3164 413.3047 363.71 C420.5625 370.0352 L422.0342 371.3525 423.8223 371.1074 424.8994 369.4502 C429.6465 362.2871 L430.7402 360.5439 430.3945 359.0449 428.457 358.1455 C420.4893 354.5264 L426.3447 354.5264 L427.0742 354.5264 427.585 353.9355 427.4775 353.2129 C425.5313 340.043 L425.4219 339.3203 424.7383 338.7275 424.0059 338.7275 C411.7129 338.7275 L410.9844 338.7275 410.3848 339.3242 410.3848 340.0566 C410.3848 341.9346 L410.3848 342.6641 409.7881 343.2627 409.0566 343.2627 C406.8262 343.2627 L406.0957 343.2627 405.4961 343.8594 405.4961 344.5898 C405.4961 347.1172 L389.3672 347.2598 L389.2852 342.4316 387.2578 341.2041 383.9443 341.2754 C382.293 339.9043 L382.0742 339.7305 381.8828 339.7344 381.6699 339.916 C380.1104 341.3379 L378.4609 339.9648 L378.2402 339.793 378.0488 339.7949 377.8379 339.9805 C376.2764 341.3994 L374.6289 340.0273 L374.4082 339.8555 374.2188 339.8594 374.0039 340.041 C372.4443 341.4609 L370.7969 340.0879 L370.5771 339.916 370.3857 339.918 370.1719 340.1016 C368.6133 341.5215 L366.9629 340.1504 L366.7441 339.9785 366.5527 339.9814 366.3418 340.1641 C364.7813 341.584 L363.1299 340.2119 L362.9121 340.0391 362.7227 340.043 362.5088 340.2266 C360.9492 341.6465 L359.2988 340.2734 L359.0801 340.1016 358.8887 340.1035 358.6768 340.2871 C357.1152 341.707 L355.4658 340.3359 L355.248 340.1641 355.0566 340.166 354.8447 340.3486 C353.2852 341.7695 L351.6348 340.3965 L351.416 340.2246 351.2227 340.2285 351.0107 340.4102 C349.4512 341.8301 L347.8008 340.46 L347.583 340.2852 347.3916 340.2891 347.1787 340.4707 C345.6211 341.8936 L343.9707 340.5215 L343.752 340.3477 343.5605 340.3506 343.3477 340.5342 C341.7871 341.9551 L340.1367 340.5811 L339.9189 340.4102 339.7256 340.4141 339.5156 340.5957 C337.9531 342.0156 L336.3047 340.6436 L336.0889 340.4707 335.8955 340.4746 335.6816 340.6563 C334.125 342.0771 L332.4707 340.707 L332.2529 340.5332 332.0625 340.5361 331.8516 340.7188 C330.29 342.1387 L328.6387 340.7656 L328.4199 340.5957 328.2305 340.5977 328.0176 340.7813 C326.458 342.2012 L324.8086 340.8291 L324.5898 340.6563 324.3984 340.6582 324.1855 340.8428 C322.627 342.2627 L320.9775 340.8906 L320.7598 340.7188 320.5664 340.7227 320.3535 340.9043 C318.793 342.3242 L317.1455 340.9512 L316.9258 340.7793 316.7344 340.7832 316.5215 340.9648 C314.959 342.3848 L313.3066 341.0127 L313.0859 340.8408 312.8945 340.8438 312.6816 341.0264 C311.123 342.4482 L309.4707 341.0762 L309.2559 340.9023 309.0645 340.9063 308.8516 341.0898 C307.292 342.5098 L305.6416 341.1348 L305.4229 340.9648 305.2314 340.9688 305.019 341.1504 C303.458 342.5703 L301.8101 341.1992 L301.5898 341.0264 301.3989 341.0303 301.1875 341.2119 C299.6265 342.6328 L297.9751 341.2617 L297.7583 341.0879 297.5674 341.0918 297.3535 341.2734 C295.7939 342.6943 L294.145 341.3213 L293.9258 341.1504 293.7349 341.1523 293.521 341.3359 C291.9619 342.7568 L290.311 341.3828 L290.0928 341.2119 289.9028 341.2139 289.6904 341.3955 C288.1299 342.8184 L286.479 341.4473 L286.2617 341.2734 286.0703 341.2773 285.8564 341.459 C284.2979 342.8789 L282.647 341.5068 L282.4287 341.334 282.2383 341.3379 282.0254 341.5195 C280.4658 342.9404 L278.8145 341.5684 L278.5967 341.3955 278.4063 341.3975 278.1919 341.582 C276.6333 343.0039 L274.9824 341.6309 L274.7642 341.457 274.5737 341.4609 274.3594 341.6445 C272.8008 343.0645 L271.1504 341.6924 L270.9321 341.5195 270.7417 341.5234 270.5273 341.7051 C268.9683 343.126 L267.3184 341.7539 L267.0991 341.5801 266.9092 341.584 266.6953 341.7656 C265.1362 343.1875 L263.4863 341.8164 L263.2676 341.6426 263.0771 341.6465 262.8628 341.8281 C261.3037 343.25 L259.6543 341.876 L259.4351 341.7041 259.2432 341.707 259.0308 341.8896 C257.4717 343.3115 L255.8218 341.9365 L255.603 341.7656 255.4126 341.7695 255.1992 341.9512 C253.6387 343.373 L251.9888 342.002 L251.771 341.8281 251.5801 341.832 251.3657 342.0137 C249.8071 343.4336 L248.1563 342.0625 L247.9375 341.8896 247.7461 341.8936 247.5337 342.0752 C245.9751 343.4961 L244.3237 342.1221 L244.1064 341.9512 243.915 341.9531 243.7017 342.1367 C242.1421 343.5586 L240.4927 342.1855 L240.2744 342.0117 240.082 342.0156 239.8691 342.1992 C238.3037 343.6191 L236.6465 342.248 L236.4277 342.0752 236.2373 342.0791 236.0225 342.2607 C234.4644 343.6816 L232.813 342.3076 L232.5957 342.1367 232.4043 342.1387 232.1924 342.3232 C230.6318 343.7422 L228.9824 342.3701 L228.7637 342.1973 228.5723 342.2012 228.3599 342.3828 C226.8003 343.8047 L225.1494 342.4316 L224.9316 342.2588 224.7407 342.2627 224.5269 342.4473 C222.9673 343.8672 L221.3174 342.4941 L221.0991 342.3213 220.9077 342.3252 220.6943 342.5068 C219.1353 343.9277 L217.4858 342.5557 L217.2661 342.3828 217.0747 342.3867 216.8623 342.5684 C215.3027 343.9893 L213.6523 342.6172 L213.4341 342.4453 213.2437 342.4482 213.0303 342.6309 C211.4707 344.0508 L209.8198 342.6777 L209.6021 342.5068 209.4106 342.5098 209.1982 342.6914 C207.6387 344.1133 L205.9878 342.7402 L205.7705 342.5664 205.5786 342.5703 205.3657 342.7529 C203.8066 344.1748 L202.1558 342.8008 L201.937 342.6309 201.7466 342.6348 201.5337 342.8164 C199.9736 344.2363 L198.3237 342.8633 L198.105 342.6914 197.9141 342.6943 197.7017 342.877 C196.1411 344.2969 L194.4912 342.9258 L194.2725 342.7529 194.082 342.7549 193.8682 342.9385 C192.3101 344.3594 L190.6587 342.9863 L190.4404 342.8145 190.25 342.8184 190.0366 343 C188.4766 344.4199 L186.8271 343.0488 L186.6079 342.877 186.4175 342.8789 186.2036 343.0625 C184.6455 344.4824 L182.9951 343.1094 L182.7759 342.9385 182.585 342.9404 182.3716 343.124 C180.8125 344.5449 L179.1626 343.1719 L178.9438 343 178.7524 343.002 178.54 343.1855 C176.9795 344.6055 L175.3296 343.2354 L175.1099 343.0605 174.9209 343.0645 174.7065 343.2461 C173.1479 344.668 L171.4971 343.2949 L171.2793 343.123 171.0879 343.126 170.8745 343.3105 C169.3154 344.7305 L167.6655 343.3564 L167.4468 343.1855 167.2559 343.1875 167.0425 343.3711 C165.4824 344.791 L163.833 343.4189 L163.6152 343.2461 163.4233 343.25 163.2104 343.4316 C161.6479 344.8525 L159.9961 343.4805 L159.7759 343.3086 159.5854 343.3115 159.3726 343.4941 C157.814 344.9141 L156.1631 343.543 L155.9443 343.3691 155.7534 343.373 155.54 343.5547 C153.9819 344.9746 L152.3311 343.6045 L152.1133 343.4316 151.9214 343.4336 151.708 343.6172 C150.1484 345.0381 L148.498 343.665 L148.2803 343.4941 148.0903 343.4961 147.876 343.6797 C146.3164 345.0996 L144.667 343.7266 L144.4473 343.5547 144.2568 343.5586 144.0439 343.7402 C142.4849 345.1602 L140.8345 343.7881 L140.6152 343.6162 140.4253 343.6191 140.2119 343.8018 C138.6514 345.2227 L137.0029 343.8506 L136.7832 343.6777 136.5928 343.6816 136.3794 343.8652 C134.8193 345.2852 L133.1689 343.9121 L132.9507 343.7402 132.7603 343.7422 132.5474 343.9258 C130.9873 345.3457 L129.3369 343.9746 L129.1187 343.8018 128.9277 343.8047 128.7139 343.9873 C127.1553 345.4082 L125.5054 344.0352 L125.2866 343.8633 125.0947 343.8672 124.8818 344.0488 C123.3228 345.4688 L121.6719 344.0977 L121.4536 343.9238 121.2627 343.9277 121.0498 344.1094 C119.4902 345.5322 L117.8398 344.1582 L117.6226 343.9873 117.4307 343.9893 117.2168 344.1729 C115.6587 345.5938 L114.0078 344.2188 L113.79 344.0488 113.5991 344.0508 113.3862 344.2344 C111.8267 345.6543 L110.1758 344.2832 L109.9565 344.1094 109.7656 344.1133 109.5532 344.2949 C107.9932 345.7158 L106.3423 344.3438 L106.1255 344.1709 105.9336 344.1748 105.7212 344.3574 C104.1616 345.7773 L102.5112 344.4043 L102.293 344.2324 102.1021 344.2344 101.8887 344.418 C100.3291 345.8398 L98.6792 344.4668 L98.46 344.2949 98.2695 344.2969 98.0566 344.4824 C96.4966 345.8994 L94.8472 344.5293 L94.6279 344.3574 94.4375 344.3613 94.2246 344.543 C92.6655 345.9629 L91.0146 344.5898 L90.7959 344.416 90.6045 344.4199 90.3916 344.6035 C88.832 346.0234 L87.1816 344.6523 L86.9634 344.4805 86.7729 344.4824 86.5586 344.666 C85.2593 345.8516 L85.062 346.0332 85.0454 346.29 85.0454 346.8076 C85.0454 349.8652 L83.2378 349.8652 L83.2378 348.3877 L83.2378 347.9902 83.0508 347.7891 82.6401 347.7891 C76.1616 347.7891 L66.2456 347.7891 67.3848 358.8574 67.6152 363.4688 c67.8457 368.082 68.5376 374.5371 65.3086 386.7598 c62.248 398.3462 56.9492 419.4058 61.8506 437.4893 c68.5376 462.1631 92.2886 463.8086 110.4292 463.8086 C350.5762 463.8086 L350.5762 465.02 L350.5762 467.8267 351.6484 469.0039 354.5615 469.0039 C499.6797 469.0039 L502.9033 469.0039 503.6826 468.6763 506.1963 465.9268 C508.8486 462.7036 L510.9551 460.1606 510.7529 458.6885 509.2227 456.2764 C504.3809 448.1318 L503.1172 445.8193 503.4971 442.2217 505.7129 438.1812 c515.1943 420.8867 532.7568 407.4136 544.0928 379.9434 c556.085 350.8887 543.1113 326.3418 521.4199 323.4473 cfu1 D78.7124 367.6777 m78.7861 367.6035 L78.7769 367.584 78.7695 367.5625 78.7607 367.543 C78.7124 367.6777 Lf86.9707 365.5566 m380.9883 360.8164 L386.5957 360.8164 388.6895 359.1777 389.0537 356.2412 C403.9102 356.084 L403.8926 366.1563 403.5596 374.9014 397.3477 380.1523 C390.7559 380.4639 390.1494 381.7227 389.9824 384.5684 c389.8682 386.5273 389.0859 395.4009 388.5469 404.855 c387.6768 420.1948 379.0605 432.5366 364.04 432.5366 c353.458 432.5366 351.1563 434.8677 350.7842 439.8799 C106.8779 439.8799 L90.29 439.8799 81.2202 432.8906 81.2202 417.9795 c81.2202 403.0684 82.5801 399.2363 82.5801 391.2422 c82.5801 383.2715 81.9907 374.665 78.7861 367.6035 C80.6895 365.7012 L81.0034 365.4004 81.1118 365.1543 81.1118 364.6797 C81.1118 361.5625 L85.0454 361.5625 L85.0454 363.6719 L85.0454 364.9238 85.8179 365.5732 86.9707 365.5566 CfU*U%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI3 /terminate get execAdobe_pattern_AI3 /terminate get execAdobe_customcolor /terminate get execAdobe_cshow /terminate get execAdobe_packedarray /terminate get exec%%EOF