%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(TM) 3.2%%AI8_CreatorVersion: 9.0%%For: (Rich Roat) (House Industries)%%Title: (Milan.eps)%%CreationDate: 5/24/02 3:53 PM%%BoundingBox: 142 105 472 685%%DocumentProcessColors: Black%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0%%+ procset Adobe_cshow 1.1 0%%+ procset Adobe_customcolor 1.0 0%%+ procset Adobe_pattern_AI3 1.0 0%%+ procset Adobe_Illustrator_AI3 1.0 1%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI3_TemplateBox: 306.5 395.5 306.5 395.5%AI3_TileBox: 31.4116 32.5293 583.4116 760.5293%AI3_DocumentPreview: Macintosh_ColorPic%%PageOrigin:31.4116 32.5293%%AI3_PaperRect:-30 761 582 -31%%AI3_Margin:30 -33 -30 31%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%%EndComments%%BeginProlog%%BeginResource: procset Adobe_packedarray 2.0 0%%Title: (Packed Array Operators)%%Version: 2.0 0%%CreationDate: (8/2/90) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_packedarray 5 dict dup begin put/initialize{/packedarray where	{	pop	}	{	Adobe_packedarray begin	Adobe_packedarray		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall end	} ifelse} def/terminate{} def/packedarray{array astore readonly} def/setpacking{pop} def/currentpacking{false} defcurrentdict readonly pop end%%EndResourceAdobe_packedarray /initialize get exec%%BeginResource: procset Adobe_cshow 1.1 0%%Title: (cshow Operator)%%Version: 1.1 0%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 3 dict dup begin put/initialize{/cshow where	{	pop	}	{	userdict /Adobe_cshow_vars 1 dict dup begin put	/_cshow		{} def	Adobe_cshow begin	Adobe_cshow		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall end end	} ifelse} def/terminate{} def/cshow{exchAdobe_cshow_vars	exch /_cshow	exch put	{	0 0 Adobe_cshow_vars /_cshow get exec	} forall} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_customcolor 1.0 0%%Title: (Custom Color Operators)%%Version: 1.0 0%%CreationDate: (5/9/88) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_customcolor 5 dict dup begin put/initialize{/setcustomcolor where	{	pop	}	{	Adobe_customcolor begin	Adobe_customcolor		{		dup xcheck			{			bind			} if		pop pop		} forall end	Adobe_customcolor begin	} ifelse} def/terminate{currentdict Adobe_customcolor eq	{ end	} if} def/findcmykcustomcolor{5 packedarray}  def/setcustomcolor{exchaload pop pop4	{	4 index mul 4 1 roll	} repeat5 -1 roll popsetcmykcolor} def/setoverprint{pop} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_pattern_AI3 1.1 0%%Title: (Adobe Illustrator (R) Version 3.0 Pattern Operators)%%Version: 1.1 0%%CreationDate: (7/21/89) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_pattern_AI3 16 dict dup begin put/initialize{/definepattern where	{	pop	}	{	Adobe_pattern_AI3 begin	Adobe_pattern_AI3		{		dup xcheck			{			bind			} if		pop pop		} forall	mark	cachestatus 7 1 roll pop pop pop pop exch pop exch		{		{		10000 add		dup 2 index gt			{			exit			} if		dup setcachelimit		} loop		} stopped	cleartomark	} ifelse} def/terminate{currentdict Adobe_pattern_AI3 eq	{ end	} if} deferrordict/nocurrentpoint{popstop} puterrordict/invalidaccess{popstop} put/patternencoding256 array def0 1 255{patternencoding exch ( ) 2 copy exch 0 exch put cvn put} for/definepattern{17 dict begin/uniform exch def/cache exch def/key exch def/procarray exch def/mtx exch matrix invertmatrix def/height exch def/width exch def/ctm matrix currentmatrix def/ptm matrix def/str 32 string def/slice 9 dict defslice /s 1 putslice /q 256 procarray length div sqrt floor cvi putslice /b 0 put/FontBBox [0 0 0 0] def/FontMatrix mtx matrix copy def/Encoding patternencoding def/FontType 3 def/BuildChar	{	exch begin	/setstrokeadjust where {pop true setstrokeadjust} if	slice begin	dup q dup mul mod s idiv /i exch def	dup q dup mul mod s mod /j exch def	q dup mul idiv procarray exch get	/xl j width s div mul def	/xg j 1 add width s div mul def	/yl i height s div mul def	/yg i 1 add height s div mul def	uniform		{		1 1		}		{		width 0 dtransform		dup mul exch dup mul add sqrt dup 1 add exch div		0 height dtransform		dup mul exch dup mul add sqrt dup 1 add exch div		} ifelse	width 0 cache		{		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul		setcachedevice		}		{		setcharwidth		} ifelse	gsave	scale	newpath	xl yl moveto	xg yl lineto	xg yg lineto	xl yg lineto	closepath	clip	newpath end end	exec	grestore	} defkey currentdict definefontend} def/patterncachesize{gsavenewpath0 0 movetowidth 0 linetowidth height lineto0 height linetoclosepathpatternmatrix setmatrixpathbboxexch ceiling 4 -1 roll floor sub 3 1 rollceiling exch floor submul 1 addgrestore} def/patterncachelimit{cachestatus 7 1 roll 6 npop 8 mul} def/patternpath{exch dup begin setfontctm setmatrixconcatslice exch /b exch slice /q get dup mul mul putFontMatrix concatuniform	{	width 0 dtransform round width div exch round width div exch	0 height dtransform round height div exch height div exch	0 0 transform round exch round exch	ptm astore setmatrix	}	{	ptm currentmatrix pop	} ifelse{currentpoint} stopped not	{	2 npop	pathbbox	true	4 index 3 index eq	4 index 3 index eq	and		{		pop false			{			{2 npop}			{3 npop true}			{7 npop true}			{pop true}			pathforall			} stopped			{			5 npop true			} if		} if		{		height div ceiling height mul 4 1 roll		width div ceiling width mul 4 1 roll		height div floor height mul 4 1 roll		width div floor width mul 4 1 roll		2 index sub height div ceiling cvi exch		3 index sub width div ceiling cvi exch		4 2 roll moveto		FontMatrix mtx invertmatrix		dup dup 4 get exch 5 get rmoveto		ptm ptm concatmatrix pop		slice /s		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi		dup slice /q get gt			{			pop slice /q get			} if		put		0 1 slice /s get dup mul 1 sub			{			slice /b get add			gsave			0 1 str length 1 sub				{				str exch 2 index put				} for			pop			dup				{				gsave				ptm setmatrix				1 index str length idiv {str show} repeat				1 index str length mod str exch 0 exch getinterval show				grestore				0 height rmoveto				} repeat			grestore			} for		2 npop		}		{		4 npop		} ifelse	} ifend} def/patternclip{clip} def/patternstrokepath{strokepath} def/patternmatrixmatrix def/patternfill{dup type /dicttype eq	{	Adobe_pattern_AI3 /patternmatrix get	} ifgsavepatternclipAdobe_pattern_AI3 /patternpath get execgrestorenewpath} def/patternstroke{dup type /dicttype eq	{	Adobe_pattern_AI3 /patternmatrix get	} ifgsavepatternstrokepathtrue	{		{			{			newpath 			moveto			}			{			lineto			}			{			curveto			}			{			closepath			3 copy			Adobe_pattern_AI3 /patternfill get exec			} pathforall		3 npop		} stopped			{			5 npop			patternclip			Adobe_pattern_AI3 /patternfill get exec			} if	}	{	patternclip	Adobe_pattern_AI3 /patternfill get exec	} ifelsegrestorenewpath} def/patternashow{3 index type /dicttype eq	{	Adobe_pattern_AI3 /patternmatrix get 4 1 roll	} if	{	2 npop (0) exch	2 copy 0 exch put pop	gsave	false charpath currentpoint	6 index 6 index 6 index	Adobe_pattern_AI3 /patternfill get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshow5 npop} def/patternawidthshow{6 index type /dicttype eq	{	Adobe_pattern_AI3 /patternmatrix get 7 1 roll	} if	{	2 npop (0) exch	2 copy 0 exch put 	gsave	_sp eq {5 index 5 index rmoveto} if	false charpath currentpoint	9 index 9 index 9 index	Adobe_pattern_AI3 /patternfill get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshow8 npop} def/patternashowstroke{4 index type /dicttype eq	{	patternmatrix /patternmatrix get 5 1 roll	} if4 1 roll	{	2 npop (0) exch	2 copy 0 exch put pop	gsave	false charpath	currentpoint	4 index setmatrix	7 index 7 index 7 index	Adobe_pattern_AI3 /patternstroke get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshow6 npop} def/patternawidthshowstroke{7 index type /dicttype eq	{	patternmatrix /patternmatrix get 8 1 roll	} if7 1 roll	{	2 npop (0) exch	2 copy 0 exch put	gsave	_sp eq {5 index 5 index rmoveto} if	false charpath currentpoint	7 index setmatrix	10 index 10 index 10 index	Adobe_pattern_AI3 /patternstroke get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshow9 npop} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_Illustrator_AI3 1.1 0%%Title: (Adobe Illustrator (R) Version 3.0 Full Prolog)%%Version: 1.1 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI3 71 dict dup begin put/initialize{userdict /Adobe_Illustrator_AI3_vars 67 dict dup begin put/_lp /none def/_pf {} def/_ps {} def/_psf {} def/_pss {} def/_pjsf {} def/_pjss {} def/_pola 0 def/_doClip 0 def/cf	currentflat def/_tm matrix def/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def /_renderEnd [null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_rise 0 def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading [0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fScl 0 def/_cnt 0 def/_hs 1 def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_wv 0 def/Tx {} def/Tj {} def/CRender {} def/_AI3_savepage {} def/_gf null def/_cf 4 array def/_if null def/_of false def/_fc {} def/_gs null def/_cs 4 array def/_is null def/_os false def/_sc {} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null defAdobe_Illustrator_AI3 beginAdobe_Illustrator_AI3 dup /nc get begin	{	dup xcheck		{		bind		} if	pop pop	} forallendendendAdobe_Illustrator_AI3 beginAdobe_Illustrator_AI3_vars beginnewpath} def/terminate{endend} def/_null def/ddef{Adobe_Illustrator_AI3_vars 3 1 roll put} def/xput{dup load dup length exch maxlength eq	{	dup dup load dup	length 2 mul dict copy def	} ifload begin def end} def/npop{	{	pop	} repeat} def/sw{dup length exch stringwidthexch 5 -1 roll 3 index mul add4 1 roll 3 1 roll mul add} def/swj{dup 4 1 rolldup length exch stringwidth exch 5 -1 roll 3 index mul add4 1 roll 3 1 roll mul add 6 2 roll /_cnt 0 ddef{1 index eq {/_cnt _cnt 1 add ddef} if} forall popexch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop} def/ss{4 1 roll	{	2 npop 	(0) exch 2 copy 0 exch put pop	gsave	false charpath currentpoint	4 index setmatrix	stroke	grestore	moveto	2 copy rmoveto	} exch cshow3 npop} def/jss{4 1 roll	{	2 npop 	(0) exch 2 copy 0 exch put 	gsave	_sp eq 		{		exch 6 index 6 index 6 index 5 -1 roll widthshow  		currentpoint		}		{		false charpath currentpoint		4 index setmatrix stroke		}ifelse	grestore	moveto	2 copy rmoveto	} exch cshow6 npop} def/sp{	{	2 npop (0) exch	2 copy 0 exch put pop	false charpath	2 copy rmoveto	} exch cshow2 npop} def/jsp{	{	2 npop 	(0) exch 2 copy 0 exch put 	_sp eq 		{		exch 5 index 5 index 5 index 5 -1 roll widthshow  		}		{		false charpath		}ifelse	2 copy rmoveto	} exch cshow5 npop} def/pl{transform0.25 sub round 0.25 add exch0.25 sub round 0.25 add exchitransform} def/setstrokeadjust where	{	pop true setstrokeadjust	/c	{	curveto	} def	/C	/c load def	/v	{	currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{	2 copy curveto	} def	/Y	/y load def	/l	{	lineto	} def	/L	/l load def	/m	{	moveto	} def	}	{	/c	{	pl curveto	} def	/C	/c load def	/v	{	currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{	pl 2 copy curveto	} def	/Y	/y load def	/l	{	pl lineto	} def	/L	/l load def	/m	{	pl moveto	} def	} ifelse/d{setdash} def/cf	{} def/i{dup 0 eq	{	pop cf	} ifsetflat} def/j{setlinejoin} def/J{setlinecap} def/M{setmiterlimit} def/w{setlinewidth} def/H{} def/h{closepath} def/N{_pola 0 eq 	{	_doClip 1 eq {clip /_doClip 0 ddef} if 	newpath	} 	{	/CRender {N} ddef	}ifelse} def/n{N} def/F{_pola 0 eq 	{	_doClip 1 eq 		{		gsave _pf grestore clip newpath /_lp /none ddef _fc 		/_doClip 0 ddef		}		{		_pf		}ifelse	} 	{	/CRender {F} ddef	}ifelse} def/f{closepathF} def/S{_pola 0 eq 	{	_doClip 1 eq 		{		gsave _ps grestore clip newpath /_lp /none ddef _sc 		/_doClip 0 ddef		}		{		_ps		}ifelse	} 	{	/CRender {S} ddef	}ifelse} def/s{closepathS} def/B{_pola 0 eq 	{	_doClip 1 eq	gsave F grestore 		{		gsave S grestore clip newpath /_lp /none ddef _sc		/_doClip 0 ddef		} 		{		S		}ifelse	}	{	/CRender {B} ddef	}ifelse} def/b{closepathB} def/W{/_doClip 1 ddef} def/*{count 0 ne 	{	dup type (stringtype) eq {pop} if	} if _pola 0 eq {newpath} if} def/u{} def/U{} def/q{_pola 0 eq {gsave} if} def/Q{_pola 0 eq {grestore} if} def/*u{_pola 1 add /_pola exch ddef} def/*U{_pola 1 sub /_pola exch ddef _pola 0 eq {CRender} if} def/D{pop} def/*w{} def/*W{} def/`{/_i save ddef6 1 roll 4 npopconcat popuserdict begin/showpage {} def0 setgray0 setlinecap1 setlinewidth0 setlinejoin10 setmiterlimit[] 0 setdash/setstrokeadjust where {pop false setstrokeadjust} ifnewpath0 setgrayfalse setoverprint} def/~{end_i restore} def/@{} def/&{} def/O{0 ne/_of exch ddef/_lp /none ddef} def/R{0 ne/_os exch ddef/_lp /none ddef} def/g{/_gf exch ddef/_fc{_lp /fill ne	{	_of setoverprint	_gf setgray	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/G{/_gs exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_gs setgray	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/k{_cf astore pop/_fc{_lp /fill ne	{	_of setoverprint	_cf aload pop setcmykcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/K{_cs astore pop/_sc{_lp /stroke ne	{	_os setoverprint	_cs aload pop setcmykcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/x{/_gf exch ddeffindcmykcustomcolor/_if exch ddef/_fc{_lp /fill ne	{	_of setoverprint	_if _gf 1 exch sub setcustomcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcashow} ddef/_pjsf{_fcawidthshow} ddef/_lp /none ddef} def/X{/_gs exch ddeffindcmykcustomcolor/_is exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_is _gs 1 exch sub setcustomcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_pjss{_scjss} ddef/_lp /none ddef} def/dp{dup null eq{pop_dp 0 ne	{	0 1 _dp 1 sub _dl mod		{		_da exch get 3 get		} for	_dp 1 sub _dl mod 1 add packedarray	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll	definepattern pop	} if}{_dp 0 ne _dp _dl mod 0 eq and	{	null dp	} if7 packedarray _da exch _dp _dl mod exch put_dp _dl mod _da 0 get 4 get 2 packedarray/_dp _dp 1 add def} ifelse} def/E{_ed begindup 0 get type /arraytype ne	{	0		{		dup 1 add index type /arraytype eq			{			1 add			}			{			exit			} ifelse		} loop	array astore	} if/_dd exch def/_ury exch def/_urx exch def/_lly exch def/_llx exch def/_n exch def/_y 0 def/_dl 4 def/_dp 0 def/_da _dl array def0 1 _dd length 1 sub	{	/_d exch _dd exch get def	0 2 _d length 2 sub		{		/_x exch def		/_c _d _x get _ ne def		/_r _d _x 1 add get cvlit def		_r _ ne			{			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 				[				/save cvx				_llx neg _lly neg /translate cvx				_c					{					nc /begin cvx					} if				_r dup type /stringtype eq					{					cvx					}					{					{exec} /forall cvx					} ifelse				_c					{					/end cvx					} if				/restore cvx				] cvx			/_fn 12 _n length add string def			_y _fn cvs pop			/_y _y 1 add def			_fn 12 _n putinterval			_fn _c false dp			_d exch _x 1 add exch put			} if		} for	} fornull dp_n _dd /_pdend xput} def/fc{_fm dup concatmatrix pop} def/p{/_fm exch ddef9 -2 roll _pm translate fc7 -2 roll _pm scale fc5 -1 roll _pm rotate fc4 -2 roll exch 0 ne	{	dup _pm rotate fc	1 -1 _pm scale fc	neg _pm rotate fc	}	{	pop	} ifelsedup _pm rotate fcexch dup sin exch cos div 1 0 0 1 0 6 2 roll_pm astore fcneg _pm rotate fc_pd exch get /_fdd exch ddef/_pf{save/_doClip 0 ddef0 1 _fdd length 1 sub	{	/_fd exch _fdd exch get ddef	_fd	0 2 _fd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _fc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _fm			patternfill			}			{			pop			fill			} ifelse		grestore		pop		} for	pop	} forrestorenewpath} ddef/_psf{save/_doClip 0 ddef0 1 _fdd length 1 sub	{	/_fd exch _fdd exch get ddef	_fd	0 2 _fd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _fc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _fm			9 copy 6 npop patternashow			}			{			pop			6 copy 3 npop ashow			} ifelse		grestore		pop		} for	pop	} forrestore%3 npop newpathsw rmoveto} ddef/_pjsf{save/_doClip 0 ddef0 1 _fdd length 1 sub	{	/_fd exch _fdd exch get ddef	_fd	0 2 _fd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _fc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _fm			12 copy 6 npop patternawidthshow			}			{			pop 9 copy 3 npop awidthshow			} ifelse		grestore		pop		} for	pop	} forrestoreswj rmoveto} ddef/_lp /none ddef} def/sc{_sm dup concatmatrix pop} def/P{/_sm exch ddef9 -2 roll _pm translate sc7 -2 roll _pm scale sc5 -1 roll _pm rotate sc4 -2 roll exch 0 ne	{	dup _pm rotate sc	1 -1 _pm scale sc	neg _pm rotate sc	}	{	pop	} ifelsedup _pm rotate scexch dup sin exch cos div 1 0 0 1 0 6 2 roll_pm astore scneg _pm rotate sc_pd exch get /_sdd exch ddef/_ps{save/_doClip 0 ddef0 1 _sdd length 1 sub	{	/_sd exch _sdd exch get ddef	_sd	0 2 _sd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _sc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _sm			patternstroke			}			{			pop stroke			} ifelse		grestore		pop		} for	pop	} forrestorenewpath} ddef/_pss{save/_doClip 0 ddef0 1 _sdd length 1 sub	{	/_sd exch _sdd exch get ddef	_sd	0 2 _sd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _sc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _sm			10 copy 6 npop patternashowstroke			}			{			pop 7 copy 3 npop ss			} ifelse		grestore		pop		} for	pop	} forrestorepop sw rmoveto} ddef/_pjss{save/_doClip 0 ddef0 1 _sdd length 1 sub	{	/_sd exch _sdd exch get ddef	_sd	0 2 _sd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _sc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _sm			13 copy 6 npop patternawidthshowstroke			}			{			pop 10 copy 3 npop jss			} ifelse		grestore		pop		} for	pop	} forrestorepop swj rmoveto} ddef/_lp /none ddef} def/A{pop} def/nc 3 dict defnc begin/setgray{pop} bind def/setcmykcolor{4 npop} bind def/setcustomcolor{2 npop} bind defcurrentdict readonly pop endcurrentdict readonly pop endsetpacking/annotatepage{} def%%EndResource%%EndProlog%%BeginSetupAdobe_cshow /initialize get execAdobe_customcolor /initialize get execAdobe_pattern_AI3 /initialize get execAdobe_Illustrator_AI3 /initialize get exec%AI3_BeginPattern: (Azure Rings)(Azure Rings) 22.5 22.5 58.5 58.5 [%AI3_Tile(0 O 0 R 0.9569 0.9294 0 0 k 0.9569 0.9294 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1.75 w 4 M []0 d40.5 58.5 m40.5 48.5586 32.4409 40.5 22.5 40.5 c12.5591 40.5 4.5 48.5586 4.5 58.5 c4.5 68.4414 12.5591 76.5 22.5 76.5 c32.4409 76.5 40.5 68.4414 40.5 58.5 cs40.5 22.5 m40.5 12.5586 32.4409 4.5 22.5 4.5 c12.5591 4.5 4.5 12.5586 4.5 22.5 c4.5 32.4414 12.5591 40.5 22.5 40.5 c32.4409 40.5 40.5 32.4414 40.5 22.5 cs40.5 40.5 m40.5 30.5586 32.4409 22.5 22.5 22.5 c12.5591 22.5 4.5 30.5586 4.5 40.5 c4.5 50.4414 12.5591 58.5 22.5 58.5 c32.4409 58.5 40.5 50.4414 40.5 40.5 cs58.5 58.5 m58.5 48.5586 50.4409 40.5 40.5 40.5 c30.5591 40.5 22.5 48.5586 22.5 58.5 c22.5 68.4414 30.5591 76.5 40.5 76.5 c50.4409 76.5 58.5 68.4414 58.5 58.5 cs58.5 22.5 m58.5 12.5586 50.4409 4.5 40.5 4.5 c30.5591 4.5 22.5 12.5586 22.5 22.5 c22.5 32.4414 30.5591 40.5 40.5 40.5 c50.4409 40.5 58.5 32.4414 58.5 22.5 cs58.5 40.5 m58.5 30.5586 50.4409 22.5 40.5 22.5 c30.5591 22.5 22.5 30.5586 22.5 40.5 c22.5 50.4414 30.5591 58.5 40.5 58.5 c50.4409 58.5 58.5 50.4414 58.5 40.5 cs76.5 58.5 m76.5 48.5586 68.4409 40.5 58.5 40.5 c48.5591 40.5 40.5 48.5586 40.5 58.5 c40.5 68.4414 48.5591 76.5 58.5 76.5 c68.4409 76.5 76.5 68.4414 76.5 58.5 cs76.5 22.5 m76.5 12.5586 68.4409 4.5 58.5 4.5 c48.5591 4.5 40.5 12.5586 40.5 22.5 c40.5 32.4414 48.5591 40.5 58.5 40.5 c68.4409 40.5 76.5 32.4414 76.5 22.5 cs76.5 40.5 m76.5 30.5586 68.4409 22.5 58.5 22.5 c48.5591 22.5 40.5 30.5586 40.5 40.5 c40.5 50.4414 48.5591 58.5 58.5 58.5 c68.4409 58.5 76.5 50.4414 76.5 40.5 cs%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Camouflage)(Camouflage) 1 1 73 73 [%AI3_Tile(0 O 0 R 0.5961 0.1412 0.949 0.0275 k 0.5961 0.1412 0.949 0.0275 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d1 73 m1 1 L73 1 L73 73 L1 73 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.498 0.349 0.9725 0.2 k 0.498 0.349 0.9725 0.2 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d18.5449 73 m18.5449 1 L46.7832 1 L46.7832 73 L18.5449 73 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.1882 0.1098 0.9255 0.0157 k 0.1882 0.1098 0.9255 0.0157 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d11.9512 1 m11.9512 4.7129 9.2314 2.8813 9.2314 6.5938 c9.2314 10.2334 4.25 10.2334 4.25 13.8735 c4.25 17.4858 10.0313 17.4858 10.0313 21.0991 c10.0313 24.832 10.208 24.832 10.208 28.5654 c10.208 32.3071 5.5205 32.3071 5.5205 36.0469 c5.5205 39.7021 11.8838 39.7021 11.8838 43.356 c11.8838 47.0566 7.4609 47.0566 7.4609 50.7568 c7.4609 54.4043 5.7959 54.4043 5.7959 58.0542 c5.7959 61.7686 4.6631 61.7686 4.6631 65.4805 c4.6631 69.1636 11.9512 69.3184 11.9512 73 C27.9268 73 L27.9268 69.3184 22.0635 69.1636 22.0635 65.4805 c22.0635 61.7686 28.6631 61.7686 28.6631 58.0542 c28.6631 54.4043 25.1553 54.4043 25.1553 50.7568 c25.1553 47.0566 28.8145 47.0566 28.8145 43.356 c28.8145 39.7021 22.1191 39.7021 22.1191 36.0469 c22.1191 32.3071 26.3945 32.3071 26.3945 28.5654 c26.3945 24.832 24.4248 24.832 24.4248 21.0991 c24.4248 17.4858 20.3838 17.4858 20.3838 13.8735 c20.3838 10.2334 24.6055 10.2334 24.6055 6.5938 c24.6055 2.8813 27.9268 4.7129 27.9268 1 C11.9512 1 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.9255 0.2157 0.9647 0.0745 k 0.9255 0.2157 0.9647 0.0745 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d41.875 1 m41.875 4.7134 42.3867 2.8818 42.3867 6.5938 c42.3867 10.2334 40.5947 10.2334 40.5947 13.8735 c40.5947 17.4858 41.5742 17.4858 41.5742 21.0991 c41.5742 24.832 43.6484 24.832 43.6484 28.5659 c43.6484 32.3076 39.1709 32.3076 39.1709 36.0469 c39.1709 39.7026 39.7549 39.7026 39.7549 43.356 c39.7549 47.0566 45.3896 47.0566 45.3896 50.7568 c45.3896 54.4043 40.1055 54.4043 40.1055 58.0542 c40.1055 61.7686 40.6289 61.7686 40.6289 65.4805 c40.6289 69.1636 41.875 69.3184 41.875 73 C59.0752 73 L59.0752 69.4219 53.4805 70.1934 53.4805 66.6143 c53.4805 62.9136 55.8945 62.9136 55.8945 59.2153 c55.8945 55.502 61.0059 55.502 61.0059 51.7886 c61.0059 48.1489 60.5635 48.1489 60.5635 44.5103 c60.5635 40.897 59.9277 40.897 59.9277 37.2842 c59.9277 33.5508 56.3662 33.5508 56.3662 29.8169 c56.3662 26.0762 61.0908 26.0762 61.0908 22.3354 c61.0908 18.6812 52.6025 18.6812 52.6025 15.0264 c52.6025 11.3262 55.7461 11.3262 55.7461 7.6265 c55.7461 3.978 59.0752 4.6484 59.0752 1 C41.875 1 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Clown Attack)(Clown Attack) 5.25 11 41.25 47 [%AI3_Tile(0 O 0 R 0.9255 0 1 0 k 0.9255 0 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d17.5 18.25 m17.5 15.2119 15.0376 12.75 12 12.75 c8.9624 12.75 6.5 15.2119 6.5 18.25 c6.5 21.2881 8.9624 23.75 12 23.75 c15.0376 23.75 17.5 21.2881 17.5 18.25 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0078 0.9529 0 0 k 0.0078 0.9529 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d22.25 34.125 m22.25 31.2939 19.9556 29 17.125 29 c14.2944 29 12 31.2939 12 34.125 c12 36.9561 14.2944 39.25 17.125 39.25 c19.9556 39.25 22.25 36.9561 22.25 34.125 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0118 0.9608 0.9137 0 k 0.0118 0.9608 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d30 31.625 m30 29.4854 28.2646 27.75 26.125 27.75 c23.9849 27.75 22.25 29.4854 22.25 31.625 c22.25 33.7646 23.9849 35.5 26.125 35.5 c28.2646 35.5 30 33.7646 30 31.625 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0314 0.0196 0.9137 0 k 0.0314 0.0196 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d23.25 24.5 m23.25 22.4287 21.5713 20.75 19.5 20.75 c17.4287 20.75 15.75 22.4287 15.75 24.5 c15.75 26.5713 17.4287 28.25 19.5 28.25 c21.5713 28.25 23.25 26.5713 23.25 24.5 cf%AI6_EndPatternLayer) &(0 O 0 R 0.9569 0.9294 0 0 k 0.9569 0.9294 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d36 22.25 m36 19.0742 33.4258 16.5 30.25 16.5 c27.0742 16.5 24.5 19.0742 24.5 22.25 c24.5 25.4258 27.0742 28 30.25 28 c33.4258 28 36 25.4258 36 22.25 cf%AI6_EndPatternLayer) &(0 O 0 R 0.1882 0.1216 0.8 0.0157 k 0.1882 0.1216 0.8 0.0157 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d24.25 16.5 m24.25 14.8438 22.9067 13.5 21.25 13.5 c19.5933 13.5 18.25 14.8438 18.25 16.5 c18.25 18.1563 19.5933 19.5 21.25 19.5 c22.9067 19.5 24.25 18.1563 24.25 16.5 cf%AI6_EndPatternLayer) &(0 O 0 R 0.8353 0 0 0 k 0.8353 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d37.25 43.875 m37.25 39.5264 33.7236 36 29.375 36 c25.0264 36 21.5 39.5264 21.5 43.875 c21.5 48.2236 25.0264 51.75 29.375 51.75 c33.7236 51.75 37.25 48.2236 37.25 43.875 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0078 0.1961 0.9373 0 k 0.0078 0.1961 0.9373 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d38.75 26.625 m38.75 25.7275 38.0225 25 37.125 25 c36.2275 25 35.5 25.7275 35.5 26.625 c35.5 27.5225 36.2275 28.25 37.125 28.25 c38.0225 28.25 38.75 27.5225 38.75 26.625 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0196 0.5961 0.9137 0 k 0.0196 0.5961 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d19.875 42 m19.875 41.1025 19.1475 40.375 18.25 40.375 c17.3525 40.375 16.625 41.1025 16.625 42 c16.625 42.8975 17.3525 43.625 18.25 43.625 c19.1475 43.625 19.875 42.8975 19.875 42 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0118 0.9608 0.9137 0 k 0.0118 0.9608 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d12.75 28.125 m12.75 26.8135 11.6865 25.75 10.375 25.75 c9.0635 25.75 8 26.8135 8 28.125 c8 29.4365 9.0635 30.5 10.375 30.5 c11.6865 30.5 12.75 29.4365 12.75 28.125 cf%AI6_EndPatternLayer) &(0 O 0 R 0.9255 0 1 0 k 0.9255 0 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d43.25 33 m43.25 30.998 41.627 29.375 39.625 29.375 c37.623 29.375 36 30.998 36 33 c36 35.002 37.623 36.625 39.625 36.625 c41.627 36.625 43.25 35.002 43.25 33 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0314 0.0196 0.9137 0 k 0.0314 0.0196 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d13.25 43.75 m13.25 40.9883 11.0117 38.75 8.25 38.75 c5.4883 38.75 3.25 40.9883 3.25 43.75 c3.25 46.5117 5.4883 48.75 8.25 48.75 c11.0117 48.75 13.25 46.5117 13.25 43.75 cf%AI6_EndPatternLayer) &(0 O 0 R 0.3922 0.9451 0 0 k 0.3922 0.9451 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d6.5 22.25 m6.5 20.7314 5.2686 19.5 3.75 19.5 c2.2314 19.5 1 20.7314 1 22.25 c1 23.7686 2.2314 25 3.75 25 c5.2686 25 6.5 23.7686 6.5 22.25 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0235 0.0118 0.6 0 k 0.0235 0.0118 0.6 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d34.4883 32.75 m34.4883 31.9277 33.8223 31.2617 33 31.2617 c32.1777 31.2617 31.5117 31.9277 31.5117 32.75 c31.5117 33.5723 32.1777 34.2383 33 34.2383 c33.8223 34.2383 34.4883 33.5723 34.4883 32.75 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0314 0.0196 0.9137 0 k 0.0314 0.0196 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d49.25 43.75 m49.25 40.9883 47.0117 38.75 44.25 38.75 c41.4883 38.75 39.25 40.9883 39.25 43.75 c39.25 46.5117 41.4883 48.75 44.25 48.75 c47.0117 48.75 49.25 46.5117 49.25 43.75 cf%AI6_EndPatternLayer) &(0 O 0 R 0.3922 0.9451 0 0 k 0.3922 0.9451 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d42.5 22.25 m42.5 20.7314 41.2686 19.5 39.75 19.5 c38.2314 19.5 37 20.7314 37 22.25 c37 23.7686 38.2314 25 39.75 25 c41.2686 25 42.5 23.7686 42.5 22.25 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0314 0.0196 0.9137 0 k 0.0314 0.0196 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d49.25 7.752 m49.25 4.9902 47.0117 2.752 44.25 2.752 c41.4883 2.752 39.25 4.9902 39.25 7.752 c39.25 10.5137 41.4883 12.752 44.25 12.752 c47.0117 12.752 49.25 10.5137 49.25 7.752 cf%AI6_EndPatternLayer) &(0 O 0 R 0.8353 0 0 0 k 0.8353 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d37.25 7.875 m37.25 3.5264 33.7236 0 29.375 0 c25.0264 0 21.5 3.5264 21.5 7.875 c21.5 12.2236 25.0264 15.75 29.375 15.75 c33.7236 15.75 37.25 12.2236 37.25 7.875 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0314 0.0196 0.9137 0 k 0.0314 0.0196 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d13.25 7.75 m13.25 4.9883 11.0117 2.75 8.25 2.75 c5.4883 2.75 3.25 4.9883 3.25 7.75 c3.25 10.5117 5.4883 12.75 8.25 12.75 c11.0117 12.75 13.25 10.5117 13.25 7.75 cf%AI6_EndPatternLayer) &(0 O 0 R 0.9255 0 1 0 k 0.9255 0 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d7.25 33 m7.25 30.998 5.627 29.375 3.625 29.375 c1.623 29.375 0 30.998 0 33 c0 35.002 1.623 36.625 3.625 36.625 c5.627 36.625 7.25 35.002 7.25 33 cf%AI6_EndPatternLayer) &(0 O 0 R 0.0235 0.4078 0 0 k 0.0235 0.4078 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d39.6533 16.0381 m39.6533 15.1064 38.8975 14.3506 37.9658 14.3506 c37.0342 14.3506 36.2783 15.1064 36.2783 16.0381 c36.2783 16.9697 37.0342 17.7256 37.9658 17.7256 c38.8975 17.7256 39.6533 16.9697 39.6533 16.0381 cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Green Tablecloth)(Green Tablecloth) 0 0 24 24 [%AI3_Tile(0 O 0 R 0.8 0.21 1 0 k 0.8 0.21 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d6 18 m0 18 L0 24 L6 24 L6 18 Lf18 18 m12 18 L12 24 L18 24 L18 18 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.3798 0.0997 0.4747 0 k 0.3798 0.0997 0.4747 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d12 18 m6 18 L6 24 L12 24 L12 18 Lf24 18 m18 18 L18 24 L24 24 L24 18 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d12 12 m6 12 L6 18 L12 18 L12 12 Lf24 12 m18 12 L18 18 L24 18 L24 12 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.3798 0.0997 0.4747 0 k 0.3798 0.0997 0.4747 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d6 12 m0 12 L0 18 L6 18 L6 12 Lf18 12 m12 12 L12 18 L18 18 L18 12 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.8 0.21 1 0 k 0.8 0.21 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d6 6 m0 6 L0 12 L6 12 L6 6 Lf18 6 m12 6 L12 12 L18 12 L18 6 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.3798 0.0997 0.4747 0 k 0.3798 0.0997 0.4747 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d12 6 m6 6 L6 12 L12 12 L12 6 Lf24 6 m18 6 L18 12 L24 12 L24 6 Lf%AI6_EndPatternLayer) &(0 O 0 R 0 0 0 0 k 0 0 0 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d12 0 m6 0 L6 6 L12 6 L12 0 Lf24 0 m18 0 L18 6 L24 6 L24 0 Lf%AI6_EndPatternLayer) &(0 O 0 R 0.3798 0.0997 0.4747 0 k 0.3798 0.0997 0.4747 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d6 0 m0 0 L0 6 L6 6 L6 0 Lf18 0 m12 0 L12 6 L18 6 L18 0 Lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Pyramids)(Pyramids) 1 1 19.5 19.5 [%AI3_Tile(0 O 0 R 0.1882 0.1294 0.102 0.0118 k 0.1882 0.1294 0.102 0.0118 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d1 19.5 m10.25 10.25 l19.5 19.5 l1 19.5 lf%AI6_EndPatternLayer) &(0 O 0 R 0.6235 0.4863 0.4863 0.4784 k 0.6235 0.4863 0.4863 0.4784 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d19.5 1 m10.25 10.25 l1 1 l19.5 1 lf%AI6_EndPatternLayer) &(0 O 0 R 0.3529 0.2549 0.2235 0.0667 k 0.3529 0.2549 0.2235 0.0667 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d1 1 m10.25 10.25 l1 19.5 l1 1 lf%AI6_EndPatternLayer) &(0 O 0 R 0.4902 0.3647 0.3451 0.2196 k 0.4902 0.3647 0.3451 0.2196 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d19.5 19.5 m10.25 10.25 l19.5 1 l19.5 19.5 lf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI3_BeginPattern: (Red Stripe)(Red Stripe) 37 19 73 55 [%AI3_Tile(0 O 0 R 0 0.9608 0.9137 0 k 0 0.9608 0.9137 0 K) @(%AI6_BeginPatternLayer0 J 0 j 18 w 4 M []0 d37 37 m73 37 lS%AI6_EndPatternLayer) &] E%AI3_EndPattern%%EndSetup0 A*u1 D0 O0 0 0 1 k0 J 0 j 1 w 4 M []0 d467.8828 393.6963 m460.8965 396.2485 451.0801 399.3794 443.1738 402.2944 c438.7305 403.9331 437.3926 406.6934 434.2285 410.7949 c431.0664 414.8965 430.1113 415.6992 425.1367 416.6758 c419.8486 417.7139 413.0293 419.3442 408.0869 420.4316 c403.1445 421.519 398.9453 422.1611 394.9922 422.3589 c390.3984 422.5889 388.4199 422.3091 385.8984 420.2827 c382.8252 417.812 381.0566 415.4404 379.1289 411.042 c377.2012 406.6436 375.7188 404.3706 372.5059 401.8008 c370.7461 400.3931 370.873 399.519 372.4082 398.8364 c374.9424 397.71 378.7861 397.7632 381.8071 400.0073 C378.249 392.9917 374.9814 385.688 372.0518 378.9868 C370.7236 378.9492 370.2559 378.6665 369.7959 377.7305 c369.2773 376.6758 368.4092 374.6895 367.9746 373.3877 c367.5903 372.2344 367.6636 371.7051 368.5005 370.8511 C367.4492 368.4502 366.4502 366.2021 365.5137 364.1816 c364.7954 362.6313 364.1733 361.3247 363.5693 360.1855 C354.1758 357.5225 346.7051 360.854 342.6548 366.5103 C344.3535 369.7959 346.0903 372.9399 348.6152 376.9102 c350.873 380.459 351.1172 381.9053 351.5391 387.0371 c351.8623 390.9434 353.2734 395.8647 354.8984 400.6855 c356.3906 405.1123 356.8301 407.2227 356.709 410.4038 c356.6016 413.271 356.2979 415.5615 356.02 420.2896 C359.8301 425.4346 364.5298 431.542 367.9346 436.1548 c368.5977 437.0532 368.3184 437.7588 367.8145 438.4956 c364.8203 442.8813 358.7754 447.2109 353.1201 448.6143 C351.8916 467.3203 349.4131 478.3716 345.6074 489.1792 c343.3379 495.6235 343.0859 498.1606 342.4551 503.3599 c341.8262 508.5591 341.748 511.7896 341.9043 516.9893 c342.1499 525.0854 342.0063 529.6724 341.2349 537.4277 C356.1841 551.8335 367.3052 569.3154 369.875 587.1177 c370.1963 589.3413 369.4746 589.9902 367.5547 590.1587 c353.1753 591.4204 327.6611 593.104 302.5547 594.1758 C299.3838 595.2417 295.8936 597.5981 294.7476 599.9595 c293.4819 602.5679 294.0278 609.377 294.5029 614.5381 C297.6035 618.1309 300.105 623.3733 301.0469 627.3599 C301.3198 627.4678 301.5913 627.6064 301.8564 627.791 C301.8564 622.5166 L301.1318 621.5063 300.3125 614.4438 300.0078 609.7769 c299.9219 608.4565 300.1919 607.9482 302.1982 607.9932 c304.1187 608.0366 304.2622 608.3354 304.1377 609.8594 c303.7495 614.6367 302.8911 621.7769 302.1567 622.5698 C302.1567 628.0322 L302.8008 628.5813 303.377 629.406 303.7427 630.6826 c304.6191 633.748 304.6475 635.6309 305.3335 638.4111 c305.8169 640.3774 305.6348 641.9685 304.4604 642.6372 C304.7217 643.7339 305.0439 645.2817 305.2456 646.9329 C331.8018 649.1948 353.9678 653.1248 368.5957 657.1069 c372.5762 658.1909 373.0967 659.5703 368.5352 660.0479 c354.4771 661.5195 328.1895 662.3477 304.5112 662.5684 C303.9414 668.0898 302.9541 674.4756 302.0107 678.2373 c300.8623 682.8062 299.8813 684.1001 294.7451 684.5063 c287.481 685.0811 272.3062 684.8198 266.2256 683.8794 c260.5815 683.0068 258.9072 681.2153 258.0996 677.1401 c257.3438 673.3198 256.5864 667.2488 256.1401 661.5542 C228.1987 660.0527 199.0806 657.1648 184.1982 654.106 c181.5171 653.5547 181.4736 652.2617 184.1382 651.7046 c200.6553 648.2515 232.562 645.2419 256.1147 644.9995 C256.5313 643.9336 256.9526 642.9731 257.2749 642.2698 C256.6724 641.5769 256.5181 640.2351 257.0288 638.3789 c257.7891 635.6177 257.8687 633.7368 258.8291 630.6958 c259.2646 629.3174 259.9316 628.4663 260.6602 627.9434 C260.6602 622.4585 L259.936 621.4529 259.1162 614.3857 258.811 609.7173 c258.7251 608.396 258.9946 607.8882 261.002 607.9331 c262.9224 607.9766 263.0654 608.2749 262.9409 609.7988 c262.5527 614.5757 261.6948 621.7148 260.96 622.51 C260.96 627.7598 L261.2207 627.6064 261.4844 627.4824 261.748 627.3967 C263.0239 621.6074 264.9082 617.7324 268.0088 614.8535 C268.4395 609.9424 268.9492 602.623 267.833 600.7637 c266.7192 598.9063 264.2559 596.8774 259.4287 595.2197 C228.1387 595.1538 190.915 593.3149 173.1377 591.7773 c169.8823 591.4951 169.5332 590.8647 169.9429 588.144 c172.75 569.5313 188.0449 541.6523 211.3037 530.0317 C210.7412 519.3159 210.4624 508.436 209.4087 498.1206 c208.2886 487.1563 208.4155 483.813 209.4893 475.8711 c210.1807 470.7539 212.127 462.5298 214.6563 454.606 C209.5132 450.3115 204.9893 444.4048 202.4063 437.0552 c201.8096 435.3584 202.0723 434.729 203.7261 434.2539 c208.8887 432.7729 214.8848 430.5454 218.7324 428.2114 c221.1733 426.731 219.853 424.8906 221.814 424.1299 c223.0786 423.6396 224.269 423.0791 225.1436 422.6416 C224.2793 418.8691 225.9775 415.6675 226.5313 412.3809 C219.498 402.519 211.7798 390.1787 205.5669 377.8711 c195.79 358.5 189.5522 340.4395 181.9976 325.8477 c181.3037 324.5078 181.4766 324.0469 183.2461 323.3027 C181.2056 318.0996 179.2437 312.9531 179.4766 308.6016 c179.7139 304.1641 181.2104 300.6636 183.6489 296.2456 C179.8315 288.4009 178.7285 279.2939 177.7461 262.9043 c176.9741 250.0264 175.0142 241.7344 170.2124 233.4512 c165.4106 225.166 157.667 213.4023 150.644 205.7793 c146.8325 201.6406 147.043 199.6563 147.063 192.043 c147.0889 182.3086 144.6255 166.1875 142.9414 159.1563 c141.894 154.7852 142.167 152.5078 144.1934 151.0723 c146.1333 149.6973 146.9229 147.6445 147.2129 145.0391 c147.5957 141.6016 149.0288 140.3047 151.2144 140.2012 c154.3657 140.0527 155.6567 138.8496 159.1001 138.8633 c160.9189 138.8691 162.0479 139.8906 164.1543 139.9824 c165.6167 140.0488 166.0591 140.4766 166.3477 141.4727 c166.6484 142.5137 166.7603 143.7246 166.6274 144.7344 c166.3374 146.8965 165.2324 146.791 164.1899 148.248 c162.8984 150.0488 162.1299 150.4004 160.1465 151.166 c155.4341 152.9844 154.7261 155.2598 154.8164 159.9004 c154.9697 167.8203 156.5073 178.3516 158.1211 184.8066 c159.1636 188.9766 161.1963 192.4199 165.1167 196.9531 c169.2876 201.7793 171.4727 203.377 176.0947 206.7402 c180.7168 210.1016 185.8291 214.8027 190.9214 221.0449 c194.9028 225.9258 198.2524 231.0898 200.7051 232.25 c202.9385 233.3057 206.082 234.082 208.5898 234.8662 C204.6299 225.561 198.895 214.5903 195.9634 210.2207 c192.9019 205.6582 192.9619 203.918 194.6426 198.1563 c196.3877 192.1719 199.0391 178.9004 199.6846 174.2207 c200.1846 170.5898 200.0674 168.1172 202.2949 166.7109 c204.5225 165.3027 205.6294 163.9551 206.4082 161.6074 c207.5508 158.168 209.1353 156.9238 211.3208 156.7988 c214.0391 156.6387 215.5283 155.8008 218.0894 155.8008 c219.9077 155.8008 221.2031 156.4609 223.3115 156.5039 c224.7754 156.5332 225.3076 156.9316 225.5396 157.9414 c225.7559 158.8789 225.8037 160.0684 225.6938 161.0781 c225.4561 163.248 223.3262 163.918 222.3179 165.4004 c221.0698 167.2305 220.3516 167.709 218.3452 168.4121 c213.9966 169.9355 211.8823 171.4043 211.0166 174.8086 c210.0547 178.5879 208.4751 192.375 208.2319 198.0801 c208.1118 200.9023 208.4214 202.8691 210.04 205.1934 c212.2246 208.3276 215.7202 213.0283 219.5659 217.9365 C222.2861 212.7139 225.083 207.375 227.9053 201.9824 C223.7583 197.1528 220.0117 189.9414 219.4126 182.3086 c219.2676 180.459 219.6279 180.3242 221.3335 180.709 c224.5352 181.4277 227.9927 180.9355 234.3789 176.707 c238.521 173.9648 239.8721 172.5137 240.3813 167.3027 c240.9219 161.7813 241.7021 154.8789 244.103 146.6543 c246.6104 138.0664 246.8032 133.9629 244.3433 129.4277 c242.9561 126.8691 239.1465 121.3027 237.5601 118.502 c236.54 116.7031 236.4019 115.1309 238.4609 113.3398 c239.8413 112.1387 245.877 112.416 251.624 114.3379 c257.0693 116.1582 260.9277 119.1309 263.4463 122.8281 c266.1016 126.7207 268.0923 130.4238 269.0825 133.8516 c270.0835 137.3145 269.896 139.8809 268.3662 143.4883 c266.1396 148.7363 265.8589 154.9795 267.6348 161.8789 C271.0522 160.9512 274.8936 157.293 277.876 153.9043 c278.8301 152.8184 280.9067 155.2637 279.8096 156.3594 c275.4033 160.7676 272.9648 167.541 273.1748 175.2734 c273.2876 179.4512 272.8086 181.0723 269.9873 184.625 c267.0044 188.3828 263.7705 190.0078 260.5308 190.1641 c258.6489 190.2559 256.1943 192.6191 254.6279 194.3145 c252.5742 196.5371 252.311 206.4551 251.6914 210.8496 c251.5234 212.0391 251.2744 212.4141 249.9165 212.5117 c248.5 212.6133 246.9321 212.4219 245.8721 212.2451 C242.2524 220.5464 239.6182 229.6235 237.936 238.585 C243.6631 243.8618 244.5166 246.1982 244.2231 254.2598 c243.6177 270.9043 243.5835 282.1113 248.2251 286.4336 C258.2446 285.8306 273.2993 273.5273 290.9858 263.4067 C290.6631 258.8008 290.7739 254.1118 291.4424 248.5762 c292.7983 237.353 294.3652 224.0044 293.812 210.5986 C289.8057 210.583 286.0928 209.9375 283.6802 208.7188 c282.877 208.3145 282.7056 207.7324 283.1997 206.6387 c285.6406 201.2363 290.3955 187.4277 290.082 184.3887 c289.4224 177.9863 285.9136 169.9766 283.96 161 c282.0391 152.1758 281.3789 143.8945 278.6777 136.9902 c275.9766 130.0879 271.2944 124.625 270.9946 120.3633 c270.6987 116.1641 275.9766 105.8359 280.8384 105.8359 c290.0225 105.8359 301.9023 114.8008 302.3271 119.6426 c302.6274 123.0645 301.6069 125.6445 301.5474 129.248 c301.4517 135.0078 302.4473 139.2715 304.0684 145.2734 c305.689 151.2754 306.6494 154.6367 306.7695 158.7207 c306.876 162.3384 305.2412 165.1563 304.5757 168.2588 C308.9746 177.5581 317.3379 190.7837 320.6953 195.873 c321.2813 196.7637 321.2793 197.2227 320.7344 197.957 c318.2295 201.335 314.4849 204.5635 309.8589 206.9121 C313.4224 219.0552 319.9907 234.3975 323.9297 249.8418 C332.9824 247.9126 341.7432 247.8203 350.9458 249.5254 C352.1279 233.6895 351.8853 213.9565 351.1875 194.4336 c350.9541 187.8926 350.6523 179.1152 350.5273 174.9102 c350.2744 166.3516 352.3594 167.5645 353.6348 158.8086 c354.1426 155.3203 354.8223 149.8223 355.0898 145.0352 c355.2969 141.3184 354.9697 138.791 357.1309 137.3496 c359.291 135.9102 360.3125 134.5293 360.9121 132.1289 c361.791 128.6094 363.3086 127.3379 365.5332 127.207 c368.3027 127.0449 369.7559 126.1855 372.377 126.1855 c374.2363 126.1855 375.6172 126.8633 377.7793 126.9063 c379.2793 126.9355 379.8574 127.3438 380.1797 128.377 c380.4805 129.3379 380.6279 130.5527 380.5996 131.5859 c380.5391 133.8086 378.417 134.4941 377.5088 136.0078 c376.3848 137.8809 375.6914 138.3711 373.6973 139.0918 c369.375 140.6504 367.334 142.1523 366.7334 145.6328 c366.0244 149.752 365.4297 162.1367 365.6338 167.1816 c365.8115 171.5488 366.688 179.2944 367.7295 186.2349 C368.499 175.5088 370.7988 167.0425 372.4141 160.4258 c373.1367 157.4688 373.791 154.7832 373.8516 151.5996 c373.9111 148.418 374.6768 147.0938 376.3193 145.9746 c377.6484 145.0664 379.0791 142.8926 379.9951 140.8496 c381.0781 138.4336 382.7139 137.7461 385.4053 137.5176 c387.7373 137.3184 388.6719 137.5449 389.6914 137.459 c390.7129 137.373 391.8867 137.2051 392.752 137.1328 c395.1445 136.9297 395.2324 138.0723 396.1787 138.4688 c396.8066 138.7324 397.5576 138.5508 398.1348 139.5059 c398.668 140.3906 398.3711 141.4961 398.5176 142.873 c398.668 144.2852 398.3379 144.7344 397.4238 145.6211 c396.4941 146.5234 395.1074 147.1699 394.2695 147.9082 c392.7578 149.2422 391.1641 148.9355 389.0098 149.8008 c384.9648 151.4258 384.3223 153.1367 383.6016 157.0391 c382.2305 164.459 380.6309 181.377 381.6406 191.9922 c382.6816 202.957 382.6484 208.6348 383.9619 220.0039 c384.6816 226.248 387.0039 240.0938 389.4844 248.2568 c391.9648 256.4199 397.8867 266.2646 401.335 277.0742 c403.668 284.3877 404.5313 291.3945 402.7695 299.7979 c401.752 304.6504 401.5371 307.9199 402.1289 313.123 c402.8496 319.4473 402.6484 320.9668 401.2754 325.0391 c399.4717 330.3848 399.2676 332.4814 400.626 337.5605 c401.9326 342.4478 404.2188 349.2842 406.022 354.4263 C407.2969 354.4722 407.752 354.7607 408.2031 355.6797 c408.7227 356.7354 409.5898 358.7207 410.0234 360.0215 c410.4478 361.29 410.3174 361.8052 409.2256 362.8257 C409.9658 364.6831 411.6563 368.8364 413.375 372.4463 c414.3076 374.4043 415.0566 374.9805 417.2305 374.918 c422.4688 374.7695 428.4199 374.9727 434.4258 375.9551 c437.1445 376.4004 442.2832 374.5234 447.8184 374.6699 c456.6631 374.9063 462.7598 382.2285 467.7998 385.3418 c470.4258 386.9629 471.5391 387.9609 471.5391 389.3965 c471.5391 391.3086 470.4512 392.7578 467.8828 393.6963 cf0 D326.0869 476.7285 m323.1196 481.6846 320.373 484.5376 316.7734 487.1309 c314.876 488.498 314.1836 488.9526 313.543 491.4639 c311.5107 499.4385 310.2148 506.5664 310.3066 514.9443 C313.4194 516.6045 316.5005 518.4121 319.5313 520.3472 C320.585 512.5957 321.8066 505.9019 322.8379 500.9971 c324.0337 495.3223 323.042 487.0962 326.0869 476.7285 Cf230.1763 507.8047 m231.7417 501.9067 233.3901 497.8018 235.0396 494.0791 c236.9004 489.8774 237.1401 488.8564 237.2002 484.1748 c237.2603 479.4932 237.7139 468.4551 238.1606 461.3052 c238.4009 457.4634 238.2808 456.9233 237.3203 455.1831 c236.6826 454.0278 236.0215 452.7793 235.3838 451.395 C234.7295 455.0522 234.353 458.4878 233.7788 461.105 c233.5215 462.2778 233.1714 462.688 231.8179 462.5459 c231.4487 462.5068 231.0718 462.4492 230.6943 462.3901 C230.2056 468.2905 230.3901 471.541 229.7568 478.2925 c229.1729 484.5259 228.457 485.5552 228.457 490.1973 c228.457 494.2822 229.4478 500.6606 230.1763 507.8047 Cf354.1406 352.3203 m348.0547 350.0815 339.0435 347.8438 332.4829 346.2715 C333.1563 349.8057 333.8071 353.502 334.3979 357.4556 C337.8203 359.2031 339.0601 360.085 340.3081 362.0879 C344.6973 357.0215 351.377 353.9844 359.5488 355.062 C358.2007 354.0347 356.5112 353.1929 354.1406 352.3203 cf*U%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI3 /terminate get execAdobe_pattern_AI3 /terminate get execAdobe_customcolor /terminate get execAdobe_cshow /terminate get execAdobe_packedarray /terminate get exec%%EOF